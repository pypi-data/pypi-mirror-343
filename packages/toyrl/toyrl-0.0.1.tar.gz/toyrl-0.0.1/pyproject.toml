[project]
name = "toyrl"
version = "0.0.1"
description = "A clean reinforcement learning library"
authors = [{ name = "Xiangzhuang Shen", email = "datahonor@gmail.com" }]
license = { text = "Apache-2.0" }
readme = "README.md"


classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">= 3.12"
dependencies = [
    "gymnasium[classic-control]>=1.1.1",
    "numpy>=2.2.5",
    "torch>=2.7.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "ipython",
    "mypy",
    "ruff",
    "pytest",
    "pytest-cov",
    "pytest-sugar",
    "hypothesis>=6.112.0",
    "commitizen",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-material-extensions",
    "mkdocstrings",
    "mkdocs-bibtex",
    "mkdocstrings-python",
    "mkdocs-autorefs",
    "mkdocs-git-committers-plugin-2",
    "mkdocs-git-revision-date-localized-plugin",
]

[project.urls]
"Homepage" = "https://shenxiangzhuang.github.io/toyrl"
"Bug Tracker" = "https://shenxiangzhuang.github.io/toyrl/issues"
"Documentation" = "https://shenxiangzhuang.github.io/toyrl"
"Source Code" = "https://github.com/shenxiangzhuang/toyrl"
"Release Notes" = "https://github.com/ai-glimpse/toyrl/releases"

[tool.setuptools]
zip-safe = true
include-package-data = true

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
    "ipython>=9.1.0",
]


[tool.setuptools.packages.find]
include = ["toyrl*"]
namespaces = false

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true
changelog_incremental = true


[tool.mypy]
ignore_missing_imports = true
#strict = true


# Ruff configuration: https://docs.astral.sh/ruff/configuration/#configuring-ruff
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
select = [
    'F',  # Pyflakes
    'E',  # pycodestyle (Error)
    'I',  # isort
    'D',  # pydocstyle
    'UP', # pyupgrade
]
ignore = [
    "D"
]
pydocstyle = { convention = "google" }

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
