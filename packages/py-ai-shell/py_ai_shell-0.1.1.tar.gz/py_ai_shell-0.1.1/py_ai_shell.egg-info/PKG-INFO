Metadata-Version: 2.2
Name: py-ai-shell
Version: 0.1.1
Summary: AI-powered shell assistant
Home-page: https://github.com/cheney-yan/py-ai-shell
Author: Cheney Yan
Author-email: cheney.yan@example.com
Project-URL: Bug Tracker, https://github.com/cheney-yan/py-ai-shell/issues
Project-URL: Documentation, https://github.com/cheney-yan/py-ai-shell
Project-URL: Source Code, https://github.com/cheney-yan/py-ai-shell
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: openai>=1.0.0
Requires-Dist: click>=8.0.0
Requires-Dist: rich>=10.0.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: pyperclip>=1.8.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: tox>=4.0.0; extra == "dev"
Requires-Dist: twine>=4.0.0; extra == "dev"
Requires-Dist: wheel>=0.40.0; extra == "dev"
Requires-Dist: build>=0.10.0; extra == "dev"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: project-url
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# AI Shell (Python Version)

AI-powered shell assistant that generates and explains shell commands based on natural language prompts.

## Installation

```bash
pip install ai-shell
```

## Usage

```bash
# Start AI Shell
ai

# Run with a prompt
ai "list all files in the current directory"

# Configure AI Shell
ai config set OPENAI_KEY=your_api_key
```

## Features

- Generate shell commands from natural language prompts
- Explain what commands do
- Analyze failed commands and suggest fixes
- Track command history for context
- Support for multiple shells (bash, zsh, fish, PowerShell)
- Configurable API endpoints and models

## Configuration

You can configure AI Shell using the `config` command:

```bash
# Set your OpenAI API key
ai config set OPENAI_KEY=your_api_key

# Set the model to use
ai config set MODEL=gpt-4o-mini

# Enable silent mode (less verbose output)
ai config set SILENT_MODE=true
```

## License

MIT
