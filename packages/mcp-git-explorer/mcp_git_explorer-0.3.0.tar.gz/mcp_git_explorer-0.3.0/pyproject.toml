[project]
name = "mcp-git-explorer"
version = "0.3.0"
description = "Simple MCP server for fetching the remote git repository content as a structured text file"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Jeremiasz Miedzinski", email = "jmiedzinski+mcp-git-explorer@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "gitpython>=3.1.44",
    "mcp[cli]>=1.6.0",
    "tiktoken>=0.9.0",
]

[project.urls]
Homepage = "https://github.com/jmiedzinski/mcp-git-explorer"
Issues = "https://github.com/jmiedzinski/mcp-git-explorer/issues"

[project.scripts]
mcp-git-explorer = "mcp_git_explorer.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.1.0",  # dla raport√≥w pokrycia kodu
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py", "*_tests.py"]
addopts = [
    "--verbose",
    "--cov=mcp_git_explorer",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["mcp_git_explorer"]
omit = [
    "tests/*",
    "**/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
