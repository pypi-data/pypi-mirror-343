# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from composabl_core.proto.composabl.v1 import main_pb2 as composabl_dot_v1_dot_main__pb2


class ComposablStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.make = channel.unary_unary(
            "/composabl.Composabl/make",
            request_serializer=composabl_dot_v1_dot_main__pb2.MakeRequest.SerializeToString,
            response_deserializer=composabl_dot_v1_dot_main__pb2.MakeResponse.FromString,
        )
        self.step = channel.unary_unary(
            "/composabl.Composabl/step",
            request_serializer=composabl_dot_v1_dot_main__pb2.StepRequest.SerializeToString,
            response_deserializer=composabl_dot_v1_dot_main__pb2.StepResponse.FromString,
        )
        self.reset = channel.unary_unary(
            "/composabl.Composabl/reset",
            request_serializer=composabl_dot_v1_dot_main__pb2.ResetRequest.SerializeToString,
            response_deserializer=composabl_dot_v1_dot_main__pb2.ResetResponse.FromString,
        )
        self.close = channel.unary_unary(
            "/composabl.Composabl/close",
            request_serializer=composabl_dot_v1_dot_main__pb2.CloseRequest.SerializeToString,
            response_deserializer=composabl_dot_v1_dot_main__pb2.CloseResponse.FromString,
        )
        self.action_space_sample = channel.unary_unary(
            "/composabl.Composabl/action_space_sample",
            request_serializer=composabl_dot_v1_dot_main__pb2.ActionSpaceSampleRequest.SerializeToString,
            response_deserializer=composabl_dot_v1_dot_main__pb2.ActionSpaceSampleResponse.FromString,
        )
        self.action_space_info = channel.unary_unary(
            "/composabl.Composabl/action_space_info",
            request_serializer=composabl_dot_v1_dot_main__pb2.ActionSpaceInfoRequest.SerializeToString,
            response_deserializer=composabl_dot_v1_dot_main__pb2.ActionSpaceInfoResponse.FromString,
        )
        self.sensor_space_info = channel.unary_unary(
            "/composabl.Composabl/sensor_space_info",
            request_serializer=composabl_dot_v1_dot_main__pb2.SensorSpaceInfoRequest.SerializeToString,
            response_deserializer=composabl_dot_v1_dot_main__pb2.SensorSpaceInfoResponse.FromString,
        )
        self.set_scenario = channel.unary_unary(
            "/composabl.Composabl/set_scenario",
            request_serializer=composabl_dot_v1_dot_main__pb2.SetScenarioRequest.SerializeToString,
            response_deserializer=composabl_dot_v1_dot_main__pb2.SetScenarioResponse.FromString,
        )
        self.get_scenario = channel.unary_unary(
            "/composabl.Composabl/get_scenario",
            request_serializer=composabl_dot_v1_dot_main__pb2.GetScenarioRequest.SerializeToString,
            response_deserializer=composabl_dot_v1_dot_main__pb2.GetScenarioResponse.FromString,
        )
        self.get_render = channel.unary_unary(
            "/composabl.Composabl/get_render",
            request_serializer=composabl_dot_v1_dot_main__pb2.GetRenderRequest.SerializeToString,
            response_deserializer=composabl_dot_v1_dot_main__pb2.GetRenderResponse.FromString,
        )
        self.get_mappings = channel.unary_unary(
            "/composabl.Composabl/get_mappings",
            request_serializer=composabl_dot_v1_dot_main__pb2.GetMappingsRequest.SerializeToString,
            response_deserializer=composabl_dot_v1_dot_main__pb2.GetMappingsResponse.FromString,
        )


class ComposablServicer(object):
    """Missing associated documentation comment in .proto file."""

    def make(self, request, context):
        """Creates the reinforcement learning environment with specified configurations.
        - MakeRequest: Contains parameters to configure the environment.
        - MakeResponse: Returns an identifier for the created environment and possibly other initial setup information.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def step(self, request, context):
        """Advances the environment by one timestep using the action provided in the request.
        - StepRequest: Includes the action to be taken in the current state of the environment.
        - StepResponse: Returns the new state of the environment, reward received, and a flag indicating if the episode has ended.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def reset(self, request, context):
        """Resets the state of the environment, returning it to its initial conditions.
        - ResetRequest: May include parameters for resetting to specific scenarios.
        - ResetResponse: Provides the initial sensor of the reset environment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def close(self, request, context):
        """Performs any necessary cleanup before the environment is closed.
        - CloseRequest: May be empty or include specific closing instructions.
        - CloseResponse: Acknowledges the environment has been successfully closed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def action_space_sample(self, request, context):
        """Generates a sample action from the environment's action space.
        - ActionSpaceSampleRequest: May be empty or specify particular sampling criteria.
        - ActionSpaceSampleResponse: Provides a sample action from the action space.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def action_space_info(self, request, context):
        """Retrieves information about the environment's action space.
        - ActionSpaceInfoRequest: May be empty or include parameters for the information request.
        - ActionSpaceInfoResponse: Returns detailed information about the action space.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def sensor_space_info(self, request, context):
        """Retrieves information about the environment's sensor space.
        - SensorSpaceInfoRequest: May be empty or include parameters for the information request.
        - SensorSpaceInfoResponse: Returns detailed information about the sensor space.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def set_scenario(self, request, context):
        """Sets the current scenario for the environment.
        - SetScenarioRequest: Includes parameters defining the scenario to set.
        - SetScenarioResponse: Acknowledges the scenario has been set.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def get_scenario(self, request, context):
        """Retrieves the current scenario of the environment.
        - GetScenarioRequest: May be empty if simply retrieving the current scenario.
        - GetScenarioResponse: Returns details of the current scenario.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def get_render(self, request, context):
        """Retrieves the current render of the environment.
        - GetRenderRequest: May include parameters specifying the render details.
        - GetRenderResponse: Provides the current render of the environment.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def get_mappings(self, request, context):
        """Retrieves the obs and action spaces as well as default sensor mappings"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ComposablServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "make": grpc.unary_unary_rpc_method_handler(
            servicer.make,
            request_deserializer=composabl_dot_v1_dot_main__pb2.MakeRequest.FromString,
            response_serializer=composabl_dot_v1_dot_main__pb2.MakeResponse.SerializeToString,
        ),
        "step": grpc.unary_unary_rpc_method_handler(
            servicer.step,
            request_deserializer=composabl_dot_v1_dot_main__pb2.StepRequest.FromString,
            response_serializer=composabl_dot_v1_dot_main__pb2.StepResponse.SerializeToString,
        ),
        "reset": grpc.unary_unary_rpc_method_handler(
            servicer.reset,
            request_deserializer=composabl_dot_v1_dot_main__pb2.ResetRequest.FromString,
            response_serializer=composabl_dot_v1_dot_main__pb2.ResetResponse.SerializeToString,
        ),
        "close": grpc.unary_unary_rpc_method_handler(
            servicer.close,
            request_deserializer=composabl_dot_v1_dot_main__pb2.CloseRequest.FromString,
            response_serializer=composabl_dot_v1_dot_main__pb2.CloseResponse.SerializeToString,
        ),
        "action_space_sample": grpc.unary_unary_rpc_method_handler(
            servicer.action_space_sample,
            request_deserializer=composabl_dot_v1_dot_main__pb2.ActionSpaceSampleRequest.FromString,
            response_serializer=composabl_dot_v1_dot_main__pb2.ActionSpaceSampleResponse.SerializeToString,
        ),
        "action_space_info": grpc.unary_unary_rpc_method_handler(
            servicer.action_space_info,
            request_deserializer=composabl_dot_v1_dot_main__pb2.ActionSpaceInfoRequest.FromString,
            response_serializer=composabl_dot_v1_dot_main__pb2.ActionSpaceInfoResponse.SerializeToString,
        ),
        "sensor_space_info": grpc.unary_unary_rpc_method_handler(
            servicer.sensor_space_info,
            request_deserializer=composabl_dot_v1_dot_main__pb2.SensorSpaceInfoRequest.FromString,
            response_serializer=composabl_dot_v1_dot_main__pb2.SensorSpaceInfoResponse.SerializeToString,
        ),
        "set_scenario": grpc.unary_unary_rpc_method_handler(
            servicer.set_scenario,
            request_deserializer=composabl_dot_v1_dot_main__pb2.SetScenarioRequest.FromString,
            response_serializer=composabl_dot_v1_dot_main__pb2.SetScenarioResponse.SerializeToString,
        ),
        "get_scenario": grpc.unary_unary_rpc_method_handler(
            servicer.get_scenario,
            request_deserializer=composabl_dot_v1_dot_main__pb2.GetScenarioRequest.FromString,
            response_serializer=composabl_dot_v1_dot_main__pb2.GetScenarioResponse.SerializeToString,
        ),
        "get_render": grpc.unary_unary_rpc_method_handler(
            servicer.get_render,
            request_deserializer=composabl_dot_v1_dot_main__pb2.GetRenderRequest.FromString,
            response_serializer=composabl_dot_v1_dot_main__pb2.GetRenderResponse.SerializeToString,
        ),
        "get_mappings": grpc.unary_unary_rpc_method_handler(
            servicer.get_mappings,
            request_deserializer=composabl_dot_v1_dot_main__pb2.GetMappingsRequest.FromString,
            response_serializer=composabl_dot_v1_dot_main__pb2.GetMappingsResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "composabl.Composabl", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Composabl(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def make(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/composabl.Composabl/make",
            composabl_dot_v1_dot_main__pb2.MakeRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.MakeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def step(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/composabl.Composabl/step",
            composabl_dot_v1_dot_main__pb2.StepRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.StepResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def reset(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/composabl.Composabl/reset",
            composabl_dot_v1_dot_main__pb2.ResetRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.ResetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def close(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/composabl.Composabl/close",
            composabl_dot_v1_dot_main__pb2.CloseRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.CloseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def action_space_sample(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/composabl.Composabl/action_space_sample",
            composabl_dot_v1_dot_main__pb2.ActionSpaceSampleRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.ActionSpaceSampleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def action_space_info(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/composabl.Composabl/action_space_info",
            composabl_dot_v1_dot_main__pb2.ActionSpaceInfoRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.ActionSpaceInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def sensor_space_info(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/composabl.Composabl/sensor_space_info",
            composabl_dot_v1_dot_main__pb2.SensorSpaceInfoRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.SensorSpaceInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def set_scenario(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/composabl.Composabl/set_scenario",
            composabl_dot_v1_dot_main__pb2.SetScenarioRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.SetScenarioResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def get_scenario(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/composabl.Composabl/get_scenario",
            composabl_dot_v1_dot_main__pb2.GetScenarioRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.GetScenarioResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def get_render(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/composabl.Composabl/get_render",
            composabl_dot_v1_dot_main__pb2.GetRenderRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.GetRenderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def get_mappings(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/composabl.Composabl/get_mappings",
            composabl_dot_v1_dot_main__pb2.GetMappingsRequest.SerializeToString,
            composabl_dot_v1_dot_main__pb2.GetMappingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
