# pyproject.toml
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# This section is for Poetry, a dependency management tool for Python
# It is used to manage dependencies, build packages, and publish them to PyPI
[tool.poetry]
name = "flask-api-sqlalchemy"
version = "0.1.4"
description = "Flask extension for automatically generating RESTful APIs from SQLAlchemy models"
authors = ["Sean McCarthy <sean.mccarthy@hotmail.com>"]
license = "MIT"
repository = "https://github.com/mccarthysean/flask-api-sqlalchemy"
homepage = "https://mccarthysean.dev/flask-api-sqlalchemy"
documentation = "https://mccarthysean.dev/flask-api-sqlalchemy"
readme = "README.md"
package-mode = true
keywords = ["flask", "sqlalchemy", "api", "restful"]

[tool.poetry.dependencies]
# Specify Python version explicitly to ensure consistency
python = "^3.9"
flask = ">=2.0.0"           # Flask framework
flask-sqlalchemy = "^3.1.1"
flask-restx = "^1.3.0"
marshmallow = "^3.0.0"      # Object serialization/deserialization
inflection = "^0.5.1"

[tool.poetry.group.dev.dependencies]
# Development dependencies
pytest = "^6.0"                                                 # Testing framework
pytest-cov = "^2.10"                                            # Coverage reporting for pytest
ruff = "^0.11.6"
pyright = "^1.1.399"
mkdocs = "^1.6.1"
mkdocs-material = { extras = ["imaging"], version = "^9.6.12" }
mkdocs-redirects = "^1.2.2"
mdx-include = "^1.4.2"
mkdocs-macros-plugin = "^1.3.7"
pyyaml = "^6.0.2"
pygithub = "^2.6.1"
pydantic = "^2.11.3"
pydantic-settings = "^2.9.1"
httpx = "^0.28.1"
poetry-plugin-export = "^1.9.0"
psycopg2-binary = "^2.9.10"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--strict-markers -v"

# Adding Ruff configuration
[tool.ruff]
# Enable pycodestyle ('E'), Pyflakes ('F'), and import sorting ('I')
select = ["E", "F", "I"]
# Exclude a variety of commonly ignored directories
exclude = [".git", ".pytest_cache", "__pycache__", "dist"]
# Line length setting
line-length = 88
# Allow autofix for all enabled rules (when `--fix` is provided)
fixable = ["E", "F", "I"]
# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
