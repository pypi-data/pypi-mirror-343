Metadata-Version: 2.1
Name: mojo-config
Version: 2.0.5
Summary: Automation Mojo Configuration Package
License: LICENSE.txt
Keywords: python
Requires-Python: >=3.9,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Provides-Extra: couchdb
Provides-Extra: mongodb
Requires-Dist: couchdb (>=1.3,<2.0) ; extra == "couchdb"
Requires-Dist: cryptography (>=41.0.3,<43.0.0)
Requires-Dist: mojo-collections (>=2.0.1,<2.1.0)
Requires-Dist: mojo-credentials (>=2.0.0,<2.1.0)
Requires-Dist: mojo-dataprofiles (>=2.0.3,<2.1.0)
Requires-Dist: mojo-errors (>=2.0.0,<2.1.0)
Requires-Dist: mojo-extension (>=2.0.4,<2.1.0)
Requires-Dist: mojo-startup (>=2.0.5,<2.1.0)
Requires-Dist: pymongo[srv] (>=4.0.1,<5.0.0) ; extra == "mongodb"
Requires-Dist: pyyaml (>=6.0.1,<7.0.0)
Requires-Dist: requests (>=2.32.3,<3.0.0)
Description-Content-Type: text/x-rst

========================================
DEPRICATED - THIS MODULE WILL BE REMOVED
========================================
This package will be removed on Aug 1st, the root namespace 'mojo.*' conflicts with
the 'mojo' programming language.   For information about using the newer packages,
contact Automation Mojo at:

    automationx@automationmojo.com


=====================================
Automation Mojo Configuration Package
=====================================
The Automation Mojo configuration package is a package that provides configuration management for distributed
automation projects.

=================
Code Organization
=================
* .vscode - Common tasks
* development - This is where the runtime environment scripts are located
* repository-setup - Scripts for homing your repository and to your checkout and machine setup
* userguide - Where you put your user guide
* source/packages - Put your root folder here 'source/packages/(root-module-folder)'
* source/sphinx - This is the Sphinx documentation folder
* workspaces - This is where you add VSCode workspaces templates and where workspaces show up when homed.

==========
References
==========

- `User Guide <userguide/userguide.rst>`
- `Coding Standards <userguide/10-00-coding-standards.rst>`

