// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>

#include <frc\drive\RobotDriveBase.h>

#include <frc/motorcontrol/MotorController.h>
#include <wpi/SmallString.h>

#include <rpygen/frc__MotorSafety.hpp>

namespace frc {

template <typename CfgBase = rpygen::EmptyTrampolineCfg>
struct PyTrampolineCfg_RobotDriveBase :
  frc::PyTrampolineCfg_MotorSafety<
  CfgBase
  >
{
  using Base = frc::RobotDriveBase;
  using override_base_StopMotor_v = frc::RobotDriveBase;
  using override_base_KGetDescription_v = frc::RobotDriveBase;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_RobotDriveBase =
  frc::PyTrampoline_MotorSafety<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_RobotDriveBase : PyTrampolineBase_RobotDriveBase<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_RobotDriveBase<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_RobotDriveBase;
  using MotorType [[maybe_unused]] = typename frc::RobotDriveBase::MotorType;

  #ifndef RPYGEN_DISABLE_StopMotor_v
    void StopMotor() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      RPYBUILD_OVERRIDE_PURE_NAME(RobotDriveBase, PYBIND11_TYPE(void), LookupBase,
        "stopMotor", StopMotor, );
    }
  #endif

  #ifndef RPYGEN_DISABLE_KGetDescription_v
    std::string GetDescription() const override {
      using LookupBase = typename PyTrampolineCfg::Base;
      RPYBUILD_OVERRIDE_PURE_NAME(RobotDriveBase, PYBIND11_TYPE(std::string), LookupBase,
        "getDescription", GetDescription, );
    }
  #endif

  #ifndef RPYBLD_DISABLE_Desaturate_Tspan
    #ifndef RPYBLD_UDISABLE_frc__RobotDriveBase_Desaturate
      using frc::RobotDriveBase::Desaturate;
      #define RPYBLD_UDISABLE_frc__RobotDriveBase_Desaturate
    #endif
  #endif

  using frc::RobotDriveBase::kDefaultDeadband;
  using frc::RobotDriveBase::kDefaultMaxOutput;
  using frc::RobotDriveBase::m_deadband;
  using frc::RobotDriveBase::m_maxOutput;
};

}; // namespace frc
