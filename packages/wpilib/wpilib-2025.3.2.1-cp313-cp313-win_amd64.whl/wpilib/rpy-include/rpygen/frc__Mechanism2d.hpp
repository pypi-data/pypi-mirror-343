// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>

#include <frc\smartdashboard\Mechanism2d.h>

#include <wpi/sendable/SendableBuilder.h>

#include <rpygen/nt__NTSendable.hpp>

namespace frc {

template <typename CfgBase = rpygen::EmptyTrampolineCfg>
struct PyTrampolineCfg_Mechanism2d :
  nt::PyTrampolineCfg_NTSendable<
  CfgBase
  >
{
  using Base = frc::Mechanism2d;
  using override_base_InitSendable_RTNTSendableBuilder = frc::Mechanism2d;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_Mechanism2d =
  nt::PyTrampoline_NTSendable<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_Mechanism2d : PyTrampolineBase_Mechanism2d<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_Mechanism2d<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_Mechanism2d;

  #ifndef RPYGEN_DISABLE_InitSendable_RTNTSendableBuilder
    void InitSendable(nt::NTSendableBuilder& builder) override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_InitSendable_RTNTSendableBuilder;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
        "initSendable", builder);
      return CxxCallBase::InitSendable(std::forward<decltype(builder)>(builder));
    }
  #endif
};

}; // namespace frc
