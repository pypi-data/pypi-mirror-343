[oracle]
get_schemas="SELECT username FROM all_users WHERE oracle_maintained = 'N' AND username NOT IN ('SYS','SYSTEM','OUTLN','ANONYMOUS','APEX_PUBLIC_USER','AURORA$JIS$UTILITY$','DBSNMP','PDBADMIN','GGSYS','GSMADMIN_INTERNAL','MGMT_VIEW','OJVMSYS','ORDDATA','ORDPLUGINS','ORDSYS','REMOTE_SCHEDULER_AGENT','SYS$UMF','SYSBACKUP','SYSDG','SYSKM','SYSRAC','WMSYS','XDB') ORDER BY username"
get_tables="SELECT table_name FROM all_tables WHERE owner = '!schema_name!' AND tablespace_name NOT IN ('SYSTEM', 'SYSAUX')"
get_ddl="SELECT DBMS_METADATA.GET_DDL('TABLE', '!table_name!', '!schema_name!') AS ddl FROM dual"
get_columns="SELECT column_name FROM all_tab_columns WHERE owner = '!schema_name!' AND table_name = '!table_name!' ORDER BY column_id"
get_sample_data="SELECT * FROM !schema_name!.!table_name! WHERE ROWNUM <= 5"
get_views="SELECT view_name FROM all_views WHERE owner = '!schema_name!'"
get_view_ddl="SELECT DBMS_METADATA.GET_DDL('VIEW', '!table_name!', '!schema_name!') AS ddl FROM dual"

[mysql]
get_schemas="SELECT SCHEMA_NAME FROM information_schema.schemata WHERE SCHEMA_NAME = '!database_name!'"
get_tables="SELECT TABLE_NAME as table_name FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '!database_name!'"
get_ddl="SHOW CREATE TABLE !database_name!.!table_name!"
get_columns="SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '!database_name!' AND TABLE_NAME = '!table_name!' ORDER BY ORDINAL_POSITION"
get_sample_data="SELECT * FROM !database_name!.!table_name! ORDER BY RAND() LIMIT 5"
get_views="SELECT TABLE_NAME as view_name FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_SCHEMA = '!database_name!'"
get_view_ddl="SHOW CREATE VIEW !database_name!.!table_name!"

[postgresql]
get_schemas="SELECT schema_name FROM !database_name!.information_schema.schemata WHERE catalog_name = '!database_name!' AND schema_name NOT IN ('information_schema', 'pg_catalog', 'pg_toast')"
get_tables="SELECT table_name FROM information_schema.tables WHERE table_catalog = '!database_name!' AND table_schema = '!schema_name!' AND table_type = 'BASE TABLE'"
get_ddl="SELECT 'CREATE TABLE ' || table_schema || '.' || table_name || E'\n(\n' || string_agg('    ' || column_name || ' ' || CASE WHEN udt_name = 'varchar' THEN 'character varying(' || character_maximum_length || ')' WHEN udt_name = 'bpchar' THEN 'character(' || character_maximum_length || ')' WHEN udt_name = 'numeric' AND numeric_precision IS NOT NULL AND numeric_scale IS NOT NULL THEN 'numeric(' || numeric_precision || ',' || numeric_scale || ')' ELSE data_type END || CASE WHEN column_default IS NOT NULL THEN ' DEFAULT ' || column_default ELSE '' END || CASE WHEN is_nullable = 'NO' THEN ' NOT NULL' ELSE '' END, E',\n' ORDER BY ordinal_position) || CASE WHEN (SELECT string_agg(E',\n    CONSTRAINT ' || constraint_name || ' ' || constraint_definition, '') FROM (SELECT DISTINCT pgc.conname AS constraint_name, pg_get_constraintdef(pgc.oid) AS constraint_definition FROM pg_constraint pgc JOIN pg_namespace nsp ON nsp.oid = pgc.connamespace WHERE conrelid = (quote_ident(table_schema) || '.' || quote_ident(table_name))::regclass AND nsp.nspname = table_schema) constraints) IS NOT NULL THEN E',\n' || (SELECT string_agg(E'    CONSTRAINT ' || constraint_name || ' ' || constraint_definition, E',\n') FROM (SELECT DISTINCT pgc.conname AS constraint_name, pg_get_constraintdef(pgc.oid) AS constraint_definition FROM pg_constraint pgc JOIN pg_namespace nsp ON nsp.oid = pgc.connamespace WHERE conrelid = (quote_ident(table_schema) || '.' || quote_ident(table_name))::regclass AND nsp.nspname = table_schema) constraints) ELSE '' END || E'\n);' as ddl FROM information_schema.columns WHERE table_schema = '!schema_name!' AND table_name = '!table_name!' GROUP BY table_schema, table_name"
get_columns="SELECT column_name FROM information_schema.columns WHERE table_catalog = '!database_name!' AND table_schema = '!schema_name!' AND table_name = '!table_name!' ORDER BY ordinal_position"
get_sample_data="SELECT * FROM !database_name!.!schema_name!.!table_name! ORDER BY RANDOM() LIMIT 5"
get_views="SELECT table_name as view_name FROM information_schema.views WHERE table_catalog = '!database_name!' AND table_schema = '!schema_name!'"
get_view_ddl="SELECT pg_get_viewdef('!schema_name!.!table_name!'::regclass, true) as ddl"

[sqlite]
get_schemas="SELECT 'main' as schema_name"
get_tables="SELECT name as table_name FROM sqlite_master WHERE type='table'"
get_ddl="SELECT sql FROM sqlite_master WHERE type='table' AND name='!table_name!'"
get_columns="SELECT name FROM pragma_table_info('!table_name!')"
get_sample_data="SELECT * FROM !table_name! ORDER BY RANDOM() LIMIT 5"
get_views="SELECT name as view_name FROM sqlite_master WHERE type='view'"
get_view_ddl="SELECT sql FROM sqlite_master WHERE type='view' AND name='!table_name!'"

[snowflake]
get_schemas="SHOW SCHEMAS IN DATABASE !database_name!"
get_tables="SHOW TABLES IN SCHEMA !database_name!.!schema_name!"
get_ddl="SELECT GET_DDL('TABLE', '!database_name!.!schema_name!.!table_name!')"
get_columns="SHOW COLUMNS IN TABLE !database_name!.!schema_name!.!table_name!"
get_sample_data="SELECT * FROM !database_name!.!schema_name!.!table_name! SAMPLE (5 ROWS)"
get_views="SHOW VIEWS IN SCHEMA !database_name!.!schema_name!"
get_view_ddl="SELECT GET_DDL('VIEW', '!database_name!.!schema_name!.!table_name!')"

[bigquery]
get_schemas="SELECT schema_name FROM INFORMATION_SCHEMA.SCHEMATA"
get_tables="SELECT table_name FROM !database_name!.!schema_name!.INFORMATION_SCHEMA.TABLES WHERE table_schema = '!schema_name!' AND table_type = 'BASE TABLE'"
get_ddl="SELECT DDL FROM !database_name!.!schema_name!.INFORMATION_SCHEMA.TABLES WHERE table_name = '!table_name!'"
get_columns="SELECT column_name FROM !database_name!.!schema_name!.INFORMATION_SCHEMA.COLUMNS WHERE table_name = '!table_name!' ORDER BY ordinal_position"
get_sample_data="SELECT * FROM !database_name!.!schema_name!.!table_name! LIMIT 5"
get_views="SELECT table_name as view_name FROM !database_name!.!schema_name!.INFORMATION_SCHEMA.VIEWS WHERE table_schema = '!schema_name!'"
get_view_ddl="SELECT view_definition FROM !database_name!.!schema_name!.INFORMATION_SCHEMA.VIEWS WHERE table_name = '!table_name!'"

[databricks]
get_schemas="SHOW SCHEMAS"
get_tables="SHOW TABLES IN !database_name!.!schema_name!"
get_ddl="SHOW CREATE TABLE !database_name!.!schema_name!.!table_name!"
get_columns="DESCRIBE !database_name!.!schema_name!.!table_name!"
get_sample_data="SELECT * FROM !database_name!.!schema_name!.!table_name! LIMIT 5"
get_views="SHOW VIEWS IN !database_name!.!schema_name!"
get_view_ddl="DESCRIBE FORMATTED !database_name!.!schema_name!.!table_name!""

[redshift]
get_schemas="SELECT DISTINCT schemaname AS schema_name FROM pg_tables WHERE schemaname NOT IN ('information_schema','pg_catalog','pg_internal')"
get_tables="SELECT tablename AS table_name FROM pg_tables WHERE schemaname = '!schema_name!' AND tablename NOT LIKE 'pg_%%' AND tablename NOT LIKE 'stl_%%' AND tablename NOT LIKE 'stv_%%'"
get_sample_data="SELECT * FROM !schema_name!.!table_name! ORDER BY RANDOM() LIMIT 5"
get_views="SELECT viewname AS view_name FROM pg_views WHERE schemaname = '!schema_name!' AND viewname NOT LIKE 'pg_%%' AND viewname NOT LIKE 'stl_%%' AND viewname NOT LIKE 'stv_%%'"
get_view_ddl="SELECT 'CREATE OR REPLACE VIEW ' || schemaname || '.' || viewname || ' AS ' || definition FROM pg_views WHERE schemaname = '!schema_name!' AND viewname = '!table_name!'"
