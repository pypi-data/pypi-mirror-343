# This is a basic workflow to help you get started with Actions

name: Build documentation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  #push:
  #    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "documentation"
  gh-pages:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache
        uses: actions/cache@v4.2.3
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: |
            ~/.cache/pip
            /usr/bin/pandoc
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-dependencies

      # Runs a single command using the runners shell
      - name: Install dependecies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          pip install scrap_engine pdoc3 pyyaml
          sudo apt-get -qq install pandoc

      - name: Preprocess page files
        run: |
          mkdir /tmp/pokete
          python util.py prepare-pages before
          cp -r ./assets/ /tmp/assets
          cp -r ./* /tmp/pokete
      - name: Switch branch to gh-pages
        uses: actions/checkout/@v2
        with:
          ref: "gh-pages"
      - name: Generate gh-pages page
        run: |
          rm -rf ./assets ./wiki-multi
          mv '/tmp/assets/' .
          python /tmp/pokete/util.py prepare-pages after
      # Push to github_pages
      - name: Release documentation
        run: |
          git config --local user.name ${{ github.actor }}
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          if [[ $(git diff) != "" ]]
          then
          git add .
            git commit -m "Updated pages"
          fi

      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          force: false

  wiki:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache
        uses: actions/cache@v2.1.6
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: |
            ~/.cache/pip
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-dependencies

      # Runs a single command using the runners shell
      - name: Install dependecies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          pip install scrap_engine pyyaml

      - name: Make multipage wiki
        run: |
          python util.py wiki --verbose --single --multi --pics
          mkdir /tmp/gen-wiki
          cp -r HowToPlay.md DevGuide.md wiki.md /tmp/gen-wiki
      - name: Switch to wiki repository
        uses: actions/checkout@v4
        with:
          repository: "lxgr-linux/pokete.wiki"
      - name: Move files back to current work dir
        run: |
          rm -rf ./HowToPlay.md DevGuide.md wiki.md
          cp -r /tmp/gen-wiki/* .
      # Push to github_pages
      - name: Release documentation
        run: |
          git config --local user.name  ${{ github.actor }}
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          if [[ $(git diff) != "" ]]
          then
          git add .
            git commit -m "Updated pokete-wiki"
          fi

      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          repository: "lxgr-linux/pokete.wiki"
          branch: "master"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: false
