{"version":3,"file":"lib_index_js.cedf14dea7bb9ed474f0.js","mappings":"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","sources":["webpack://quapp-jupyterlab-s3-bridge/./src/index.ts","webpack://quapp-jupyterlab-s3-bridge/./src/save_button.ts","webpack://quapp-jupyterlab-s3-bridge/./src/toolbar.ts","webpack://quapp-jupyterlab-s3-bridge/./src/versions_dropdown.ts"],"sourcesContent":["// File: index.ts\nimport { JupyterFrontEnd, JupyterFrontEndPlugin } from '@jupyterlab/application';\nimport { IFileBrowserFactory, FileBrowser } from '@jupyterlab/filebrowser';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { PanelLayout } from '@lumino/widgets';\nimport { VersionsDropdownWidget } from './versions_dropdown';\nimport { createSaveToS3Button } from './save_button';\nimport { createVersionToolbar } from './toolbar';\n\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'quapp_jupyterlab_s3_bridge:plugin',\n  autoStart: true,\n  requires: [IFileBrowserFactory],\n  optional: [ISettingRegistry],\n  activate: (app: JupyterFrontEnd, factory, settingRegistry) => {\n    console.log('JupyterLab S3 extension activated.');\n\n    if (settingRegistry) {\n      void settingRegistry.load(plugin.id).then((settings: ISettingRegistry.ISettings) => {\n        console.log('Settings:', settings.composite);\n      });\n    }\n\n    function enhanceBrowser(browserId: string) {\n      const browser = factory.tracker.find((b: FileBrowser) => b.id === browserId);\n      if (!browser) return;\n\n      const dropdown = new VersionsDropdownWidget();\n      const saveBtn = createSaveToS3Button(() => dropdown.refresh());\n      const toolbar = createVersionToolbar(dropdown);\n\n      setTimeout(() => {\n        if (!browser.toolbar.node.querySelector('#saveS3Button')) {\n          browser.toolbar.insertItem(1, 'saveS3', saveBtn);\n          (browser.layout as PanelLayout).insertWidget(1, toolbar);\n        }\n      }, 100);\n    }\n\n    factory.tracker.forEach((browser: FileBrowser) => enhanceBrowser(browser.id));\n    factory.tracker.widgetAdded.connect((_: unknown, browser: FileBrowser) => enhanceBrowser(browser.id));\n  }\n};\n\nexport default plugin;\n","// File: save_button.ts\nimport { ToolbarButton, saveIcon } from '@jupyterlab/ui-components';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n\n\n// function getXsrfToken(): string {\n//   const matches = document.cookie.match(/_xsrf=([^;]+)/);\n//   return matches ? decodeURIComponent(matches[1]) : '';\n// }\n\nexport function createSaveToS3Button(onSuccess: () => void): ToolbarButton {\n  return new ToolbarButton({\n    icon: saveIcon,\n    tooltip: 'Push local changes to S3 backend',\n    onClick: async () => {\n      try {\n        const settings = ServerConnection.makeSettings();\n        const url = URLExt.join(settings.baseUrl, 's3bridge', 'upload-s3');\n        // const xsrfToken = getXsrfToken();\n\n        const resp = await fetch(url, { \n          method: 'POST', \n          credentials: 'include',\n          // headers: {\n          //   'X-XSRFToken': xsrfToken,\n          // }, \n        });\n        if (!resp.ok) throw new Error(`Upload error: ${resp.status}`);\n        await resp.json();\n        onSuccess();\n      } catch (err) {\n        console.error('Upload failed:', err);\n        alert('Upload failed: ' + err);\n      }\n    }\n  });\n}\n","// File: toolbar.ts\nimport { Widget } from '@lumino/widgets';\nimport { VersionsDropdownWidget } from './versions_dropdown';\n\nexport function createVersionToolbar(dropdown: VersionsDropdownWidget): Widget {\n  const toolbar = new Widget();\n  toolbar.addClass('jp-FileBrowser-version-toolbar');\n  toolbar.node.style.display = 'flex';\n  toolbar.node.style.alignItems = 'center';\n  toolbar.node.style.padding = '2px 4px';\n  toolbar.node.style.borderTop = '1px solid var(--jp-border-color2)';\n\n  const label = document.createElement('span');\n  label.textContent = 'Version:';\n  label.style.margin = '0 4px';\n\n  toolbar.node.appendChild(label);\n  toolbar.node.appendChild(dropdown.node);\n\n  return toolbar;\n}\n","// File: versions_dropdown.ts\nimport { Widget } from '@lumino/widgets';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n\nexport class VersionsDropdownWidget extends Widget {\n  private _select: HTMLSelectElement;\n  private _versionChanged = new Signal<this, string>(this);\n\n  constructor() {\n    super();\n    this.addClass('versions-dropdown-widget');\n    this._select = document.createElement('select');\n    this._select.style.margin = '0 4px';\n    this._select.style.width = '150px';\n    this._select.addEventListener('change', this._onChange.bind(this));\n    this.node.appendChild(this._select);\n    void this.refresh();\n  }\n\n  get versionChanged(): ISignal<this, string> {\n    return this._versionChanged;\n  }\n\n  get selectedVersion(): string {\n    return this._select.value;\n  }\n\n  async refresh(): Promise<void> {\n    try {\n      const settings = ServerConnection.makeSettings();\n      const url = URLExt.join(settings.baseUrl, 's3bridge', 'versions');\n      const response = await fetch(url, { credentials: 'include' });\n      if (!response.ok) throw new Error(`Fetch failed: ${response.status}`);\n\n      const result = await response.json();\n      const versions = (result.data as any[]).map(item => Number(item.version)).sort((a, b) => a - b);\n\n      this._select.innerHTML = '';\n      versions.forEach(v => {\n        const opt = document.createElement('option');\n        opt.value = v.toString();\n        opt.textContent = `v${v}`;\n        this._select.appendChild(opt);\n      });\n\n      if (versions.length > 0) {\n        this._select.value = versions[versions.length - 1].toString();\n      }\n    } catch (err) {\n      console.error('Dropdown load error:', err);\n    }\n  }\n\n  private async _onChange(): Promise<void> {\n    const selected = this.selectedVersion;\n    try {\n      const settings = ServerConnection.makeSettings();\n      const url = URLExt.join(settings.baseUrl, 's3bridge', 'versions', selected);\n      const resp = await fetch(url, { method: 'PATCH', credentials: 'include' });\n      if (!resp.ok) throw new Error(`PATCH failed: ${resp.status}`);\n      await resp.json();\n      this._versionChanged.emit(selected);\n    } catch (err) {\n      console.error('Version switch failed:', err);\n    }\n  }\n\n  dispose(): void {\n    this._select.removeEventListener('change', this._onChange);\n    super.dispose();\n  }\n}\n"],"names":[],"sourceRoot":""}