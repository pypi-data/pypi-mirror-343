# coding: utf-8

"""
    OpenPay API

    super charge your subscription management.

    The version of the OpenAPI document: 1.2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictStr

class CreatePortalSessionRequest(BaseModel):
    """
    CreatePortalSessionRequest
    """
    customer_id: StrictStr = Field(default=..., description="The ID of an existing customer.")
    return_url: StrictStr = Field(default=..., description="The default URL to redirect customers to when they click on the portal\"s link to return to your website.")
    __properties = ["customer_id", "return_url"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> CreatePortalSessionRequest:
        """Create an instance of CreatePortalSessionRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> CreatePortalSessionRequest:
        """Create an instance of CreatePortalSessionRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return CreatePortalSessionRequest.parse_obj(obj)

        _obj = CreatePortalSessionRequest.parse_obj({
            "customer_id": obj.get("customer_id"),
            "return_url": obj.get("return_url")
        })
        return _obj


