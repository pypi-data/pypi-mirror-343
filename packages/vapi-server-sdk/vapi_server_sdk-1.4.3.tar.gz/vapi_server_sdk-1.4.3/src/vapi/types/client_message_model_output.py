# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ClientMessageModelOutput(UncheckedBaseModel):
    type: typing.Literal["model-output"] = pydantic.Field(default="model-output")
    """
    This is the type of the message. "model-output" is sent as the model outputs tokens.
    """

    output: typing.Dict[str, typing.Optional[typing.Any]] = pydantic.Field()
    """
    This is the output of the model. It can be a token or tool call.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
