# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ClientMessageVoiceInput(UncheckedBaseModel):
    type: typing.Literal["voice-input"] = pydantic.Field(default="voice-input")
    """
    This is the type of the message. "voice-input" is sent when a generation is requested from voice provider.
    """

    input: str = pydantic.Field()
    """
    This is the voice input content
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
