# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
from .client_message_speech_update_status import ClientMessageSpeechUpdateStatus
from .client_message_speech_update_role import ClientMessageSpeechUpdateRole
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ClientMessageSpeechUpdate(UncheckedBaseModel):
    type: typing.Literal["speech-update"] = pydantic.Field(default="speech-update")
    """
    This is the type of the message. "speech-update" is sent whenever assistant or user start or stop speaking.
    """

    status: ClientMessageSpeechUpdateStatus = pydantic.Field()
    """
    This is the status of the speech update.
    """

    role: ClientMessageSpeechUpdateRole = pydantic.Field()
    """
    This is the role which the speech update is for.
    """

    turn: typing.Optional[float] = pydantic.Field(default=None)
    """
    This is the turn number of the speech update (0-indexed).
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
