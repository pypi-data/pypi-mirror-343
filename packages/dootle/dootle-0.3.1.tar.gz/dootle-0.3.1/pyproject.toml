## pyproject.toml -*- mode: toml -*-

[project]
name            = "dootle"
version         = "0.3.1"
description     = "A Library of extensions for Doot task running"
readme          = "README.md"
requires-python = ">=3.12"
license-files   = ["LICENSE"]
keywords        = []
authors         = [
  {name         = "John Grey", email = "jgrey.n.plus.one@gmail.com"},
]

classifiers     = [
  "Programming Language :: Python"
]

dependencies   = [
    "doot>=1.0.0",
    "pony>=0.7",
    "networkx",
    "jgdv>=1.0.1",
    "bibtex-bibble",
    "mastodon-py>=2.0.1",
]

[project.optional-dependencies]
dev      = [
    "myst-parser>=4.0.1",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "sphinx",
    "sphinx-rtd-theme>=3.0.2",
    "sphinx-autoapi>=3.6.0",
]

##-- urls
[project.urls]
homepage      = "https://github.com/jgrey4296/dootle"
documentation = "https://dootle.readthedocs.io/en/latest"
repository    = "https://github.com/jgrey4296/dootle"
changelog     = "https://github.com//dootle/blob/master/CHANGELOG.md"

##-- end urls

##-- scripts
[project.scripts]

##-- end scripts

##-- entry-points
[project.entry-points."doot.plugins.command"]
# example = "dootle.cmds.example_cmd:ExampleCmd"

[project.entry-points."doot.plugins.action"]
say                 = "dootle.actions.say:SayAction"
"mamba.env"         = "dootle.python.mamba:MambaEnv"
rng_fresh           = "dootle.actions.random:rng_fresh"
rng_spawn           = "dootle.actions.random:rng_spawn"
rng_ints            = "dootle.actions.random:rng_ints"
rng_draw            = "dootle.actions.random:rng_draw"
"post.put"          = "dootle.actions.postbox:PutPostAction"
"post.get"          = "dootle.actions.postbox:GetPostAction"
"post.clear"        = "dootle.actions.postbox:ClearPostAction"
"shell!"            = "dootle.actions.shell:ShellAction"
"bake!"             = "dootle.actions.shell:ShellBake"
"run-bake!"         = "dootle.actions.shell:ShelBakedRun"
"job.walk"          = "dootle.jobs.walker:JobWalkAction"
"job.inject.shadow" = "dootle.jobs.shadow:InjectShadowAction"
"job.limit"         = "dootle.jobs.limit:JobLimitAction"
"job.expand"        = "dootle.jobs.expansion:JobExpandAction"
"job.queue"         = "dootle.jobs.queue:JobQueueAction"
"job.inject.path.elements" = "dootle.jobs.injection:JobInjectPathParts"

##-- end entry-points

##-- build-system
[build-system]
requires = [
         "setuptools >= 63.1.0",
         "wheel >= 0.37.1"
]

build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
namespaces = true
where      = ["."]
include    = ["dootle*"]

[tool.setuptools.package-data]
"*" = ["*"]
"dootle.__data"    = ["*.so"]

[tool.setuptools.exclude-package-data]

[tool.distutils.egg_info]
# from https://github.com/pypa/setuptools/discussions/3348#discussioncomment-6556887
egg_base = ".temp/egg-info"


##-- end build-system

# Tools #######################################################################

##-- pytest
# https://docs.pytest.org/en/stable/reference/reference.html#ini-options-ref
[tool.pytest.ini_options]
addopts          = [
  # "--cov=",
  # "--ignore-glob=related_/*"
]
cache_dir       = ".temp/pytest_cache"
log_file        = ".temp/logs/pytest.log"

log_cli         = false
log_level       = "DEBUG"
log_cli_level   = "INFO"
log_format      = "%(levelname)s %(name)s : %(message)s"
log_file_level  = "DEBUG"
log_file_format = "%(asctime)s %(levelname)s %(name)s : %(message)s"
##-- end pytest

##-- bumpver
[tool.bumpver]
current_version    = "0.3.1"
version_pattern    = "MAJOR.MINOR.PATCH"
commit_message     = "[bump]: version {old_version} -> {new_version}"
tag_message        = "{new_version}"
tag_scope          = "default"
commit             = true
tag                = false
# pre_commit_hook  = ""
# post_commit_hook = ""
# push             = true

[tool.bumpver.file_patterns]
"pyproject.toml"   = [
                   '^version\s+=\s+"{version}"',
                   '^current_version\s+=\s+"{version}"'
]
"dootle/__init__.py" = ['^__version__\s+=\s+"{version}"']
"dootle/__docs/conf.py" = ['^release\s+=\s+"{version}"']


##-- end bumpver

##-- isort
# https://pycqa.github.io/isort/docs/configuration/options.html
[tool.isort]
color_output           = false
py_version             = 311
# profile                = "hug"
comment_prefix         = "# "
sections               = [
"FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"
]
default_section        = "THIRDPARTY"
lines_after_imports    = -1
lines_between_sections = 1
lines_between_types    = 0

import_heading_future      = "Imports:"
import_heading_stdlib      = "##-- stdlib imports"
import_heading_thirdparty  = "##-- 3rd party imports"
import_heading_firstparty  = "##-- 1st party imports"
import_heading_localfolder = ""

import_footer_future      = ""
import_footer_stdlib      = "##-- end stdlib imports"
import_footer_thirdparty  = "##-- end 3rd party imports"
import_footer_firstparty  = "##-- end 1st party imports"
import_footer_localfolder = ""

add_imports            = []

##-- end isort

##-- mypy
# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
python_version         = "3.12"
follow_imports         = "skip"
cache_dir              = ".temp/mypy_cache"
warn_return_any        = true
warn_unused_configs    = true
ignore_missing_imports = true
exclude                = [] 
##-- end mypy

##-- uv
[tool.uv.sources]
jgdv = { path = "../../../jgdv", editable = true }
doot = { path = "../../", editable = true }
bibtex-bibble = { path = "../bibble", editable = true }

##-- end uv
