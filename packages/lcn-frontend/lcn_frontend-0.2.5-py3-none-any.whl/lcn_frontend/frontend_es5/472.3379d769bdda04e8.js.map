{"version":3,"file":"472.3379d769bdda04e8.js","sources":["webpack://lcn-frontend/progress.ts","webpack://lcn-frontend/circular-progress.ts","webpack://lcn-frontend/circular-progress-styles.ts","webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-circular-progress.ts","webpack://lcn-frontend/./src/dialogs/progress-dialog.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement, nothing, TemplateResult} from 'lit';\nimport {property} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {mixinDelegatesAria} from '../../internal/aria/delegate.js';\n\n// Separate variable needed for closure.\nconst progressBaseClass = mixinDelegatesAria(LitElement);\n\n/**\n * A progress component.\n */\nexport abstract class Progress extends progressBaseClass {\n  /**\n   * Progress to display, a fraction between 0 and `max`.\n   */\n  @property({type: Number}) value = 0;\n\n  /**\n   * Maximum progress to display, defaults to 1.\n   */\n  @property({type: Number}) max = 1;\n\n  /**\n   * Whether or not to display indeterminate progress, which gives no indication\n   * to how long an activity will take.\n   */\n  @property({type: Boolean}) indeterminate = false;\n\n  /**\n   * Whether or not to render indeterminate mode using 4 colors instead of one.\n   */\n  @property({type: Boolean, attribute: 'four-color'}) fourColor = false;\n\n  protected override render() {\n    // Needed for closure conformance\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return html`\n      <div\n        class=\"progress ${classMap(this.getRenderClasses())}\"\n        role=\"progressbar\"\n        aria-label=\"${ariaLabel || nothing}\"\n        aria-valuemin=\"0\"\n        aria-valuemax=${this.max}\n        aria-valuenow=${this.indeterminate ? nothing : this.value}\n        >${this.renderIndicator()}</div\n      >\n    `;\n  }\n\n  protected getRenderClasses() {\n    return {\n      'indeterminate': this.indeterminate,\n      'four-color': this.fourColor,\n    };\n  }\n\n  protected abstract renderIndicator(): TemplateResult;\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html} from 'lit';\n\nimport {Progress} from './progress.js';\n\n/**\n * A circular progress component.\n */\nexport class CircularProgress extends Progress {\n  protected override renderIndicator() {\n    if (this.indeterminate) {\n      return this.renderIndeterminateContainer();\n    }\n\n    return this.renderDeterminateContainer();\n  }\n\n  // Determinate mode is rendered with an svg so the progress arc can be\n  // easily animated via stroke-dashoffset.\n  private renderDeterminateContainer() {\n    const dashOffset = (1 - this.value / this.max) * 100;\n    // note, dash-array/offset are relative to Setting `pathLength` but\n    // Chrome seems to render this inaccurately and using a large viewbox helps.\n    return html`\n      <svg viewBox=\"0 0 4800 4800\">\n        <circle class=\"track\" pathLength=\"100\"></circle>\n        <circle\n          class=\"active-track\"\n          pathLength=\"100\"\n          stroke-dashoffset=${dashOffset}></circle>\n      </svg>\n    `;\n  }\n\n  // Indeterminate mode rendered with 2 bordered-divs. The borders are\n  // clipped into half circles by their containers. The divs are then carefully\n  // animated to produce changes to the spinner arc size.\n  // This approach has 4.5x the FPS of rendering via svg on Chrome 111.\n  // See https://lit.dev/playground/#gist=febb773565272f75408ab06a0eb49746.\n  private renderIndeterminateContainer() {\n    return html` <div class=\"spinner\">\n      <div class=\"left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>`;\n  }\n}\n","/**\n * @license\n * Copyright 2024 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n// Generated stylesheet for ./progress/internal/circular-progress-styles.css.\nimport {css} from 'lit';\nexport const styles = css`:host{--_active-indicator-color: var(--md-circular-progress-active-indicator-color, var(--md-sys-color-primary, #6750a4));--_active-indicator-width: var(--md-circular-progress-active-indicator-width, 10);--_four-color-active-indicator-four-color: var(--md-circular-progress-four-color-active-indicator-four-color, var(--md-sys-color-tertiary-container, #ffd8e4));--_four-color-active-indicator-one-color: var(--md-circular-progress-four-color-active-indicator-one-color, var(--md-sys-color-primary, #6750a4));--_four-color-active-indicator-three-color: var(--md-circular-progress-four-color-active-indicator-three-color, var(--md-sys-color-tertiary, #7d5260));--_four-color-active-indicator-two-color: var(--md-circular-progress-four-color-active-indicator-two-color, var(--md-sys-color-primary-container, #eaddff));--_size: var(--md-circular-progress-size, 48px);display:inline-flex;vertical-align:middle;width:var(--_size);height:var(--_size);position:relative;align-items:center;justify-content:center;contain:strict;content-visibility:auto}.progress{flex:1;align-self:stretch;margin:4px}.progress,.spinner,.left,.right,.circle,svg,.track,.active-track{position:absolute;inset:0}svg{transform:rotate(-90deg)}circle{cx:50%;cy:50%;r:calc(50%*(1 - var(--_active-indicator-width)/100));stroke-width:calc(var(--_active-indicator-width)*1%);stroke-dasharray:100;fill:rgba(0,0,0,0)}.active-track{transition:stroke-dashoffset 500ms cubic-bezier(0, 0, 0.2, 1);stroke:var(--_active-indicator-color)}.track{stroke:rgba(0,0,0,0)}.progress.indeterminate{animation:linear infinite linear-rotate;animation-duration:1568.2352941176ms}.spinner{animation:infinite both rotate-arc;animation-duration:5332ms;animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.left{overflow:hidden;inset:0 50% 0 0}.right{overflow:hidden;inset:0 0 0 50%}.circle{box-sizing:border-box;border-radius:50%;border:solid calc(var(--_active-indicator-width)/100*(var(--_size) - 8px));border-color:var(--_active-indicator-color) var(--_active-indicator-color) rgba(0,0,0,0) rgba(0,0,0,0);animation:expand-arc;animation-iteration-count:infinite;animation-fill-mode:both;animation-duration:1333ms,5332ms;animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.four-color .circle{animation-name:expand-arc,four-color}.left .circle{rotate:135deg;inset:0 -100% 0 0}.right .circle{rotate:100deg;inset:0 0 0 -100%;animation-delay:-666.5ms,0ms}@media(forced-colors: active){.active-track{stroke:CanvasText}.circle{border-color:CanvasText CanvasText Canvas Canvas}}@keyframes expand-arc{0%{transform:rotate(265deg)}50%{transform:rotate(130deg)}100%{transform:rotate(265deg)}}@keyframes rotate-arc{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes linear-rotate{to{transform:rotate(360deg)}}@keyframes four-color{0%{border-top-color:var(--_four-color-active-indicator-one-color);border-right-color:var(--_four-color-active-indicator-one-color)}15%{border-top-color:var(--_four-color-active-indicator-one-color);border-right-color:var(--_four-color-active-indicator-one-color)}25%{border-top-color:var(--_four-color-active-indicator-two-color);border-right-color:var(--_four-color-active-indicator-two-color)}40%{border-top-color:var(--_four-color-active-indicator-two-color);border-right-color:var(--_four-color-active-indicator-two-color)}50%{border-top-color:var(--_four-color-active-indicator-three-color);border-right-color:var(--_four-color-active-indicator-three-color)}65%{border-top-color:var(--_four-color-active-indicator-three-color);border-right-color:var(--_four-color-active-indicator-three-color)}75%{border-top-color:var(--_four-color-active-indicator-four-color);border-right-color:var(--_four-color-active-indicator-four-color)}90%{border-top-color:var(--_four-color-active-indicator-four-color);border-right-color:var(--_four-color-active-indicator-four-color)}100%{border-top-color:var(--_four-color-active-indicator-one-color);border-right-color:var(--_four-color-active-indicator-one-color)}}\n`;\n","import { MdCircularProgress } from \"@material/web/progress/circular-progress\";\nimport type { PropertyValues } from \"lit\";\nimport { css } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\n\n@customElement(\"ha-circular-progress\")\nexport class HaCircularProgress extends MdCircularProgress {\n  @property({ attribute: \"aria-label\", type: String }) public ariaLabel =\n    \"Loading\";\n\n  @property() public size?: \"tiny\" | \"small\" | \"medium\" | \"large\";\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"size\")) {\n      switch (this.size) {\n        case \"tiny\":\n          this.style.setProperty(\"--md-circular-progress-size\", \"16px\");\n          break;\n        case \"small\":\n          this.style.setProperty(\"--md-circular-progress-size\", \"28px\");\n          break;\n        case \"medium\":\n          this.style.setProperty(\"--md-circular-progress-size\", \"48px\");\n          break;\n        case \"large\":\n          this.style.setProperty(\"--md-circular-progress-size\", \"68px\");\n          break;\n      }\n    }\n  }\n\n  static override styles = [\n    ...super.styles,\n    css`\n      :host {\n        --md-sys-color-primary: var(--primary-color);\n        --md-circular-progress-size: 48px;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-circular-progress\": HaCircularProgress;\n  }\n}\n","import \"@ha/components/ha-circular-progress\";\nimport type { CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { haStyleDialog } from \"@ha/resources/styles\";\nimport type { HomeAssistant } from \"@ha/types\";\nimport { fireEvent } from \"@ha/common/dom/fire_event\";\nimport type { HaDialog } from \"@ha/components/ha-dialog\";\nimport type { ProgressDialogParams } from \"./show-dialog-progress\";\n\n@customElement(\"progress-dialog\")\nexport class ProgressDialog extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: ProgressDialogParams;\n\n  @query(\"ha-dialog\", true) private _dialog!: HaDialog;\n\n  public async showDialog(params: ProgressDialogParams): Promise<void> {\n    this._params = params;\n    await this.updateComplete;\n    fireEvent(this._dialog as HTMLElement, \"iron-resize\");\n  }\n\n  public async closeDialog() {\n    this.close();\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n    return html`\n      <ha-dialog open scrimClickAction escapeKeyAction @close-dialog=${this.closeDialog}>\n        <h2>${this._params?.title}</h2>\n        <p>${this._params?.text}</p>\n\n        <div id=\"dialog-content\">\n          <ha-circular-progress active></ha-circular-progress>\n        </div>\n      </ha-dialog>\n    `;\n  }\n\n  public close() {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResultGroup[] {\n    return [\n      haStyleDialog,\n      css`\n        #dialog-content {\n          text-align: center;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"progress-dialog\": ProgressDialog;\n  }\n}\n"],"names":["progressBaseClass","mixinDelegatesAria","LitElement","Progress","constructor","value","max","indeterminate","fourColor","render","ariaLabel","this","html","_t","_","classMap","getRenderClasses","nothing","renderIndicator","__decorate","property","type","Number","Boolean","attribute","CircularProgress","renderIndeterminateContainer","renderDeterminateContainer","dashOffset","_t2","styles","css","MdCircularProgress","customElement","_decorate","_initialize","_MdCircularProgress","HaCircularProgress","args","F","d","kind","decorators","String","key","changedProps","_superPropGet","has","size","style","setProperty","static","ProgressDialog","_LitElement","state","query","params","_params","updateComplete","fireEvent","_dialog","close","_this$_params","_this$_params2","closeDialog","title","text","undefined","haStyleDialog"],"mappings":"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"}