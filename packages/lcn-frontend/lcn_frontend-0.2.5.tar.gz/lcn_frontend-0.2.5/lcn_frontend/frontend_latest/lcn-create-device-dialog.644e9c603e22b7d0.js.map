{"version":3,"file":"lcn-create-device-dialog.644e9c603e22b7d0.js","sources":["webpack://lcn-frontend/./homeassistant-frontend/src/components/ha-radio.ts","webpack://lcn-frontend/./src/dialogs/lcn-create-device-dialog.ts"],"sourcesContent":["import { RadioBase } from \"@material/mwc-radio/mwc-radio-base\";\nimport { styles } from \"@material/mwc-radio/mwc-radio.css\";\nimport { css } from \"lit\";\nimport { customElement } from \"lit/decorators\";\n\n@customElement(\"ha-radio\")\nexport class HaRadio extends RadioBase {\n  static override styles = [\n    styles,\n    css`\n      :host {\n        --mdc-theme-secondary: var(--primary-color);\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-radio\": HaRadio;\n  }\n}\n","import \"@ha/components/ha-icon-button\";\nimport \"@ha/components/ha-radio\";\nimport \"@ha/components/ha-formfield\";\nimport \"@ha/components/ha-textfield\";\nimport { fireEvent } from \"@ha/common/dom/fire_event\";\nimport type { PropertyValues, CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { createCloseHeading } from \"@ha/components/ha-dialog\";\nimport type { HaRadio } from \"@ha/components/ha-radio\";\nimport { haStyleDialog } from \"@ha/resources/styles\";\nimport type { HomeAssistant, ValueChangedEvent } from \"@ha/types\";\nimport type { LCN, LcnDeviceConfig } from \"types/lcn\";\nimport type { HaTextField } from \"@ha/components/ha-textfield\";\nimport { loadProgressDialog } from \"./show-dialog-progress\";\nimport type { LcnDeviceDialogParams } from \"./show-dialog-create-device\";\n\n@customElement(\"lcn-create-device-dialog\")\nexport class CreateDeviceDialog extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public lcn!: LCN;\n\n  @state() private _params?: LcnDeviceDialogParams;\n\n  @state() private _isGroup: boolean = false;\n\n  @state() private _segmentId: number = 0;\n\n  @state() private _addressId: number = 5;\n\n  @state() private _invalid: boolean = false;\n\n  public async showDialog(params: LcnDeviceDialogParams): Promise<void> {\n    this._params = params;\n    this.lcn = params.lcn;\n    await this.updateComplete;\n  }\n\n  protected firstUpdated(changedProperties: PropertyValues): void {\n    super.firstUpdated(changedProperties);\n    loadProgressDialog();\n  }\n\n  public willUpdate(changedProperties: PropertyValues) {\n    if (changedProperties.has(\"_invalid\")) {\n      this._invalid =\n        !this._validateSegmentId(this._segmentId) ||\n        !this._validateAddressId(this._addressId, this._isGroup);\n    }\n  }\n\n  protected render() {\n    if (!this._params) {\n      return nothing;\n    }\n    return html`\n      <ha-dialog\n        open\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this.lcn.localize(\"dashboard-devices-dialog-create-title\"),\n        ) as unknown as string}\n        @closed=${this._closeDialog}\n      >\n        <div id=\"type\">${this.lcn.localize(\"type\")}</div>\n\n        <ha-formfield label=${this.lcn.localize(\"module\")}>\n          <ha-radio\n            name=\"is_group\"\n            value=\"module\"\n            .checked=${this._isGroup === false}\n            @change=${this._isGroupChanged}\n          ></ha-radio>\n        </ha-formfield>\n\n        <ha-formfield label=${this.lcn.localize(\"group\")}>\n          <ha-radio\n            name=\"is_group\"\n            value=\"group\"\n            .checked=${this._isGroup === true}\n            @change=${this._isGroupChanged}\n          ></ha-radio>\n        </ha-formfield>\n\n        <ha-textfield\n          .label=${this.lcn.localize(\"segment-id\")}\n          type=\"number\"\n          .value=${this._segmentId.toString()}\n          min=\"0\"\n          required\n          autoValidate\n          @input=${this._segmentIdChanged}\n          .validityTransform=${this._validityTransformSegmentId}\n          .validationMessage=${this.lcn.localize(\"dashboard-devices-dialog-error-segment\")}\n        ></ha-textfield>\n\n        <ha-textfield\n          .label=${this.lcn.localize(\"id\")}\n          type=\"number\"\n          .value=${this._addressId.toString()}\n          min=\"0\"\n          required\n          autoValidate\n          @input=${this._addressIdChanged}\n          .validityTransform=${this._validityTransformAddressId}\n          .validationMessage=${this._isGroup\n            ? this.lcn.localize(\"dashboard-devices-dialog-error-group\")\n            : this.lcn.localize(\"dashboard-devices-dialog-error-module\")}\n        ></ha-textfield>\n\n        <div class=\"buttons\">\n          <mwc-button\n            slot=\"secondaryAction\"\n            @click=${this._closeDialog}\n            .label=${this.lcn.localize(\"dismiss\")}\n          ></mwc-button>\n\n          <mwc-button\n            slot=\"primaryAction\"\n            @click=${this._create}\n            .disabled=${this._invalid}\n            .label=${this.lcn.localize(\"create\")}\n          ></mwc-button>\n        </div>\n      </ha-dialog>\n    `;\n  }\n\n  private _isGroupChanged(ev: ValueChangedEvent<string>): void {\n    this._isGroup = (ev.target as HaRadio).value === \"group\";\n  }\n\n  private _segmentIdChanged(ev: ValueChangedEvent<string>): void {\n    const target = ev.target as HaTextField;\n    this._segmentId = +target.value;\n  }\n\n  private _addressIdChanged(ev: ValueChangedEvent<string>): void {\n    const target = ev.target as HaTextField;\n    this._addressId = +target.value;\n  }\n\n  private _validateSegmentId(segment_id: number): boolean {\n    // segement_id: 0, 5-128\n    return segment_id === 0 || (segment_id >= 5 && segment_id <= 128);\n  }\n\n  private _validateAddressId(address_id: number, is_group: boolean): boolean {\n    // module_id: 5-254\n    // group_id: 5-254\n    if (is_group) {\n      return address_id >= 5 && address_id <= 254;\n    }\n    return address_id >= 5 && address_id <= 254;\n  }\n\n  private get _validityTransformSegmentId() {\n    return (value: string) => ({ valid: this._validateSegmentId(+value) });\n  }\n\n  private get _validityTransformAddressId() {\n    return (value: string) => ({ valid: this._validateAddressId(+value, this._isGroup) });\n  }\n\n  private async _create(): Promise<void> {\n    const values: Partial<LcnDeviceConfig> = {\n      name: \"\",\n      address: [this._segmentId, this._addressId, this._isGroup],\n    };\n    await this._params!.createDevice(values);\n    this._closeDialog();\n  }\n\n  private _closeDialog(): void {\n    this._params = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyleDialog,\n      css`\n        #port-type {\n          margin-top: 16px;\n        }\n        ha-textfield {\n          display: block;\n          margin-bottom: 8px;\n        }\n        .buttons {\n          display: flex;\n          justify-content: space-between;\n          padding: 8px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"lcn-create-device-dialog\": CreateDeviceDialog;\n  }\n}\n"],"names":["_decorate","customElement","_initialize","_RadioBase","F","constructor","args","d","kind","static","key","value","styles","css","RadioBase","CreateDeviceDialog","_LitElement","decorators","property","attribute","state","params","this","_params","lcn","updateComplete","changedProperties","_superPropGet","loadProgressDialog","has","_invalid","_validateSegmentId","_segmentId","_validateAddressId","_addressId","_isGroup","html","createCloseHeading","hass","localize","_closeDialog","_isGroupChanged","toString","_segmentIdChanged","_validityTransformSegmentId","_addressIdChanged","_validityTransformAddressId","_create","nothing","ev","target","segment_id","address_id","is_group","valid","values","name","address","createDevice","undefined","fireEvent","dialog","localName","haStyleDialog","LitElement"],"mappings":"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"}