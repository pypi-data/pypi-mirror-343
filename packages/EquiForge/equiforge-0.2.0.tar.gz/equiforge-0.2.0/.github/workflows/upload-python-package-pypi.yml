# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: upload python package pypi

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This fetches all history and tags

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          
      - name: Install packaging tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine setuptools_scm

      - name: Clean previous build artifacts
        run: |
          find . -type d -name "*.egg-info" -exec rm -rf {} +
          rm -rf build dist
          
      - name: Force version from tag
        id: set_version
        run: |
          TAG=$(git describe --tags --abbrev=0)
          VERSION=${TAG#v}
          echo "Setting version to $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Create version file
          mkdir -p equiforge
          echo "# version override" > equiforge/_version.py
          echo "__version__ = version = '$VERSION'" >> equiforge/_version.py
          echo "__version_tuple__ = version_tuple = tuple('$VERSION'.split('.'))" >> equiforge/_version.py
          
      - name: Build release distributions
        env:
          SETUPTOOLS_SCM_PRETEND_VERSION: ${{ steps.set_version.outputs.version }}
        run: |
          python -m build --sdist --wheel

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs: [release-build]
    permissions:
      id-token: write  # Required for trusted publishing

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
