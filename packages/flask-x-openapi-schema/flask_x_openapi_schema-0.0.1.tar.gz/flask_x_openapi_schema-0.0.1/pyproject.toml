[project]
name = "flask-x-openapi-schema"
version = "0.0.1"
description = "A powerful utility for automatically generating OpenAPI schemas from Flask-RESTful resources, Flask.MethodView classes, and Pydantic models."
readme = "README.md"
authors = [{ name = "straydragon", email = "straydragonl@foxmail.com" }]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: Flask",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

license = { text = "MIT" }

requires-python = ">=3.9"

dependencies = [
    "flask>=2.0.0",
    "pydantic>=2.0.0",
    "PyYAML>=6.0",
    "typing_extensions>=4.0.0; python_version < '3.10'",
]

[project.optional-dependencies]
flask-restful = ["flask-restful>=0.3.9"]

[dependency-groups]
dev = [
    "email-validator>=2.2.0",
    "ipython>=8.18.1",
    "locust>=2.25.0",
    "matplotlib>=3.7.5",
    "numpy>=1.24.4",
    "pandas>=2.0.3",
    "pdoc>=14.1.0",
    "polyfactory>=2.21.0",
    "pydantic[email]>=2.10.6",
    "pytest>=8.3.5",
    "pytest-benchmark>=4.0.0",
    "pytest-cov>=5.0.0",
    "pytest-flask>=1.3.0",
    "pytest-mock>=3.14.0",
    "rich>=14.0.0",
]

[project.urls]
Homepage = "https://github.com/StrayDragon/flask-x-openapi-schema"
Documentation = "https://github.com/StrayDragon/flask-x-openapi-schema/tree/main/docs"
Repository = "https://github.com/StrayDragon/flask-x-openapi-schema.git"
Issues = "https://github.com/StrayDragon/flask-x-openapi-schema/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/flask_x_openapi_schema"]

[tool.hatch.build.targets.sdist]
only-include = ["src", "pyproject.toml", "README.md"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-x --cov=src/flask_x_openapi_schema --cov-report=term-missing --cov-report=html --cov-report=xml -v"
xfail_strict = true
filterwarnings = [
    # "ignore::pytest.PytestCollectionWarning",
]

[tool.coverage.run]
source = ["src/flask_x_openapi_schema"]
omit = ["*/__init__.py", "*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
