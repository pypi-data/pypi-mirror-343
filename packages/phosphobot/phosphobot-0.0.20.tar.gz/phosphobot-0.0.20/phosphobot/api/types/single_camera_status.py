# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .single_camera_status_camera_type import SingleCameraStatusCameraType
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class SingleCameraStatus(UniversalBaseModel):
    camera_id: int
    camera_type: SingleCameraStatusCameraType = pydantic.Field()
    """
    Type of camera.
    `classic`: Standard camera detected by OpenCV.
    `stereo`: Stereoscopic camera. It has two lenses: left eye and right eye to give a 3D effect. The left half of the image is the left eye, and the right half is the right eye.
    `realsense`: Intel RealSense camera. It use infrared sensors to provide depth information. It requires a special driver.
    `dummy`: Dummy camera. Used for testing.
    `dummy_stereo`: Dummy stereoscopic camera. Used for testing.
    `unknown`: Unknown camera type.
    """

    fps: int
    height: int
    is_active: bool
    width: int

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
