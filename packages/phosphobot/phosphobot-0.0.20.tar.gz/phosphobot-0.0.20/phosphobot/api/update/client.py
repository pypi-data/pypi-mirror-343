# This file was auto-generated by Fern from our API Definition.

from ..core.client_wrapper import SyncClientWrapper
from .raw_client import RawUpdateClient
import typing
from ..core.request_options import RequestOptions
from ..core.client_wrapper import AsyncClientWrapper
from .raw_client import AsyncRawUpdateClient


class UpdateClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawUpdateClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawUpdateClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawUpdateClient
        """
        return self._raw_client

    def upgrade_to_latest_version(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.Optional[typing.Any]:
        """
        Upgrade the teleop software to the latest available version.
        Checks the latest available version and upgrades the software if necessary.
        Works only on raspberry pi devices.

        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.Optional[typing.Any]
            Successful Response

        Examples
        --------
        from phospho import PhosphoApi

        client = PhosphoApi(
            base_url="https://yourhost.com/path/to/api",
        )
        client.update.upgrade_to_latest_version()
        """
        response = self._raw_client.upgrade_to_latest_version(
            request_options=request_options,
        )
        return response.data

    def get_latest_available_version(
        self, *, run_quick: typing.Optional[bool] = None, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.Optional[typing.Any]:
        """
        Get the latest available version of the teleop software.
        Works only on raspberry pi devices.

        Parameters
        ----------
        run_quick : typing.Optional[bool]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.Optional[typing.Any]
            Successful Response

        Examples
        --------
        from phospho import PhosphoApi

        client = PhosphoApi(
            base_url="https://yourhost.com/path/to/api",
        )
        client.update.get_latest_available_version()
        """
        response = self._raw_client.get_latest_available_version(
            run_quick=run_quick,
            request_options=request_options,
        )
        return response.data


class AsyncUpdateClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawUpdateClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawUpdateClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawUpdateClient
        """
        return self._raw_client

    async def upgrade_to_latest_version(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.Optional[typing.Any]:
        """
        Upgrade the teleop software to the latest available version.
        Checks the latest available version and upgrades the software if necessary.
        Works only on raspberry pi devices.

        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.Optional[typing.Any]
            Successful Response

        Examples
        --------
        import asyncio

        from phospho import AsyncPhosphoApi

        client = AsyncPhosphoApi(
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.update.upgrade_to_latest_version()


        asyncio.run(main())
        """
        response = await self._raw_client.upgrade_to_latest_version(
            request_options=request_options,
        )
        return response.data

    async def get_latest_available_version(
        self, *, run_quick: typing.Optional[bool] = None, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.Optional[typing.Any]:
        """
        Get the latest available version of the teleop software.
        Works only on raspberry pi devices.

        Parameters
        ----------
        run_quick : typing.Optional[bool]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.Optional[typing.Any]
            Successful Response

        Examples
        --------
        import asyncio

        from phospho import AsyncPhosphoApi

        client = AsyncPhosphoApi(
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.update.get_latest_available_version()


        asyncio.run(main())
        """
        response = await self._raw_client.get_latest_available_version(
            run_quick=run_quick,
            request_options=request_options,
        )
        return response.data
