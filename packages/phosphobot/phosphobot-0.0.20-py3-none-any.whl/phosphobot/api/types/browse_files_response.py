# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import typing
from .item_info import ItemInfo
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class BrowseFilesResponse(UniversalBaseModel):
    """
    Represents a response for browsing directories or items in a robotic system.
    """

    directory_title: typing_extensions.Annotated[str, FieldMetadata(alias="directoryTitle")]
    episode_ids: typing.Optional[typing.List[int]] = None
    episode_paths: typing.Optional[typing.List[str]] = None
    items: typing.List[ItemInfo]
    token_error: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="tokenError")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
