# Copyright 2016-2024 Cerebras Systems
# SPDX-License-Identifier: BSD-3-Clause

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cerebras/pb/ws/common.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='cerebras/pb/ws/common.proto',
  package='cerebras.ws',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1b\x63\x65rebras/pb/ws/common.proto\x12\x0b\x63\x65rebras.ws\"\x1e\n\x0bPingRequest\x12\x0f\n\x07message\x18\x01 \x01(\t\"a\n\x0cPingResponse\x12%\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x17.cerebras.ws.StatusCode\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x19\n\x11\x63urrent_iteration\x18\x03 \x01(\x04\" \n\x10\x43lockSyncRequest\x12\x0c\n\x04guid\x18\x01 \x01(\x03\":\n\x11\x43lockSyncResponse\x12%\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x17.cerebras.ws.StatusCode\"\'\n\x10TerminateRequest\x12\x13\n\x0bis_abnormal\x18\x01 \x01(\x08\"\x13\n\x11TerminateResponse\"\x83\x01\n\x08Schedule\x12.\n\tintervals\x18\x01 \x03(\x0b\x32\x1b.cerebras.ws.Schedule.Range\x1aG\n\x05Range\x12\r\n\x05start\x18\x01 \x01(\x04\x12\x0b\n\x03\x65nd\x18\x02 \x01(\x04\x12\x0c\n\x04step\x18\x03 \x01(\x04\x12\x14\n\x0cinclude_last\x18\x04 \x01(\x08*\xc4\x02\n\nStatusCode\x12\x11\n\rWS_RT_SUCCESS\x10\x00\x12\x11\n\rWS_RT_UNKNOWN\x10\x01\x12\x18\n\x14WS_RT_INTERNAL_ERROR\x10\x02\x12\x18\n\x14WS_RT_STALL_DETECTED\x10\x03\x12\x1c\n\x18WS_RT_GRPC_RELATED_ERROR\x10\x04\x12\x19\n\x15WS_RT_USER_TERMINATED\x10\x05\x12\x1b\n\x17WS_RT_REQUEST_CANCELLED\x10\x06\x12\x18\n\x14WS_RT_DROPPED_TENSOR\x10\x07\x12\x18\n\x14WS_RT_CRASH_DETECTED\x10\x08\x12\x17\n\x13WS_RT_MONITOR_CLEAN\x10\t\x12\x1d\n\x19WS_RT_SERVICE_INTERRUPTED\x10\n\x12\x1a\n\x16WS_RT_JOB_INCOMPATIBLE\x10\x0b*\xef\x01\n\x0fStallStatusCode\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x14\n\x10\x43KPT_IN_PROGRESS\x10\x01\x12\x08\n\x04IDLE\x10\x02\x12\x14\n\x10INPUT_STARVATION\x10\x03\x12\x0b\n\x07STALLED\x10\x04\x12\r\n\tCOMPLETED\x10\x05\x12\x0e\n\nTERMINATED\x10\x06\x12\x0f\n\x0bPROGRESSING\x10\x07\x12\n\n\x06RT_BRK\x10\x08\x12\x12\n\x0eRT_BRK_COLLECT\x10\t\x12\x19\n\x15RT_WAITING_FOR_BUFFER\x10\n\x12\x0e\n\nNOT_IN_USE\x10\x0b\x12\x11\n\rDRAFT_STALLED\x10\x0c*<\n\nServerType\x12\x0e\n\nWGT_SERVER\x10\x00\x12\x0e\n\nACT_SERVER\x10\x01\x12\x0e\n\nCMD_SERVER\x10\x02\x62\x06proto3'
)

_STATUSCODE = _descriptor.EnumDescriptor(
  name='StatusCode',
  full_name='cerebras.ws.StatusCode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='WS_RT_SUCCESS', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WS_RT_UNKNOWN', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WS_RT_INTERNAL_ERROR', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WS_RT_STALL_DETECTED', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WS_RT_GRPC_RELATED_ERROR', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WS_RT_USER_TERMINATED', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WS_RT_REQUEST_CANCELLED', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WS_RT_DROPPED_TENSOR', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WS_RT_CRASH_DETECTED', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WS_RT_MONITOR_CLEAN', index=9, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WS_RT_SERVICE_INTERRUPTED', index=10, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WS_RT_JOB_INCOMPATIBLE', index=11, number=11,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=466,
  serialized_end=790,
)
_sym_db.RegisterEnumDescriptor(_STATUSCODE)

StatusCode = enum_type_wrapper.EnumTypeWrapper(_STATUSCODE)
_STALLSTATUSCODE = _descriptor.EnumDescriptor(
  name='StallStatusCode',
  full_name='cerebras.ws.StallStatusCode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CKPT_IN_PROGRESS', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='IDLE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INPUT_STARVATION', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='STALLED', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COMPLETED', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TERMINATED', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PROGRESSING', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RT_BRK', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RT_BRK_COLLECT', index=9, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RT_WAITING_FOR_BUFFER', index=10, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='NOT_IN_USE', index=11, number=11,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DRAFT_STALLED', index=12, number=12,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=793,
  serialized_end=1032,
)
_sym_db.RegisterEnumDescriptor(_STALLSTATUSCODE)

StallStatusCode = enum_type_wrapper.EnumTypeWrapper(_STALLSTATUSCODE)
_SERVERTYPE = _descriptor.EnumDescriptor(
  name='ServerType',
  full_name='cerebras.ws.ServerType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='WGT_SERVER', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ACT_SERVER', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CMD_SERVER', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1034,
  serialized_end=1094,
)
_sym_db.RegisterEnumDescriptor(_SERVERTYPE)

ServerType = enum_type_wrapper.EnumTypeWrapper(_SERVERTYPE)
WS_RT_SUCCESS = 0
WS_RT_UNKNOWN = 1
WS_RT_INTERNAL_ERROR = 2
WS_RT_STALL_DETECTED = 3
WS_RT_GRPC_RELATED_ERROR = 4
WS_RT_USER_TERMINATED = 5
WS_RT_REQUEST_CANCELLED = 6
WS_RT_DROPPED_TENSOR = 7
WS_RT_CRASH_DETECTED = 8
WS_RT_MONITOR_CLEAN = 9
WS_RT_SERVICE_INTERRUPTED = 10
WS_RT_JOB_INCOMPATIBLE = 11
UNKNOWN = 0
CKPT_IN_PROGRESS = 1
IDLE = 2
INPUT_STARVATION = 3
STALLED = 4
COMPLETED = 5
TERMINATED = 6
PROGRESSING = 7
RT_BRK = 8
RT_BRK_COLLECT = 9
RT_WAITING_FOR_BUFFER = 10
NOT_IN_USE = 11
DRAFT_STALLED = 12
WGT_SERVER = 0
ACT_SERVER = 1
CMD_SERVER = 2



_PINGREQUEST = _descriptor.Descriptor(
  name='PingRequest',
  full_name='cerebras.ws.PingRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='cerebras.ws.PingRequest.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=44,
  serialized_end=74,
)


_PINGRESPONSE = _descriptor.Descriptor(
  name='PingResponse',
  full_name='cerebras.ws.PingResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='cerebras.ws.PingResponse.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='message', full_name='cerebras.ws.PingResponse.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='current_iteration', full_name='cerebras.ws.PingResponse.current_iteration', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=76,
  serialized_end=173,
)


_CLOCKSYNCREQUEST = _descriptor.Descriptor(
  name='ClockSyncRequest',
  full_name='cerebras.ws.ClockSyncRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='guid', full_name='cerebras.ws.ClockSyncRequest.guid', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=175,
  serialized_end=207,
)


_CLOCKSYNCRESPONSE = _descriptor.Descriptor(
  name='ClockSyncResponse',
  full_name='cerebras.ws.ClockSyncResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='cerebras.ws.ClockSyncResponse.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=209,
  serialized_end=267,
)


_TERMINATEREQUEST = _descriptor.Descriptor(
  name='TerminateRequest',
  full_name='cerebras.ws.TerminateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_abnormal', full_name='cerebras.ws.TerminateRequest.is_abnormal', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=269,
  serialized_end=308,
)


_TERMINATERESPONSE = _descriptor.Descriptor(
  name='TerminateResponse',
  full_name='cerebras.ws.TerminateResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=310,
  serialized_end=329,
)


_SCHEDULE_RANGE = _descriptor.Descriptor(
  name='Range',
  full_name='cerebras.ws.Schedule.Range',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='start', full_name='cerebras.ws.Schedule.Range.start', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='end', full_name='cerebras.ws.Schedule.Range.end', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='step', full_name='cerebras.ws.Schedule.Range.step', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='include_last', full_name='cerebras.ws.Schedule.Range.include_last', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=392,
  serialized_end=463,
)

_SCHEDULE = _descriptor.Descriptor(
  name='Schedule',
  full_name='cerebras.ws.Schedule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='intervals', full_name='cerebras.ws.Schedule.intervals', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_SCHEDULE_RANGE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=332,
  serialized_end=463,
)

_PINGRESPONSE.fields_by_name['code'].enum_type = _STATUSCODE
_CLOCKSYNCRESPONSE.fields_by_name['code'].enum_type = _STATUSCODE
_SCHEDULE_RANGE.containing_type = _SCHEDULE
_SCHEDULE.fields_by_name['intervals'].message_type = _SCHEDULE_RANGE
DESCRIPTOR.message_types_by_name['PingRequest'] = _PINGREQUEST
DESCRIPTOR.message_types_by_name['PingResponse'] = _PINGRESPONSE
DESCRIPTOR.message_types_by_name['ClockSyncRequest'] = _CLOCKSYNCREQUEST
DESCRIPTOR.message_types_by_name['ClockSyncResponse'] = _CLOCKSYNCRESPONSE
DESCRIPTOR.message_types_by_name['TerminateRequest'] = _TERMINATEREQUEST
DESCRIPTOR.message_types_by_name['TerminateResponse'] = _TERMINATERESPONSE
DESCRIPTOR.message_types_by_name['Schedule'] = _SCHEDULE
DESCRIPTOR.enum_types_by_name['StatusCode'] = _STATUSCODE
DESCRIPTOR.enum_types_by_name['StallStatusCode'] = _STALLSTATUSCODE
DESCRIPTOR.enum_types_by_name['ServerType'] = _SERVERTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PingRequest = _reflection.GeneratedProtocolMessageType('PingRequest', (_message.Message,), {
  'DESCRIPTOR' : _PINGREQUEST,
  '__module__' : 'cerebras.pb.ws.common_pb2'
  # @@protoc_insertion_point(class_scope:cerebras.ws.PingRequest)
  })
_sym_db.RegisterMessage(PingRequest)

PingResponse = _reflection.GeneratedProtocolMessageType('PingResponse', (_message.Message,), {
  'DESCRIPTOR' : _PINGRESPONSE,
  '__module__' : 'cerebras.pb.ws.common_pb2'
  # @@protoc_insertion_point(class_scope:cerebras.ws.PingResponse)
  })
_sym_db.RegisterMessage(PingResponse)

ClockSyncRequest = _reflection.GeneratedProtocolMessageType('ClockSyncRequest', (_message.Message,), {
  'DESCRIPTOR' : _CLOCKSYNCREQUEST,
  '__module__' : 'cerebras.pb.ws.common_pb2'
  # @@protoc_insertion_point(class_scope:cerebras.ws.ClockSyncRequest)
  })
_sym_db.RegisterMessage(ClockSyncRequest)

ClockSyncResponse = _reflection.GeneratedProtocolMessageType('ClockSyncResponse', (_message.Message,), {
  'DESCRIPTOR' : _CLOCKSYNCRESPONSE,
  '__module__' : 'cerebras.pb.ws.common_pb2'
  # @@protoc_insertion_point(class_scope:cerebras.ws.ClockSyncResponse)
  })
_sym_db.RegisterMessage(ClockSyncResponse)

TerminateRequest = _reflection.GeneratedProtocolMessageType('TerminateRequest', (_message.Message,), {
  'DESCRIPTOR' : _TERMINATEREQUEST,
  '__module__' : 'cerebras.pb.ws.common_pb2'
  # @@protoc_insertion_point(class_scope:cerebras.ws.TerminateRequest)
  })
_sym_db.RegisterMessage(TerminateRequest)

TerminateResponse = _reflection.GeneratedProtocolMessageType('TerminateResponse', (_message.Message,), {
  'DESCRIPTOR' : _TERMINATERESPONSE,
  '__module__' : 'cerebras.pb.ws.common_pb2'
  # @@protoc_insertion_point(class_scope:cerebras.ws.TerminateResponse)
  })
_sym_db.RegisterMessage(TerminateResponse)

Schedule = _reflection.GeneratedProtocolMessageType('Schedule', (_message.Message,), {

  'Range' : _reflection.GeneratedProtocolMessageType('Range', (_message.Message,), {
    'DESCRIPTOR' : _SCHEDULE_RANGE,
    '__module__' : 'cerebras.pb.ws.common_pb2'
    # @@protoc_insertion_point(class_scope:cerebras.ws.Schedule.Range)
    })
  ,
  'DESCRIPTOR' : _SCHEDULE,
  '__module__' : 'cerebras.pb.ws.common_pb2'
  # @@protoc_insertion_point(class_scope:cerebras.ws.Schedule)
  })
_sym_db.RegisterMessage(Schedule)
_sym_db.RegisterMessage(Schedule.Range)


# @@protoc_insertion_point(module_scope)
