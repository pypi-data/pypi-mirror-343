# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# 通常这些文件是由 PyInstaller 从模板生成的，作为可执行文件的一部分
*.manifest
*.spec

# 安装日志
pip-log.txt
pip-delete-this-directory.txt

# 单元测试 / 覆盖率报告
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
# 对于库或包，你可能想要忽略这些文件，因为代码可能会在多个环境中运行
# 否则，将它们提交到版本控制中
# .python-version

# UV
# 与 Pipfile.lock 类似，通常建议将 uv.lock 包含在版本控制中
# 特别是对于二进制包，以确保可重现性
# uv.lock

# poetry
# 类似于 Pipfile.lock，通常建议将 poetry.lock 包含在版本控制中
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#pdm.lock
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; 由如 github.com/David-OConnor/pyflow 和 github.com/pdm-project/pdm 使用
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# 环境
.env
# 保留 .venv 在版本控制中是常见做法
# .venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# 编辑器相关
.idea/
.vscode/
*.swp
*.swo

# 操作系统相关
.DS_Store
Thumbs.db 