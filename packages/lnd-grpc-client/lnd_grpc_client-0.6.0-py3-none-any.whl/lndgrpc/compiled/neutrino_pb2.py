# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lndgrpc/compiled/neutrino.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1flndgrpc/compiled/neutrino.proto\x12\x0bneutrinorpc\"\x0f\n\rStatusRequest\"i\n\x0eStatusResponse\x12\x0e\n\x06\x61\x63tive\x18\x01 \x01(\x08\x12\x0e\n\x06synced\x18\x02 \x01(\x08\x12\x14\n\x0c\x62lock_height\x18\x03 \x01(\x05\x12\x12\n\nblock_hash\x18\x04 \x01(\t\x12\r\n\x05peers\x18\x05 \x03(\t\"$\n\x0e\x41\x64\x64PeerRequest\x12\x12\n\npeer_addrs\x18\x01 \x01(\t\"\x11\n\x0f\x41\x64\x64PeerResponse\"+\n\x15\x44isconnectPeerRequest\x12\x12\n\npeer_addrs\x18\x01 \x01(\t\"\x18\n\x16\x44isconnectPeerResponse\"%\n\x0fIsBannedRequest\x12\x12\n\npeer_addrs\x18\x01 \x01(\t\"\"\n\x10IsBannedResponse\x12\x0e\n\x06\x62\x61nned\x18\x01 \x01(\x08\"%\n\x15GetBlockHeaderRequest\x12\x0c\n\x04hash\x18\x01 \x01(\t\"\xa2\x02\n\x16GetBlockHeaderResponse\x12\x0c\n\x04hash\x18\x01 \x01(\t\x12\x15\n\rconfirmations\x18\x02 \x01(\x03\x12\x15\n\rstripped_size\x18\x03 \x01(\x03\x12\x0c\n\x04size\x18\x04 \x01(\x03\x12\x0e\n\x06weight\x18\x05 \x01(\x03\x12\x0e\n\x06height\x18\x06 \x01(\x05\x12\x0f\n\x07version\x18\x07 \x01(\x05\x12\x13\n\x0bversion_hex\x18\x08 \x01(\t\x12\x12\n\nmerkleroot\x18\t \x01(\t\x12\x0c\n\x04time\x18\n \x01(\x03\x12\r\n\x05nonce\x18\x0b \x01(\r\x12\x0c\n\x04\x62its\x18\x0c \x01(\t\x12\x0b\n\x03ntx\x18\r \x01(\x05\x12\x1b\n\x13previous_block_hash\x18\x0e \x01(\t\x12\x0f\n\x07raw_hex\x18\x0f \x01(\x0c\"\x1f\n\x0fGetBlockRequest\x12\x0c\n\x04hash\x18\x01 \x01(\t\"\xa8\x02\n\x10GetBlockResponse\x12\x0c\n\x04hash\x18\x01 \x01(\t\x12\x15\n\rconfirmations\x18\x02 \x01(\x03\x12\x15\n\rstripped_size\x18\x03 \x01(\x03\x12\x0c\n\x04size\x18\x04 \x01(\x03\x12\x0e\n\x06weight\x18\x05 \x01(\x03\x12\x0e\n\x06height\x18\x06 \x01(\x05\x12\x0f\n\x07version\x18\x07 \x01(\x05\x12\x13\n\x0bversion_hex\x18\x08 \x01(\t\x12\x12\n\nmerkleroot\x18\t \x01(\t\x12\n\n\x02tx\x18\n \x03(\t\x12\x0c\n\x04time\x18\x0b \x01(\x03\x12\r\n\x05nonce\x18\x0c \x01(\r\x12\x0c\n\x04\x62its\x18\r \x01(\t\x12\x0b\n\x03ntx\x18\x0e \x01(\x05\x12\x1b\n\x13previous_block_hash\x18\x0f \x01(\t\x12\x0f\n\x07raw_hex\x18\x10 \x01(\x0c\"!\n\x11GetCFilterRequest\x12\x0c\n\x04hash\x18\x01 \x01(\t\"$\n\x12GetCFilterResponse\x12\x0e\n\x06\x66ilter\x18\x01 \x01(\x0c\"%\n\x13GetBlockHashRequest\x12\x0e\n\x06height\x18\x01 \x01(\x05\"$\n\x14GetBlockHashResponse\x12\x0c\n\x04hash\x18\x01 \x01(\t2\x82\x05\n\x0bNeutrinoKit\x12\x41\n\x06Status\x12\x1a.neutrinorpc.StatusRequest\x1a\x1b.neutrinorpc.StatusResponse\x12\x44\n\x07\x41\x64\x64Peer\x12\x1b.neutrinorpc.AddPeerRequest\x1a\x1c.neutrinorpc.AddPeerResponse\x12Y\n\x0e\x44isconnectPeer\x12\".neutrinorpc.DisconnectPeerRequest\x1a#.neutrinorpc.DisconnectPeerResponse\x12G\n\x08IsBanned\x12\x1c.neutrinorpc.IsBannedRequest\x1a\x1d.neutrinorpc.IsBannedResponse\x12Y\n\x0eGetBlockHeader\x12\".neutrinorpc.GetBlockHeaderRequest\x1a#.neutrinorpc.GetBlockHeaderResponse\x12G\n\x08GetBlock\x12\x1c.neutrinorpc.GetBlockRequest\x1a\x1d.neutrinorpc.GetBlockResponse\x12M\n\nGetCFilter\x12\x1e.neutrinorpc.GetCFilterRequest\x1a\x1f.neutrinorpc.GetCFilterResponse\x12S\n\x0cGetBlockHash\x12 .neutrinorpc.GetBlockHashRequest\x1a!.neutrinorpc.GetBlockHashResponseB3Z1github.com/lightningnetwork/lnd/lnrpc/neutrinorpcb\x06proto3')



_STATUSREQUEST = DESCRIPTOR.message_types_by_name['StatusRequest']
_STATUSRESPONSE = DESCRIPTOR.message_types_by_name['StatusResponse']
_ADDPEERREQUEST = DESCRIPTOR.message_types_by_name['AddPeerRequest']
_ADDPEERRESPONSE = DESCRIPTOR.message_types_by_name['AddPeerResponse']
_DISCONNECTPEERREQUEST = DESCRIPTOR.message_types_by_name['DisconnectPeerRequest']
_DISCONNECTPEERRESPONSE = DESCRIPTOR.message_types_by_name['DisconnectPeerResponse']
_ISBANNEDREQUEST = DESCRIPTOR.message_types_by_name['IsBannedRequest']
_ISBANNEDRESPONSE = DESCRIPTOR.message_types_by_name['IsBannedResponse']
_GETBLOCKHEADERREQUEST = DESCRIPTOR.message_types_by_name['GetBlockHeaderRequest']
_GETBLOCKHEADERRESPONSE = DESCRIPTOR.message_types_by_name['GetBlockHeaderResponse']
_GETBLOCKREQUEST = DESCRIPTOR.message_types_by_name['GetBlockRequest']
_GETBLOCKRESPONSE = DESCRIPTOR.message_types_by_name['GetBlockResponse']
_GETCFILTERREQUEST = DESCRIPTOR.message_types_by_name['GetCFilterRequest']
_GETCFILTERRESPONSE = DESCRIPTOR.message_types_by_name['GetCFilterResponse']
_GETBLOCKHASHREQUEST = DESCRIPTOR.message_types_by_name['GetBlockHashRequest']
_GETBLOCKHASHRESPONSE = DESCRIPTOR.message_types_by_name['GetBlockHashResponse']
StatusRequest = _reflection.GeneratedProtocolMessageType('StatusRequest', (_message.Message,), {
  'DESCRIPTOR' : _STATUSREQUEST,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.StatusRequest)
  })
_sym_db.RegisterMessage(StatusRequest)

StatusResponse = _reflection.GeneratedProtocolMessageType('StatusResponse', (_message.Message,), {
  'DESCRIPTOR' : _STATUSRESPONSE,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.StatusResponse)
  })
_sym_db.RegisterMessage(StatusResponse)

AddPeerRequest = _reflection.GeneratedProtocolMessageType('AddPeerRequest', (_message.Message,), {
  'DESCRIPTOR' : _ADDPEERREQUEST,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.AddPeerRequest)
  })
_sym_db.RegisterMessage(AddPeerRequest)

AddPeerResponse = _reflection.GeneratedProtocolMessageType('AddPeerResponse', (_message.Message,), {
  'DESCRIPTOR' : _ADDPEERRESPONSE,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.AddPeerResponse)
  })
_sym_db.RegisterMessage(AddPeerResponse)

DisconnectPeerRequest = _reflection.GeneratedProtocolMessageType('DisconnectPeerRequest', (_message.Message,), {
  'DESCRIPTOR' : _DISCONNECTPEERREQUEST,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.DisconnectPeerRequest)
  })
_sym_db.RegisterMessage(DisconnectPeerRequest)

DisconnectPeerResponse = _reflection.GeneratedProtocolMessageType('DisconnectPeerResponse', (_message.Message,), {
  'DESCRIPTOR' : _DISCONNECTPEERRESPONSE,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.DisconnectPeerResponse)
  })
_sym_db.RegisterMessage(DisconnectPeerResponse)

IsBannedRequest = _reflection.GeneratedProtocolMessageType('IsBannedRequest', (_message.Message,), {
  'DESCRIPTOR' : _ISBANNEDREQUEST,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.IsBannedRequest)
  })
_sym_db.RegisterMessage(IsBannedRequest)

IsBannedResponse = _reflection.GeneratedProtocolMessageType('IsBannedResponse', (_message.Message,), {
  'DESCRIPTOR' : _ISBANNEDRESPONSE,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.IsBannedResponse)
  })
_sym_db.RegisterMessage(IsBannedResponse)

GetBlockHeaderRequest = _reflection.GeneratedProtocolMessageType('GetBlockHeaderRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETBLOCKHEADERREQUEST,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.GetBlockHeaderRequest)
  })
_sym_db.RegisterMessage(GetBlockHeaderRequest)

GetBlockHeaderResponse = _reflection.GeneratedProtocolMessageType('GetBlockHeaderResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETBLOCKHEADERRESPONSE,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.GetBlockHeaderResponse)
  })
_sym_db.RegisterMessage(GetBlockHeaderResponse)

GetBlockRequest = _reflection.GeneratedProtocolMessageType('GetBlockRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETBLOCKREQUEST,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.GetBlockRequest)
  })
_sym_db.RegisterMessage(GetBlockRequest)

GetBlockResponse = _reflection.GeneratedProtocolMessageType('GetBlockResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETBLOCKRESPONSE,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.GetBlockResponse)
  })
_sym_db.RegisterMessage(GetBlockResponse)

GetCFilterRequest = _reflection.GeneratedProtocolMessageType('GetCFilterRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCFILTERREQUEST,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.GetCFilterRequest)
  })
_sym_db.RegisterMessage(GetCFilterRequest)

GetCFilterResponse = _reflection.GeneratedProtocolMessageType('GetCFilterResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETCFILTERRESPONSE,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.GetCFilterResponse)
  })
_sym_db.RegisterMessage(GetCFilterResponse)

GetBlockHashRequest = _reflection.GeneratedProtocolMessageType('GetBlockHashRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETBLOCKHASHREQUEST,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.GetBlockHashRequest)
  })
_sym_db.RegisterMessage(GetBlockHashRequest)

GetBlockHashResponse = _reflection.GeneratedProtocolMessageType('GetBlockHashResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETBLOCKHASHRESPONSE,
  '__module__' : 'lndgrpc.compiled.neutrino_pb2'
  # @@protoc_insertion_point(class_scope:neutrinorpc.GetBlockHashResponse)
  })
_sym_db.RegisterMessage(GetBlockHashResponse)

_NEUTRINOKIT = DESCRIPTOR.services_by_name['NeutrinoKit']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z1github.com/lightningnetwork/lnd/lnrpc/neutrinorpc'
  _STATUSREQUEST._serialized_start=48
  _STATUSREQUEST._serialized_end=63
  _STATUSRESPONSE._serialized_start=65
  _STATUSRESPONSE._serialized_end=170
  _ADDPEERREQUEST._serialized_start=172
  _ADDPEERREQUEST._serialized_end=208
  _ADDPEERRESPONSE._serialized_start=210
  _ADDPEERRESPONSE._serialized_end=227
  _DISCONNECTPEERREQUEST._serialized_start=229
  _DISCONNECTPEERREQUEST._serialized_end=272
  _DISCONNECTPEERRESPONSE._serialized_start=274
  _DISCONNECTPEERRESPONSE._serialized_end=298
  _ISBANNEDREQUEST._serialized_start=300
  _ISBANNEDREQUEST._serialized_end=337
  _ISBANNEDRESPONSE._serialized_start=339
  _ISBANNEDRESPONSE._serialized_end=373
  _GETBLOCKHEADERREQUEST._serialized_start=375
  _GETBLOCKHEADERREQUEST._serialized_end=412
  _GETBLOCKHEADERRESPONSE._serialized_start=415
  _GETBLOCKHEADERRESPONSE._serialized_end=705
  _GETBLOCKREQUEST._serialized_start=707
  _GETBLOCKREQUEST._serialized_end=738
  _GETBLOCKRESPONSE._serialized_start=741
  _GETBLOCKRESPONSE._serialized_end=1037
  _GETCFILTERREQUEST._serialized_start=1039
  _GETCFILTERREQUEST._serialized_end=1072
  _GETCFILTERRESPONSE._serialized_start=1074
  _GETCFILTERRESPONSE._serialized_end=1110
  _GETBLOCKHASHREQUEST._serialized_start=1112
  _GETBLOCKHASHREQUEST._serialized_end=1149
  _GETBLOCKHASHRESPONSE._serialized_start=1151
  _GETBLOCKHASHRESPONSE._serialized_end=1187
  _NEUTRINOKIT._serialized_start=1190
  _NEUTRINOKIT._serialized_end=1832
# @@protoc_insertion_point(module_scope)
