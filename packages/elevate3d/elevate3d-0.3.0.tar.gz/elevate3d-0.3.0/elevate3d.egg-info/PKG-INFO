Metadata-Version: 2.4
Name: elevate3d
Version: 0.3.0
Summary: 3D terrain and structure reconstruction from single RGB images
Home-page: https://github.com/krdgomer/elevate3d
Author: Ömer Can Karadağ
Author-email: krdg.omercan@hotmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: open3d
Requires-Dist: numpy
Requires-Dist: pillow
Requires-Dist: opencv-python
Requires-Dist: torch
Requires-Dist: albumentations
Requires-Dist: deepforest
Requires-Dist: scikit-image
Requires-Dist: huggingface_hub
Requires-Dist: flask
Requires-Dist: trimesh
Requires-Dist: matplotlib
Requires-Dist: scipy
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Elevate3D

Generate 3D models from satellite & aerial images using deep learning

## Overview

Elevate3D is an early-stage, experimental Python tool that takes RGB images and generates basic 3D models using Mask R-CNN for building detection, Pix2Pix for elevation prediction, and Open3D for mesh generation.

âš  This is NOT a professional-grade tool. It's in a very early state, and results may be highly inconsistent. Expect rough outputs, and feel free to experiment or modify the code to improve it.

## Features

âœ… Automatic Building Segmentation (Mask R-CNN)\
âœ… Elevation Prediction (Pix2Pix)\
âœ… 3D Mesh Generation (Open3D)\
âœ… Pretrained Weights Included â€“ No training required\
âœ… End-to-End Pipeline â€“ Input images, output a 3D model

## Installation

1. Download the latest release (`.rar` file) from the [Releases](https://github.com/krdgomer/Elevate3D/releases) page.
2. Unzip the contents.
3. Install dependencies:
   
```
pip install -r requirements.txt
```

4. You're ready to generate 3D models!

## Usage

Run the following command to generate a 3D model from an input image:

```
python src/run_pipeline.py --image_path "path/to/your/image.png"
```
