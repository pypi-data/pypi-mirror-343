# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ScrollByConfig(UniversalBaseModel):
    x_axis: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="xAxis")] = pydantic.Field(
        default=None
    )
    """
    The amount of pixels/percentage to scroll horizontally. Percentage values should be between 0 and 100. Positive values scroll right, negative values scroll left.
    """

    y_axis: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="yAxis")] = pydantic.Field(
        default=None
    )
    """
    The amount of pixels/percentage to scroll vertically. Percentage values should be between 0 and 100. Positive values scroll down, negative values scroll up.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
