# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class ScrapeResponseContent(UniversalBaseModel):
    content_type: typing_extensions.Annotated[str, FieldMetadata(alias="contentType")] = pydantic.Field()
    """
    The mime type of content extracted from the browser window (usually text/plain but could be text/csv or other types depending on the site).
    """

    text: str = pydantic.Field()
    """
    The text content of the browser window.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
