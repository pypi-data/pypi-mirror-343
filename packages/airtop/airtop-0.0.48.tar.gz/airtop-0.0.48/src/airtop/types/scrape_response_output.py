# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from .scrape_response_content import ScrapeResponseContent
from ..core.serialization import FieldMetadata
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ScrapeResponseOutput(UniversalBaseModel):
    scraped_content: typing_extensions.Annotated[ScrapeResponseContent, FieldMetadata(alias="scrapedContent")] = (
        pydantic.Field()
    )
    """
    The scraped content of the browser window.
    """

    selected_text: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="selectedText")] = (
        pydantic.Field(default=None)
    )
    """
    Any text that was highlighted in the browser window.
    """

    title: str = pydantic.Field()
    """
    The title of the browser page.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
