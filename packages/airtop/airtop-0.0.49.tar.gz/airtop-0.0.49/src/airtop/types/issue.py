# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Issue(UniversalBaseModel):
    code: typing.Optional[str] = pydantic.Field(default=None)
    """
    Issue code.
    """

    details: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Any associated details.
    """

    message: str = pydantic.Field()
    """
    Message describing the issue.
    """

    reason: typing.Optional[str] = pydantic.Field(default=None)
    """
    Underlying reason for the issue.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
