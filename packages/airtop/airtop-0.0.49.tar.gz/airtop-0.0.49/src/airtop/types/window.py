# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class Window(UniversalBaseModel):
    live_view_url: typing_extensions.Annotated[str, FieldMetadata(alias="liveViewUrl")] = pydantic.Field()
    """
    Url for loading a browser window live view that is configured according to the request options like screenResolution, disableResize, etc.
    """

    target_id: typing_extensions.Annotated[str, FieldMetadata(alias="targetId")] = pydantic.Field()
    """
    CDP target ID of the browser window
    """

    window_id: typing_extensions.Annotated[str, FieldMetadata(alias="windowId")] = pydantic.Field()
    """
    Airtop window ID of the browser window
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
