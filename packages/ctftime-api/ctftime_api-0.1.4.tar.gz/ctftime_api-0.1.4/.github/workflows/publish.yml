name: Publish release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      upload:
        description: 'Upload release to PyPI'
        required: false
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  release-build:
    name: Build the release
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write
      attestations: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          version: "latest"

      - name: Install the project
        run: uv sync --no-group docs --no-group dev

      - name: Package project
        run: uv build -o dist/

      - name: Sign build artifacts
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "dist/*"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          retention-days: 1
          path: "dist/"


  pypi-publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: release-build
    if: ${{ (github.event.inputs.upload || github.ref_type == 'tag') }}

    permissions:
      contents: read
      id-token: write

    environment:
      name: pypi

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true
