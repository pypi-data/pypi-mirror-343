# coding: utf-8

"""
    CNB OPENAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: cnb@tencent.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr
from typing import List, Optional
from typing_extensions import Annotated
from cnb_api.models.dto_build_logs_result import DtoBuildLogsResult
from cnb_api.models.dto_build_result import DtoBuildResult
from cnb_api.models.dto_build_status_result import DtoBuildStatusResult
from cnb_api.models.dto_start_build_req import DtoStartBuildReq

from cnb_api.api_client import ApiClient, RequestSerialized
from cnb_api.api_response import ApiResponse
from cnb_api.rest import RESTResponseType


class BuildApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_build_logs(
        self,
        repo: Annotated[StrictStr, Field(description="Repo path")],
        create_time: Annotated[Optional[StrictStr], Field(description="Start date in \"YYYY-MM-DD\" format, e.g. \"2024-12-01\"")] = None,
        end_time: Annotated[Optional[StrictStr], Field(description="End date in \"YYYY-MM-DD\" format, e.g. \"2024-12-01\"")] = None,
        event: Annotated[Optional[StrictStr], Field(description="Event name, e.g. \"push\"")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Pagination page number, default(1)")] = None,
        pagesize: Annotated[Optional[StrictInt], Field(description="Pagination page size, default(20), max(100)")] = None,
        sha: Annotated[Optional[StrictStr], Field(description="Commit ID, e.g. \"2221d4535ec0c921bcd0858627c5025a871dd2b5\"")] = None,
        sn: Annotated[Optional[StrictStr], Field(description="Build SN, e.g. \"cnb-1qa-1i3f5ecau")] = None,
        source_ref: Annotated[Optional[StrictStr], Field(description="Source branch name, e.g. \"dev\"")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Build status: \"pending\", \"success\", \"error\", \"cancel\"")] = None,
        target_ref: Annotated[Optional[StrictStr], Field(description="Target branch name, e.g. \"main\"")] = None,
        user_id: Annotated[Optional[StrictStr], Field(description="User ID")] = None,
        user_name: Annotated[Optional[StrictStr], Field(description="Username")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> DtoBuildLogsResult:
        """查询流水线构建列表。List pipeline builds.

        访问令牌调用此接口需包含以下权限。Required permissions for access token.  repo-cnb-trigger:r

        :param repo: Repo path (required)
        :type repo: str
        :param create_time: Start date in \"YYYY-MM-DD\" format, e.g. \"2024-12-01\"
        :type create_time: str
        :param end_time: End date in \"YYYY-MM-DD\" format, e.g. \"2024-12-01\"
        :type end_time: str
        :param event: Event name, e.g. \"push\"
        :type event: str
        :param page: Pagination page number, default(1)
        :type page: int
        :param pagesize: Pagination page size, default(20), max(100)
        :type pagesize: int
        :param sha: Commit ID, e.g. \"2221d4535ec0c921bcd0858627c5025a871dd2b5\"
        :type sha: str
        :param sn: Build SN, e.g. \"cnb-1qa-1i3f5ecau
        :type sn: str
        :param source_ref: Source branch name, e.g. \"dev\"
        :type source_ref: str
        :param status: Build status: \"pending\", \"success\", \"error\", \"cancel\"
        :type status: str
        :param target_ref: Target branch name, e.g. \"main\"
        :type target_ref: str
        :param user_id: User ID
        :type user_id: str
        :param user_name: Username
        :type user_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_build_logs_serialize(
            repo=repo,
            create_time=create_time,
            end_time=end_time,
            event=event,
            page=page,
            pagesize=pagesize,
            sha=sha,
            sn=sn,
            source_ref=source_ref,
            status=status,
            target_ref=target_ref,
            user_id=user_id,
            user_name=user_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DtoBuildLogsResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_build_logs_with_http_info(
        self,
        repo: Annotated[StrictStr, Field(description="Repo path")],
        create_time: Annotated[Optional[StrictStr], Field(description="Start date in \"YYYY-MM-DD\" format, e.g. \"2024-12-01\"")] = None,
        end_time: Annotated[Optional[StrictStr], Field(description="End date in \"YYYY-MM-DD\" format, e.g. \"2024-12-01\"")] = None,
        event: Annotated[Optional[StrictStr], Field(description="Event name, e.g. \"push\"")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Pagination page number, default(1)")] = None,
        pagesize: Annotated[Optional[StrictInt], Field(description="Pagination page size, default(20), max(100)")] = None,
        sha: Annotated[Optional[StrictStr], Field(description="Commit ID, e.g. \"2221d4535ec0c921bcd0858627c5025a871dd2b5\"")] = None,
        sn: Annotated[Optional[StrictStr], Field(description="Build SN, e.g. \"cnb-1qa-1i3f5ecau")] = None,
        source_ref: Annotated[Optional[StrictStr], Field(description="Source branch name, e.g. \"dev\"")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Build status: \"pending\", \"success\", \"error\", \"cancel\"")] = None,
        target_ref: Annotated[Optional[StrictStr], Field(description="Target branch name, e.g. \"main\"")] = None,
        user_id: Annotated[Optional[StrictStr], Field(description="User ID")] = None,
        user_name: Annotated[Optional[StrictStr], Field(description="Username")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[DtoBuildLogsResult]:
        """查询流水线构建列表。List pipeline builds.

        访问令牌调用此接口需包含以下权限。Required permissions for access token.  repo-cnb-trigger:r

        :param repo: Repo path (required)
        :type repo: str
        :param create_time: Start date in \"YYYY-MM-DD\" format, e.g. \"2024-12-01\"
        :type create_time: str
        :param end_time: End date in \"YYYY-MM-DD\" format, e.g. \"2024-12-01\"
        :type end_time: str
        :param event: Event name, e.g. \"push\"
        :type event: str
        :param page: Pagination page number, default(1)
        :type page: int
        :param pagesize: Pagination page size, default(20), max(100)
        :type pagesize: int
        :param sha: Commit ID, e.g. \"2221d4535ec0c921bcd0858627c5025a871dd2b5\"
        :type sha: str
        :param sn: Build SN, e.g. \"cnb-1qa-1i3f5ecau
        :type sn: str
        :param source_ref: Source branch name, e.g. \"dev\"
        :type source_ref: str
        :param status: Build status: \"pending\", \"success\", \"error\", \"cancel\"
        :type status: str
        :param target_ref: Target branch name, e.g. \"main\"
        :type target_ref: str
        :param user_id: User ID
        :type user_id: str
        :param user_name: Username
        :type user_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_build_logs_serialize(
            repo=repo,
            create_time=create_time,
            end_time=end_time,
            event=event,
            page=page,
            pagesize=pagesize,
            sha=sha,
            sn=sn,
            source_ref=source_ref,
            status=status,
            target_ref=target_ref,
            user_id=user_id,
            user_name=user_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DtoBuildLogsResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_build_logs_without_preload_content(
        self,
        repo: Annotated[StrictStr, Field(description="Repo path")],
        create_time: Annotated[Optional[StrictStr], Field(description="Start date in \"YYYY-MM-DD\" format, e.g. \"2024-12-01\"")] = None,
        end_time: Annotated[Optional[StrictStr], Field(description="End date in \"YYYY-MM-DD\" format, e.g. \"2024-12-01\"")] = None,
        event: Annotated[Optional[StrictStr], Field(description="Event name, e.g. \"push\"")] = None,
        page: Annotated[Optional[StrictInt], Field(description="Pagination page number, default(1)")] = None,
        pagesize: Annotated[Optional[StrictInt], Field(description="Pagination page size, default(20), max(100)")] = None,
        sha: Annotated[Optional[StrictStr], Field(description="Commit ID, e.g. \"2221d4535ec0c921bcd0858627c5025a871dd2b5\"")] = None,
        sn: Annotated[Optional[StrictStr], Field(description="Build SN, e.g. \"cnb-1qa-1i3f5ecau")] = None,
        source_ref: Annotated[Optional[StrictStr], Field(description="Source branch name, e.g. \"dev\"")] = None,
        status: Annotated[Optional[StrictStr], Field(description="Build status: \"pending\", \"success\", \"error\", \"cancel\"")] = None,
        target_ref: Annotated[Optional[StrictStr], Field(description="Target branch name, e.g. \"main\"")] = None,
        user_id: Annotated[Optional[StrictStr], Field(description="User ID")] = None,
        user_name: Annotated[Optional[StrictStr], Field(description="Username")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """查询流水线构建列表。List pipeline builds.

        访问令牌调用此接口需包含以下权限。Required permissions for access token.  repo-cnb-trigger:r

        :param repo: Repo path (required)
        :type repo: str
        :param create_time: Start date in \"YYYY-MM-DD\" format, e.g. \"2024-12-01\"
        :type create_time: str
        :param end_time: End date in \"YYYY-MM-DD\" format, e.g. \"2024-12-01\"
        :type end_time: str
        :param event: Event name, e.g. \"push\"
        :type event: str
        :param page: Pagination page number, default(1)
        :type page: int
        :param pagesize: Pagination page size, default(20), max(100)
        :type pagesize: int
        :param sha: Commit ID, e.g. \"2221d4535ec0c921bcd0858627c5025a871dd2b5\"
        :type sha: str
        :param sn: Build SN, e.g. \"cnb-1qa-1i3f5ecau
        :type sn: str
        :param source_ref: Source branch name, e.g. \"dev\"
        :type source_ref: str
        :param status: Build status: \"pending\", \"success\", \"error\", \"cancel\"
        :type status: str
        :param target_ref: Target branch name, e.g. \"main\"
        :type target_ref: str
        :param user_id: User ID
        :type user_id: str
        :param user_name: Username
        :type user_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_build_logs_serialize(
            repo=repo,
            create_time=create_time,
            end_time=end_time,
            event=event,
            page=page,
            pagesize=pagesize,
            sha=sha,
            sn=sn,
            source_ref=source_ref,
            status=status,
            target_ref=target_ref,
            user_id=user_id,
            user_name=user_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DtoBuildLogsResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_build_logs_serialize(
        self,
        repo,
        create_time,
        end_time,
        event,
        page,
        pagesize,
        sha,
        sn,
        source_ref,
        status,
        target_ref,
        user_id,
        user_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if repo is not None:
            _path_params['repo'] = repo
        # process the query parameters
        if create_time is not None:
            
            _query_params.append(('createTime', create_time))
            
        if end_time is not None:
            
            _query_params.append(('endTime', end_time))
            
        if event is not None:
            
            _query_params.append(('event', event))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if pagesize is not None:
            
            _query_params.append(('pagesize', pagesize))
            
        if sha is not None:
            
            _query_params.append(('sha', sha))
            
        if sn is not None:
            
            _query_params.append(('sn', sn))
            
        if source_ref is not None:
            
            _query_params.append(('sourceRef', source_ref))
            
        if status is not None:
            
            _query_params.append(('status', status))
            
        if target_ref is not None:
            
            _query_params.append(('targetRef', target_ref))
            
        if user_id is not None:
            
            _query_params.append(('userId', user_id))
            
        if user_name is not None:
            
            _query_params.append(('userName', user_name))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/vnd.cnb.api+json', 
                    'application/vnd.cnb.web+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'BearerAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/{repo}/-/build/logs',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_build_status(
        self,
        repo: Annotated[StrictStr, Field(description="Repo path")],
        sn: Annotated[StrictStr, Field(description="SN")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> DtoBuildStatusResult:
        """查询流水线构建状态。Get pipeline build status.

        访问令牌调用此接口需包含以下权限。Required permissions for access token.  repo-cnb-trigger:r

        :param repo: Repo path (required)
        :type repo: str
        :param sn: SN (required)
        :type sn: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_build_status_serialize(
            repo=repo,
            sn=sn,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DtoBuildStatusResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_build_status_with_http_info(
        self,
        repo: Annotated[StrictStr, Field(description="Repo path")],
        sn: Annotated[StrictStr, Field(description="SN")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[DtoBuildStatusResult]:
        """查询流水线构建状态。Get pipeline build status.

        访问令牌调用此接口需包含以下权限。Required permissions for access token.  repo-cnb-trigger:r

        :param repo: Repo path (required)
        :type repo: str
        :param sn: SN (required)
        :type sn: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_build_status_serialize(
            repo=repo,
            sn=sn,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DtoBuildStatusResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_build_status_without_preload_content(
        self,
        repo: Annotated[StrictStr, Field(description="Repo path")],
        sn: Annotated[StrictStr, Field(description="SN")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """查询流水线构建状态。Get pipeline build status.

        访问令牌调用此接口需包含以下权限。Required permissions for access token.  repo-cnb-trigger:r

        :param repo: Repo path (required)
        :type repo: str
        :param sn: SN (required)
        :type sn: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_build_status_serialize(
            repo=repo,
            sn=sn,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DtoBuildStatusResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_build_status_serialize(
        self,
        repo,
        sn,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if repo is not None:
            _path_params['repo'] = repo
        if sn is not None:
            _path_params['sn'] = sn
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/vnd.cnb.api+json', 
                    'application/vnd.cnb.web+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'BearerAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/{repo}/-/build/status/{sn}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def start_build(
        self,
        repo: Annotated[StrictStr, Field(description="repo")],
        request: Annotated[DtoStartBuildReq, Field(description="Build params")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[DtoBuildResult]:
        """开始一个构建。Start a build.

        访问令牌调用此接口需包含以下权限。Required permissions for access token.  repo-cnb-trigger:rw

        :param repo: repo (required)
        :type repo: str
        :param request: Build params (required)
        :type request: DtoStartBuildReq
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._start_build_serialize(
            repo=repo,
            request=request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[DtoBuildResult]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def start_build_with_http_info(
        self,
        repo: Annotated[StrictStr, Field(description="repo")],
        request: Annotated[DtoStartBuildReq, Field(description="Build params")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[DtoBuildResult]]:
        """开始一个构建。Start a build.

        访问令牌调用此接口需包含以下权限。Required permissions for access token.  repo-cnb-trigger:rw

        :param repo: repo (required)
        :type repo: str
        :param request: Build params (required)
        :type request: DtoStartBuildReq
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._start_build_serialize(
            repo=repo,
            request=request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[DtoBuildResult]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def start_build_without_preload_content(
        self,
        repo: Annotated[StrictStr, Field(description="repo")],
        request: Annotated[DtoStartBuildReq, Field(description="Build params")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """开始一个构建。Start a build.

        访问令牌调用此接口需包含以下权限。Required permissions for access token.  repo-cnb-trigger:rw

        :param repo: repo (required)
        :type repo: str
        :param request: Build params (required)
        :type request: DtoStartBuildReq
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._start_build_serialize(
            repo=repo,
            request=request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[DtoBuildResult]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _start_build_serialize(
        self,
        repo,
        request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if repo is not None:
            _path_params['repo'] = repo
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if request is not None:
            _body_params = request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/vnd.cnb.api+json', 
                    'application/vnd.cnb.web+json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'BearerAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/{repo}/-/build/start',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def stop_build(
        self,
        repo: Annotated[StrictStr, Field(description="repo")],
        sn: Annotated[StrictStr, Field(description="SN")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[DtoBuildResult]:
        """停止一个构建。 Stop a build.

        访问令牌调用此接口需包含以下权限。Required permissions for access token.  repo-cnb-trigger:rw

        :param repo: repo (required)
        :type repo: str
        :param sn: SN (required)
        :type sn: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._stop_build_serialize(
            repo=repo,
            sn=sn,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[DtoBuildResult]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def stop_build_with_http_info(
        self,
        repo: Annotated[StrictStr, Field(description="repo")],
        sn: Annotated[StrictStr, Field(description="SN")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[DtoBuildResult]]:
        """停止一个构建。 Stop a build.

        访问令牌调用此接口需包含以下权限。Required permissions for access token.  repo-cnb-trigger:rw

        :param repo: repo (required)
        :type repo: str
        :param sn: SN (required)
        :type sn: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._stop_build_serialize(
            repo=repo,
            sn=sn,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[DtoBuildResult]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def stop_build_without_preload_content(
        self,
        repo: Annotated[StrictStr, Field(description="repo")],
        sn: Annotated[StrictStr, Field(description="SN")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """停止一个构建。 Stop a build.

        访问令牌调用此接口需包含以下权限。Required permissions for access token.  repo-cnb-trigger:rw

        :param repo: repo (required)
        :type repo: str
        :param sn: SN (required)
        :type sn: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._stop_build_serialize(
            repo=repo,
            sn=sn,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[DtoBuildResult]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _stop_build_serialize(
        self,
        repo,
        sn,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if repo is not None:
            _path_params['repo'] = repo
        if sn is not None:
            _path_params['sn'] = sn
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'application/vnd.cnb.api+json', 
                    'application/vnd.cnb.web+json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'BearerAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/{repo}/-/build/stop/{sn}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


