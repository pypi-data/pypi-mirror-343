# coding: utf-8

"""
    CNB OPENAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: cnb@tencent.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, StrictBool, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class WebBranchProtection(BaseModel):
    """
    WebBranchProtection
    """ # noqa: E501
    allow_creation: Optional[StrictBool] = None
    allow_deletions: Optional[StrictBool] = None
    allow_force_pushes: Optional[StrictBool] = None
    allow_master_creation: Optional[StrictBool] = None
    allow_master_deletions: Optional[StrictBool] = None
    allow_master_force_pushes: Optional[StrictBool] = None
    allow_master_pushes: Optional[StrictBool] = None
    allow_pushes: Optional[StrictBool] = None
    id: Optional[StrictStr] = None
    match_count: Optional[StrictInt] = None
    required_approved_review_count: Optional[StrictInt] = None
    required_approved_review_ratio: Optional[StrictInt] = None
    required_commit_signatures: Optional[StrictBool] = None
    required_linear_history: Optional[StrictBool] = None
    required_master_approve: Optional[StrictBool] = None
    required_must_auto_merge: Optional[StrictBool] = None
    required_must_push_via_pull_request: Optional[StrictBool] = None
    required_pull_request_reviews: Optional[StrictBool] = None
    required_status_checks: Optional[StrictBool] = None
    rule: Optional[StrictStr] = None
    __properties: ClassVar[List[str]] = ["allow_creation", "allow_deletions", "allow_force_pushes", "allow_master_creation", "allow_master_deletions", "allow_master_force_pushes", "allow_master_pushes", "allow_pushes", "id", "match_count", "required_approved_review_count", "required_approved_review_ratio", "required_commit_signatures", "required_linear_history", "required_master_approve", "required_must_auto_merge", "required_must_push_via_pull_request", "required_pull_request_reviews", "required_status_checks", "rule"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of WebBranchProtection from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of WebBranchProtection from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "allow_creation": obj.get("allow_creation"),
            "allow_deletions": obj.get("allow_deletions"),
            "allow_force_pushes": obj.get("allow_force_pushes"),
            "allow_master_creation": obj.get("allow_master_creation"),
            "allow_master_deletions": obj.get("allow_master_deletions"),
            "allow_master_force_pushes": obj.get("allow_master_force_pushes"),
            "allow_master_pushes": obj.get("allow_master_pushes"),
            "allow_pushes": obj.get("allow_pushes"),
            "id": obj.get("id"),
            "match_count": obj.get("match_count"),
            "required_approved_review_count": obj.get("required_approved_review_count"),
            "required_approved_review_ratio": obj.get("required_approved_review_ratio"),
            "required_commit_signatures": obj.get("required_commit_signatures"),
            "required_linear_history": obj.get("required_linear_history"),
            "required_master_approve": obj.get("required_master_approve"),
            "required_must_auto_merge": obj.get("required_must_auto_merge"),
            "required_must_push_via_pull_request": obj.get("required_must_push_via_pull_request"),
            "required_pull_request_reviews": obj.get("required_pull_request_reviews"),
            "required_status_checks": obj.get("required_status_checks"),
            "rule": obj.get("rule")
        })
        return _obj


