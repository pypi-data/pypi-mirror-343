# coding: utf-8

"""
    CNB OPENAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: cnb@tencent.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cnb_api.api.collaborators_api import CollaboratorsApi


class TestCollaboratorsApi(unittest.TestCase):
    """CollaboratorsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = CollaboratorsApi()

    def tearDown(self) -> None:
        pass

    def test_add_members_of_group(self) -> None:
        """Test case for add_members_of_group

        添加成员。Add members.
        """
        pass

    def test_add_members_of_mission(self) -> None:
        """Test case for add_members_of_mission

        添加成员。Add members.
        """
        pass

    def test_add_members_of_registry(self) -> None:
        """Test case for add_members_of_registry

        添加成员。Add members.
        """
        pass

    def test_add_members_of_repo(self) -> None:
        """Test case for add_members_of_repo

        添加成员。Add members.
        """
        pass

    def test_delete_members_of_group(self) -> None:
        """Test case for delete_members_of_group

        删除指定组织或仓库的直接成员。Remove direct members from specified organization/repository.
        """
        pass

    def test_delete_members_of_repo(self) -> None:
        """Test case for delete_members_of_repo

        删除指定组织或仓库的直接成员。Remove direct members from specified organization/repository.
        """
        pass

    def test_delete_outside_collaborators(self) -> None:
        """Test case for delete_outside_collaborators

        删除指定仓库的外部贡献者。Removes external contributors from specified repository.
        """
        pass

    def test_list_all_members(self) -> None:
        """Test case for list_all_members

        获取指定仓库内的有效成员列表，包含继承成员。List active members in specified repository including inherited members.
        """
        pass

    def test_list_inherit_members_of_group(self) -> None:
        """Test case for list_inherit_members_of_group

        获取指定组织或仓库内的继承成员。List inherited members within specified organization or repository。
        """
        pass

    def test_list_inherit_members_of_repo(self) -> None:
        """Test case for list_inherit_members_of_repo

        获取指定组织或仓库内的继承成员。List inherited members within specified organization or repository。
        """
        pass

    def test_list_members_of_group(self) -> None:
        """Test case for list_members_of_group

        获取指定组织或仓库内的所有直接成员。List all direct members within specified organization or repository.
        """
        pass

    def test_list_members_of_repo(self) -> None:
        """Test case for list_members_of_repo

        获取指定组织或仓库内的所有直接成员。List all direct members within specified organization or repository.
        """
        pass

    def test_list_outside_collaborators(self) -> None:
        """Test case for list_outside_collaborators

        获取指定仓库内的外部贡献者。List external contributors in specified repository.
        """
        pass

    def test_top_contributors(self) -> None:
        """Test case for top_contributors

        获取 top 贡献用户。List the top contributing users
        """
        pass

    def test_update_members_of_group(self) -> None:
        """Test case for update_members_of_group

        更新指定组织或仓库内的直接成员权限信息。Update permission information for direct members in specified organization/repository.
        """
        pass

    def test_update_members_of_repo(self) -> None:
        """Test case for update_members_of_repo

        更新指定组织或仓库内的直接成员权限信息。Update permission information for direct members in specified organization/repository.
        """
        pass

    def test_update_outside_collaborators(self) -> None:
        """Test case for update_outside_collaborators

        更新指定仓库的外部贡献者权限信息。 Update permission information for external contributors in specified repository.
        """
        pass


if __name__ == '__main__':
    unittest.main()
