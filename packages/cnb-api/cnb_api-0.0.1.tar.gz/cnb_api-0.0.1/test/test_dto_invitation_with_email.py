# coding: utf-8

"""
    CNB OPENAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: cnb@tencent.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cnb_api.models.dto_invitation_with_email import DtoInvitationWithEmail

class TestDtoInvitationWithEmail(unittest.TestCase):
    """DtoInvitationWithEmail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DtoInvitationWithEmail:
        """Test DtoInvitationWithEmail
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DtoInvitationWithEmail`
        """
        model = DtoInvitationWithEmail()
        if include_optional:
            return DtoInvitationWithEmail(
                count = 56,
                creator = '',
                email = '',
                email_match = True,
                expire = 56,
                is_outside_collaborator = True,
                resource = cnb_api.models.dto/resources.dto.Resources(
                    group = cnb_api.models.dto/resource_group.dto.ResourceGroup(
                        created_at = '', 
                        description = '', 
                        domain = '', 
                        email = '', 
                        freeze = True, 
                        id = 56, 
                        name = '', 
                        path = '', 
                        remark = '', 
                        site = '', 
                        updated_at = '', 
                        wechat_mp = '', ), 
                    mission = cnb_api.models.dto/resource_mission.dto.ResourceMission(
                        created_at = '', 
                        description = '', 
                        freeze = True, 
                        id = 56, 
                        name = '', 
                        path = '', 
                        updated_at = '', 
                        visibility_level = 0, ), 
                    registry = cnb_api.models.dto/resource_registry.dto.ResourceRegistry(
                        artifact_policy = 'all', 
                        created_at = '', 
                        description = '', 
                        freeze = True, 
                        id = '', 
                        kind = '', 
                        last_push_time = '', 
                        last_push_user = cnb_api.models.dto/users.dto.Users(
                            avatar = '', 
                            created_at = '', 
                            email = '', 
                            freeze = True, 
                            id = '', 
                            nickname = '', 
                            type = 0, 
                            username = '', 
                            verified = 56, 
                            verified_expire_in = '', ), 
                        name = '', 
                        overwrite_policy = 'forbid', 
                        path = '', 
                        pkg_count = 56, 
                        updated_at = '', 
                        used_size = 56, ), 
                    repo = cnb_api.models.dto/resource_repo.dto.ResourceRepo(
                        created_at = '', 
                        freeze = True, 
                        id = 56, 
                        name = '', 
                        path = '', 
                        status = cnb_api.models.status.status(), 
                        updated_at = '', ), 
                    type = 0, ),
                role = 0,
                status = ''
            )
        else:
            return DtoInvitationWithEmail(
        )
        """

    def testDtoInvitationWithEmail(self):
        """Test DtoInvitationWithEmail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
