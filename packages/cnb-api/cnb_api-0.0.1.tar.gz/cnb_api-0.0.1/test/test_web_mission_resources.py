# coding: utf-8

"""
    CNB OPENAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: cnb@tencent.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cnb_api.models.web_mission_resources import WebMissionResources

class TestWebMissionResources(unittest.TestCase):
    """WebMissionResources unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebMissionResources:
        """Test WebMissionResources
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebMissionResources`
        """
        model = WebMissionResources()
        if include_optional:
            return WebMissionResources(
                issues = [
                    cnb_api.models.web/issue_resource.web.IssueResource(
                        assignees = [
                            cnb_api.models.git_woa_com_cnb_monorepo_mission_mission_resource_dto_web/user_info.git_woa_com_cnb_monorepo_mission_mission-resource_dto_web.UserInfo(
                                nickname = '', 
                                username = '', )
                            ], 
                        author = cnb_api.models.git_woa_com_cnb_monorepo_mission_mission_resource_dto_web/user_info.git_woa_com_cnb_monorepo_mission_mission-resource_dto_web.UserInfo(
                            nickname = '', 
                            username = '', ), 
                        comment_count = 56, 
                        created_at = '', 
                        customer_fields = [
                            cnb_api.models.web/customer_field.web.CustomerField(
                                name = '', 
                                type = '', 
                                value = '', )
                            ], 
                        ended_at = '', 
                        id = '', 
                        labels = [
                            cnb_api.models.web/label_option.web.LabelOption(
                                color = '', 
                                created_at = '', 
                                description = '', 
                                id = '', 
                                name = '', 
                                repo_id = 56, 
                                slug = '', 
                                updated_at = '', )
                            ], 
                        number = '', 
                        priority = '', 
                        repo_slug = '', 
                        started_at = '', 
                        state = '', 
                        state_reason = '', 
                        title = '', 
                        updated_at = '', )
                    ],
                pull_requests = [
                    cnb_api.models.web/pull_request_resource.web.PullRequestResource(
                        assignees = [
                            cnb_api.models.git_woa_com_cnb_monorepo_mission_mission_resource_dto_web/user_info.git_woa_com_cnb_monorepo_mission_mission-resource_dto_web.UserInfo(
                                nickname = '', 
                                username = '', )
                            ], 
                        author = cnb_api.models.git_woa_com_cnb_monorepo_mission_mission_resource_dto_web/user_info.git_woa_com_cnb_monorepo_mission_mission-resource_dto_web.UserInfo(
                            nickname = '', 
                            username = '', ), 
                        base_repo_ref = '', 
                        blocked_on = '', 
                        comment_count = 56, 
                        commit_count = 56, 
                        created_at = '', 
                        customer_fields = [
                            cnb_api.models.web/customer_field.web.CustomerField(
                                name = '', 
                                type = '', 
                                value = '', )
                            ], 
                        file_count = 56, 
                        head_repo_ref = '', 
                        id = '', 
                        is_merged = True, 
                        is_ready_for_merge = True, 
                        labels = [
                            cnb_api.models.web/label_option.web.LabelOption(
                                color = '', 
                                created_at = '', 
                                description = '', 
                                id = '', 
                                name = '', 
                                repo_id = 56, 
                                slug = '', 
                                updated_at = '', )
                            ], 
                        last_acted_at = '', 
                        merge_style = '', 
                        mergeable_state = '', 
                        number = '', 
                        repo_slug = '', 
                        reviewers = [
                            cnb_api.models.web/pull_request_resource_reviewer.web.PullRequestResourceReviewer(
                                nickname = '', 
                                review_state = '', 
                                username = '', )
                            ], 
                        state = '', 
                        status_check_commit_sha = '', 
                        title = '', 
                        updated_at = '', )
                    ]
            )
        else:
            return WebMissionResources(
        )
        """

    def testWebMissionResources(self):
        """Test WebMissionResources"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
