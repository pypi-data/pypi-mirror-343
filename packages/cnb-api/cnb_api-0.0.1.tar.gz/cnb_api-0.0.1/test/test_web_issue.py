# coding: utf-8

"""
    CNB OPENAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: cnb@tencent.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cnb_api.models.web_issue import WebIssue

class TestWebIssue(unittest.TestCase):
    """WebIssue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebIssue:
        """Test WebIssue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebIssue`
        """
        model = WebIssue()
        if include_optional:
            return WebIssue(
                assignees = [
                    cnb_api.models.git_woa_com_cnb_monorepo_git_internal_dto_web/user_info.git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo(
                        freeze = True, 
                        nickname = '', 
                        username = '', )
                    ],
                author = cnb_api.models.git_woa_com_cnb_monorepo_git_internal_dto_web/user_info.git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo(
                    freeze = True, 
                    nickname = '', 
                    username = '', ),
                comment_count = 56,
                created_at = '',
                ended_at = '',
                labels = [
                    cnb_api.models.label/option.label.Option(
                        color = '', 
                        description = '', 
                        id = '', 
                        name = '', )
                    ],
                last_acted_at = '',
                number = '',
                priority = '',
                started_at = '',
                state = '',
                state_reason = '',
                title = '',
                updated_at = ''
            )
        else:
            return WebIssue(
        )
        """

    def testWebIssue(self):
        """Test WebIssue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
