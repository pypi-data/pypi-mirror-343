# coding: utf-8

"""
    CNB OPENAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: cnb@tencent.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cnb_api.models.web_release_tag import WebReleaseTag

class TestWebReleaseTag(unittest.TestCase):
    """WebReleaseTag unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebReleaseTag:
        """Test WebReleaseTag
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebReleaseTag`
        """
        model = WebReleaseTag()
        if include_optional:
            return WebReleaseTag(
                release = cnb_api.models.web/release.web.Release(
                    assets = [
                        cnb_api.models.web/release_asset.web.ReleaseAsset(
                            author = cnb_api.models.git_woa_com_cnb_monorepo_git_internal_dto_web/user_info.git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo(
                                freeze = True, 
                                nickname = '', 
                                username = '', ), 
                            content_type = '', 
                            created_at = '', 
                            id = '', 
                            name = '', 
                            path = '', 
                            size_in_byte = 56, 
                            updated_at = '', )
                        ], 
                    author = cnb_api.models.git_woa_com_cnb_monorepo_git_internal_dto_web/user_info.git_woa_com_cnb_monorepo_git_internal_dto_web.UserInfo(
                        freeze = True, 
                        nickname = '', 
                        username = '', ), 
                    body = '', 
                    created_at = '', 
                    id = '', 
                    is_draft = True, 
                    is_latest = True, 
                    is_prerelease = True, 
                    last_updated_by = , 
                    published_at = '', 
                    tag_ref = '', 
                    target_commit_hash = '', 
                    title = '', 
                    updated_at = '', ),
                tag = cnb_api.models.web/tag.web.Tag(
                    commit = cnb_api.models.web/commit.web.Commit(
                        author = cnb_api.models.git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web/user_info.git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.UserInfo(
                            freeze = True, 
                            nickname = '', 
                            username = '', ), 
                        commit_statuses = cnb_api.models.web/commit_statuses.web.CommitStatuses(
                            sha = '', 
                            state = '', 
                            statuses = [
                                cnb_api.models.web/commit_status.web.CommitStatus(
                                    context = '', 
                                    created_at = '', 
                                    description = '', 
                                    state = '', 
                                    target_url = '', 
                                    updated_at = '', )
                                ], ), 
                        committer = cnb_api.models.git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web/user_info.git_woa_com_cnb_monorepo_git_internal_app_git_service_bff_web.UserInfo(
                            freeze = True, 
                            nickname = '', 
                            username = '', ), 
                        files = cnb_api.models.web/commit_files.web.CommitFiles(
                            base_commit = '', 
                            diff = cnb_api.models.web/diff.web.Diff(
                                base_commit = '', 
                                file_exceeded = True, 
                                file_limit = 56, 
                                head_commit = '', 
                                stat = cnb_api.models.web/diff_stat.web.DiffStat(
                                    deletions = 56, 
                                    entry_exceeded = True, 
                                    entry_limit = 56, 
                                    insertions = 56, 
                                    paths = [
                                        cnb_api.models.web/diff_entry.web.DiffEntry(
                                            change_type = '', 
                                            deletions = 56, 
                                            file_index = 56, 
                                            insertions = 56, 
                                            is_bin = True, 
                                            old_path = '', 
                                            path = '', )
                                        ], ), ), 
                            head_commit = '', 
                            straight = True, ), 
                        parents = [
                            cnb_api.models.web/commit_parent.web.CommitParent(
                                sha = '', )
                            ], 
                        sha = '', ), 
                    has_release = True, 
                    message = '', 
                    tag = '', 
                    tag_object = cnb_api.models.web/tag_object.web.TagObject(
                        message = '', 
                        tag = '', 
                        tagger = cnb_api.models.web/signature.web.Signature(
                            date = '', 
                            email = '', 
                            name = '', ), ), 
                    tagger = , )
            )
        else:
            return WebReleaseTag(
        )
        """

    def testWebReleaseTag(self):
        """Test WebReleaseTag"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
