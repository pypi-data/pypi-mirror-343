# coding: utf-8

"""
    CNB OPENAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: cnb@tencent.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cnb_api.models.web_field_infos import WebFieldInfos

class TestWebFieldInfos(unittest.TestCase):
    """WebFieldInfos unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebFieldInfos:
        """Test WebFieldInfos
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebFieldInfos`
        """
        model = WebFieldInfos()
        if include_optional:
            return WebFieldInfos(
                bug = cnb_api.models.web/field_info.web.FieldInfo(
                    priority = cnb_api.models.web/field_info_priority.web.FieldInfoPriority(
                        color_options = [
                            cnb_api.models.web/field_info_priority_color_option.web.FieldInfoPriorityColorOption(
                                color = '', 
                                label = '', 
                                value = '', )
                            ], 
                        html_type = '', 
                        label = '', 
                        name = '', ), 
                    status = cnb_api.models.web/field_info_status.web.FieldInfoStatus(
                        html_type = '', 
                        label = '', 
                        name = '', 
                        options = {
                            'key' : ''
                            }, ), ),
                stories = cnb_api.models.web/field_info.web.FieldInfo(
                    priority = cnb_api.models.web/field_info_priority.web.FieldInfoPriority(
                        color_options = [
                            cnb_api.models.web/field_info_priority_color_option.web.FieldInfoPriorityColorOption(
                                color = '', 
                                label = '', 
                                value = '', )
                            ], 
                        html_type = '', 
                        label = '', 
                        name = '', ), 
                    status = cnb_api.models.web/field_info_status.web.FieldInfoStatus(
                        html_type = '', 
                        label = '', 
                        name = '', 
                        options = {
                            'key' : ''
                            }, ), ),
                task = cnb_api.models.web/field_info.web.FieldInfo(
                    priority = cnb_api.models.web/field_info_priority.web.FieldInfoPriority(
                        color_options = [
                            cnb_api.models.web/field_info_priority_color_option.web.FieldInfoPriorityColorOption(
                                color = '', 
                                label = '', 
                                value = '', )
                            ], 
                        html_type = '', 
                        label = '', 
                        name = '', ), 
                    status = cnb_api.models.web/field_info_status.web.FieldInfoStatus(
                        html_type = '', 
                        label = '', 
                        name = '', 
                        options = {
                            'key' : ''
                            }, ), )
            )
        else:
            return WebFieldInfos(
        )
        """

    def testWebFieldInfos(self):
        """Test WebFieldInfos"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
