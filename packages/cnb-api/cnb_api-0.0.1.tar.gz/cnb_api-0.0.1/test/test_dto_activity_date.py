# coding: utf-8

"""
    CNB OPENAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Contact: cnb@tencent.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cnb_api.models.dto_activity_date import DtoActivityDate

class TestDtoActivityDate(unittest.TestCase):
    """DtoActivityDate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DtoActivityDate:
        """Test DtoActivityDate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DtoActivityDate`
        """
        model = DtoActivityDate()
        if include_optional:
            return DtoActivityDate(
                code_review_count = 56,
                code_reviews = [
                    cnb_api.models.dto/activity_repo_detail.dto.ActivityRepoDetail(
                        detail = cnb_api.models.detail.detail(), 
                        exposed_repo_path = '', 
                        freeze = True, 
                        repo_unaccessible = True, 
                        time = 1.337, 
                        visibility_level = cnb_api.models.visibility_level.visibility_level(), )
                    ],
                commit_count = 56,
                commits = [
                    cnb_api.models.dto/activity_repo_detail.dto.ActivityRepoDetail(
                        detail = cnb_api.models.detail.detail(), 
                        exposed_repo_path = '', 
                        freeze = True, 
                        repo_unaccessible = True, 
                        time = 1.337, 
                        visibility_level = cnb_api.models.visibility_level.visibility_level(), )
                    ],
                group_count = 56,
                groups = [
                    cnb_api.models.dto/activity_join_group_detail.dto.ActivityJoinGroupDetail(
                        create_at = '', 
                        detail = cnb_api.models.detail.detail(), 
                        remark = '', )
                    ],
                issues = [
                    cnb_api.models.dto/activity_repo_detail.dto.ActivityRepoDetail(
                        detail = cnb_api.models.detail.detail(), 
                        exposed_repo_path = '', 
                        freeze = True, 
                        repo_unaccessible = True, 
                        time = 1.337, 
                        visibility_level = cnb_api.models.visibility_level.visibility_level(), )
                    ],
                issues_count = 56,
                private_score = 56,
                pull_request_count = 56,
                pull_requests = [
                    cnb_api.models.dto/activity_repo_detail.dto.ActivityRepoDetail(
                        detail = cnb_api.models.detail.detail(), 
                        exposed_repo_path = '', 
                        freeze = True, 
                        repo_unaccessible = True, 
                        time = 1.337, 
                        visibility_level = cnb_api.models.visibility_level.visibility_level(), )
                    ],
                repo_count = 56,
                repos = [
                    cnb_api.models.dto/activity_create_repo_detail.dto.ActivityCreateRepoDetail(
                        create_at = '', 
                        detail = cnb_api.models.detail.detail(), 
                        exposed_repo_path = '', 
                        freeze = True, 
                        repo_unaccessible = True, 
                        visibility_level = cnb_api.models.visibility_level.visibility_level(), )
                    ]
            )
        else:
            return DtoActivityDate(
        )
        """

    def testDtoActivityDate(self):
        """Test DtoActivityDate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
