from _typeshed import Incomplete
from collections.abc import Iterator
from datetime import datetime
from pathlib import Path
from tlc.core.url import Scheme as Scheme, Url as Url
from tlc.core.url_adapter import UrlAdapterAsyncFromSync as UrlAdapterAsyncFromSync, UrlAdapterDirEntry as UrlAdapterDirEntry
from tlc.core.url_adapter_registry import UrlAdapterRegistry as UrlAdapterRegistry

logger: Incomplete
WINDOWS: Incomplete
RAISING_FILE_URL_NAME: str

class FileUrlAdapter(UrlAdapterAsyncFromSync):
    """
    An adapter for resolving reads/writes to filepath URLs
    """
    file_scheme: Incomplete
    file_protocol: Incomplete
    def __init__(self) -> None: ...
    def schemes(self) -> list[Scheme]: ...
    def read_string_content_from_url(self, url: Url) -> str: ...
    def read_binary_content_from_url(self, url: Url) -> bytes: ...
    def delete_url(self, url: Url) -> None: ...
    def make_dirs(self, url: Url, exist_ok: bool = False) -> None: ...
    def get_file_size(self, url: Url) -> int: ...
    def exists(self, url: Url) -> bool: ...
    def is_dir(self, url: Url) -> bool: ...
    def is_writable(self, url: Url) -> bool: ...
    def stat(self, url: Url) -> _FileUrlAdapterDirEntry:
        """Get status information for a file/directory.

        :param url: The URL of the file/directory to get status for
        :returns: A directory entry object containing file information
        :raises: FileNotFoundError if the file doesn't exist
        """
    class _FileUrlAdapterDirEntry(UrlAdapterDirEntry):
        def __init__(self, dir_entry: Path) -> None: ...
        @property
        def name(self) -> str: ...
        @property
        def path(self) -> str: ...
        def __eq__(self, other: object) -> bool: ...
        def is_dir(self) -> bool: ...
        def is_file(self) -> bool: ...
        def mtime(self) -> float: ...
        def mtime_datetime(self) -> datetime: ...
    def list_dir(self, url: Url) -> Iterator[UrlAdapterDirEntry]: ...
    def touch(self, url: Url) -> None:
        """Update the last modified timestamp of a file to the current time.
        Creates the file if it doesn't exist.

        :param url: The URL of the file to touch
        """
