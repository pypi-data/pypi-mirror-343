include:
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Jobs/Code-Quality.gitlab-ci.yml
  - component: $CI_SERVER_FQDN/alm/gitlab-templates/setup-pip@1

image: python:3.10-alpine

stages:
  - check
  - test
  - build
  - release

variables:
  DHS_HTTP_PROXY: "http://pzen.apps.dhs.gov:80"
  DHS_HTTPS_PROXY: "http://pzen.apps.dhs.gov:80"

check-flake8:
  stage: check
  before_script:
    - !reference [.setup-pip, before_script]
    - pip install flake8
  script:
    - flake8 .
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[\d]+\.[\d]+\.[\d]+(\-.+)?/
      when: never
    - when: always

check-pylint:
  stage: check
  before_script:
    - !reference [.setup-pip, before_script]
    - apk add gcc build-base openjdk17 git
    - pip install pylint
  script:
    # pylint requires imports to be available
    - python -m pip install --editable .
    - python -m pylint src/ -v
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[\d]+\.[\d]+\.[\d]+(\-.+)?/
      when: never
    - when: always

build-wheel:
  stage: build
  before_script:
    - !reference [.setup-pip, before_script]
    - pip install build
    - apk add gcc build-base openjdk17 git
  script:
    - echo "Downloading dependancies and building wheel..."
    - rm -rf build dist *.egg-info
    - python -m build
  artifacts:
    paths:
      - dist/

release-nexus:
  stage: release
  needs:
  - job: build-wheel
    artifacts: true
  before_script:
    - !reference [.setup-pip, before_script]
    - pip install twine
    - cp $ISB_CI_PYPIRC_FILE $HOME/.pypirc
  script:
    - echo "Uploading to Nexus"
    - twine upload -r dhs_nexus dist/*
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == 'true' && $CI_COMMIT_TAG =~ /^v[\d]+\.[\d]+\.[\d]+(\-.+)?/

# https://maestro.dhs.gov/confluence/display/MHC/GitLab:+Code+Quality
code_quality:
  services: []         # Shut off Docker-in-Docker
  tags:
    - cq-sans-dind     # Set this job to only run on our new specialized runner
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[\d]+\.[\d]+\.[\d]+(\-.+)?/
      when: never
    - when: always
