[project]
name = "pydantic-settings-doppler"
version = "0.1.2"
description = "Settings management for Pydantic models using Doppler"
authors = [
    {name = "Algirdas Jauniskis",email = "jauniskis.a@gmail.com"}
]
readme = "README.md"
license = 'MIT'
keywords = [ "pydantic", "settings", "doppler", "configuration", "environment variables" ]
requires-python = ">=3.9"
dependencies = [
    "pydantic-settings (>=2.0,<3.0)",
    "doppler-sdk (>=1.3.0,<2.0.0)"
]
classifiers = [
    'Development Status :: 4 - Beta',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Programming Language :: Python :: Implementation :: CPython',
    'Intended Audience :: Developers',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Operating System :: Unix',
    'Operating System :: POSIX :: Linux',
    'Operating System :: MacOS',
    'Operating System :: Microsoft',
    'Environment :: Console',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Internet',
    'Topic :: Utilities',
    'Typing :: Typed',
    'Framework :: Pydantic',
    'Framework :: FastAPI',
    'Natural Language :: English',
]

[project.urls]
Homepage = "https://github.com/ajauniskis/pydantic-settings-doppler"
Documentation = "https://ajauniskis.github.io/pydantic-settings-doppler"
Repository = "https://github.com/ajauniskis/pydantic-settings-doppler"
Changelog = "https://github.com/ajauniskis/pydantic-settings-doppler/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/ajauniskis/pydantic-settings-doppler/issues"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_toml = [
    "pyproject.toml:project.version"
]

branch = "main"
upload_to_PyPI = true
upload_to_release = true
build_command = "pip install poetry && poetry build"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "ops",
    "perf",
    "style",
    "refactor",
    "test"
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
pyright = "^1.1.392.post0"
flake8 = "^7.1.1"
flake8-pyproject = "^1.2.3"
pytest = "^8.3.4"
pytest-cov = "^6.1.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocstrings = {extras = ["python"], version = "^0.29.1"}
mkdocs-material = "^9.6.11"
mkdocs-git-committers-plugin = "^0.2.3"
pymdown-extensions = "^10.14.3"

[tool.bandit]
exclude_dirs = ["venv", "env", ".venv", "tests"]

[tool.flake8]
max-line-length = 90
exclude = ["venv", "env", ".venv", "__pycache__"]

[tool.pyright]
reportMissingImports = true
venv = ".venv"
venvPath = "."
exclude = [
    "**/__pycache__",
    "**/env",
    "**/venv",
    ".venv",
    "**/tests",
    "**/.*",
]

[tool.pytest.ini_options]
addopts = "--cov --cov-branch --cov-report=xml --junitxml=./junit.xml"
