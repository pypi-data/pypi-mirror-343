name: Auto Version and Release

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '.github/workflows/**'
      - 'pyproject.toml'  # Ignore changes to pyproject.toml to prevent infinite loops

jobs:
  version-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for creating tags and releases
      
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper versioning
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install toml python-semantic-release
    
    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
    
    - name: Bump version
      id: bump_version
      run: |
        # Get current version from pyproject.toml
        CURRENT_VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
        echo "Current version: $CURRENT_VERSION"
        
        # Parse version components
        IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
        MAJOR="${VERSION_PARTS[0]}"
        MINOR="${VERSION_PARTS[1]}"
        PATCH="${VERSION_PARTS[2]}"
        
        # Increment patch version
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
        echo "New version: $NEW_VERSION"
        
        # Update pyproject.toml with new version
        python -c "
        import toml
        data = toml.load('pyproject.toml')
        data['project']['version'] = '$NEW_VERSION'
        with open('pyproject.toml', 'w') as f:
            toml.dump(data, f)
        "
        
        # Set output for later steps
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
    
    - name: Commit version bump
      run: |
        git add pyproject.toml
        git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }} [skip ci]"
    
    - name: Create tag
      run: |
        git tag v${{ steps.bump_version.outputs.new_version }}
    
    - name: Push changes and tag
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
        tags: true
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.bump_version.outputs.new_version }}
        name: Release v${{ steps.bump_version.outputs.new_version }}
        generate_release_notes: true
        token: ${{ secrets.GITHUB_TOKEN }}