Metadata-Version: 2.4
Name: hass-nabucasa
Version: 0.97.0
Summary: Home Assistant cloud integration by Nabu Casa, Inc.
Author-email: "Nabu Casa, Inc." <opensource@nabucasa.com>
License: GPL v3
Platform: any
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Classifier: Topic :: Internet :: Proxy Servers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.13
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: acme==3.3.0
Requires-Dist: aiohttp>=3.6.1
Requires-Dist: async_timeout>=4
Requires-Dist: atomicwrites-homeassistant==1.4.1
Requires-Dist: attrs>=19.3
Requires-Dist: ciso8601>=2.3.0
Requires-Dist: cryptography>=42.0.0
Requires-Dist: pycognito==2024.5.1
Requires-Dist: PyJWT>=2.8.0
Requires-Dist: snitun==0.40.0
Requires-Dist: webrtc-models<1.0.0
Provides-Extra: test
Requires-Dist: codespell==2.4.1; extra == "test"
Requires-Dist: mypy==1.15.0; extra == "test"
Requires-Dist: pre-commit==4.2.0; extra == "test"
Requires-Dist: pre-commit-hooks==5.0.0; extra == "test"
Requires-Dist: pylint==3.3.6; extra == "test"
Requires-Dist: pytest-aiohttp==1.1.0; extra == "test"
Requires-Dist: pytest-timeout==2.3.1; extra == "test"
Requires-Dist: pytest==8.3.5; extra == "test"
Requires-Dist: ruff==0.11.6; extra == "test"
Requires-Dist: types_atomicwrites==1.4.5.1; extra == "test"
Requires-Dist: types_pyOpenSSL==24.1.0.20240722; extra == "test"
Requires-Dist: xmltodict==0.14.2; extra == "test"
Requires-Dist: syrupy==4.9.1; extra == "test"
Requires-Dist: tomli==2.2.1; extra == "test"
Dynamic: license-file

## Cloud integration in Home Assistant



## Updating voice data

To update the voice data with the latest from Azure, run the following script:

```
python3 -m script.update_voice_data
```

You will need to fetch an Azure TTS token. You can generate one by running the [sample key generator server](https://github.com/Azure-Samples/cognitive-services-speech-sdk/tree/master/samples/js/browser/server) and visiting `http://localhost:3001/api/get-speech-token`.
