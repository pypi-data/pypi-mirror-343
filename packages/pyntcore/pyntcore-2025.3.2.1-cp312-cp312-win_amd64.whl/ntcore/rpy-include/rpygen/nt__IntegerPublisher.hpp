// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>

#include <networktables\IntegerTopic.h>

#include <rpygen/nt__Publisher.hpp>

namespace nt {

template <typename CfgBase = rpygen::EmptyTrampolineCfg>
struct PyTrampolineCfg_IntegerPublisher :
  nt::PyTrampolineCfg_Publisher<
  CfgBase
  >
{
  using Base = nt::IntegerPublisher;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_IntegerPublisher =
  nt::PyTrampoline_Publisher<
    PyTrampolineBase
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_IntegerPublisher : PyTrampolineBase_IntegerPublisher<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_IntegerPublisher<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_IntegerPublisher;
  using TopicType [[maybe_unused]] = typename nt::IntegerPublisher::TopicType;
  using ValueType [[maybe_unused]] = typename nt::IntegerPublisher::ValueType;
  using ParamType [[maybe_unused]] = typename nt::IntegerPublisher::ParamType;
  using TimestampedValueType [[maybe_unused]] = typename nt::IntegerPublisher::TimestampedValueType;
};

}; // namespace nt
