[build-system]
requires = [
    "setuptools>=67.6.0",
    "wheel>=0.40.0"
]
build-backend = "setuptools.build_meta"

[project]
name = "ansible-aap-api-client"
dynamic = ["version", "readme"]
requires-python = ">=3.9"
description = "A client to interact with Ansible AAP REST API"
keywords = [
]
authors = [
  { name="Benjamin P. Trachtenberg", email="e_ben_75-python@yahoo.com" },
]
maintainers = [
  {name = "Benjamin P. Trachtenberg", email = "e_ben_75-python@yahoo.com"},
]
license = "MIT"
license-files = [
    "LICENSE"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: BSD",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "requests~=2.32.0",
]

[dependency-groups]
dev = [
    "bandit>=1.8.3",
    "black>=25.1.0",
    "myst-parser>=3.0.1",
    "pylint>=3.3.6",
    "pytest-cov>=6.1.1",
    "python-dotenv>=1.1.0",
    "requests-mock>=1.12.1",
    "sphinx>=7.4.7",
    "sphinx-rtd-theme>=3.0.2",
    "sphinxcontrib-mermaid>=1.0.0",
    "tomli>=2.2.1",
]

[project.urls]
Documentation = "https://ansible-aap-api-client.readthedocs.io/en/latest/"
Source = "https://github.com/btr1975/ansible-aap-api-client"
Tracker = "https://github.com/btr1975/ansible-aap-api-client/issues"


[project.scripts]
ansible-aap-api-client-cli = "ansible_aap_api_client:cli"


[tool.setuptools.packages.find]
include = [
    "ansible_aap_api_client*",
]

# Add or remove file extensions to include the data
[tool.setuptools.package-data]
"*" = ["*.txt", "*.rst"]

[tool.setuptools]
zip-safe = false

[tool.setuptools.dynamic]
version = {attr = "ansible_aap_api_client.version.__version__"}
readme = {file = "README.md", content-type = "text/markdown"}

[tool.pytest.ini_options]
addopts = "--strict-markers"
markers = [
    "place_holder: marks tests as place_holder (deselect with -m 'not place_holder')",
]

[tool.coverage.run]
command_line= "-m pytest -vvv"

[tool.coverage.report]
include = [
    "ansible_aap_api_client/*"
]
fail_under = 70

[tool.pylint]
max-line-length = 120
# This allows pylint to complain on FIXME and XXX notes
notes = [
    "FIXME",
    "XXX",
]
fail-under = 9.9

[tool.black]
line-length = 120

[tool.bandit]
exclude_dirs = [
    "tests",
    "venv",
    "docs",
]

# UV settings reference https://docs.astral.sh/uv/reference/settings/

[tool.uv]
keyring-provider = "subprocess"
native-tls = true
