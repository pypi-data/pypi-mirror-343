[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["botowrap"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
follow_imports = "silent"
warn_redundant_casts = true
plugins = []
mypy_path = "botowrap/types"
exclude = [
    "botowrap/.*\\.pyi$",
    "tests/.*",
    "docs/.*",
    "examples/.*"
]
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = "boto3.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "botocore.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["tests.*", "docs.*", "examples.*"]
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = """
    --strict-markers
    --tb=short
    --cov=botowrap
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=20
"""
markers = [
    "integration: marks tests as integration tests",
    "slow: marks tests as slow",
]

[tool.ruff]
line-length = 100
target-version = "py38"
exclude = [
    ".git",
    "__pycache__",
    "botowrap/cli.py",
    "botowrap/cli.pyi",
    "botowrap/__init__.pyi",
    "venv",
    ".ruff_cache",
    ".mypy_cache",
    ".pytest_cache",
    "dist",
    "build",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "D",   # pydocstyle
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "RUF", # ruff-specific rules
]

ignore = [
    "E231",  # Missing whitespace after ','
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "E402"
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.coverage.run]
source = ["botowrap"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
