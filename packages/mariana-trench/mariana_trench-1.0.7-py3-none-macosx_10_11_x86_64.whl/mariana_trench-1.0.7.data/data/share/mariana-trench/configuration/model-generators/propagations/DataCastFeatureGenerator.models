{
  "model_generators": [
    {
      "find": "methods",
      "where": [
        {
          "constraint": "signature_match",
          "parent": "Ljava/lang/String;",
          "name": "valueOf"
        },
        {
          "constraint": "parameter",
          "idx": 0,
          "inner": {
            "constraint": "name",
            "pattern": "Z"
          }
        }
      ],
      "model": {
        "freeze": [
          "propagation"
        ],
        "propagation": [
          {
            "input": "Argument(0)",
            "output": "Return",
            "features": [
              "cast:boolean"
            ]
          }
        ]
      }
    },
    {
      "find": "methods",
      "where": [
        {
          "constraint": "signature_match",
          "parent": "Ljava/lang/String;",
          "name": "valueOf"
        },
        {
          "constraint": "parameter",
          "idx": 0,
          "inner": {
            "constraint": "name",
            "pattern": "(I|J|F|D)"
          }
        }
      ],
      "model": {
        "freeze": [
          "propagation"
        ],
        "propagation": [
          {
            "input": "Argument(0)",
            "output": "Return",
            "features": [
              "cast:numeric"
            ]
          }
        ]
      }
    },
    {
      "find": "methods",
      "where": [
        {
          "constraint": "name",
          "pattern": "parseInt|intValue|valueOf"
        },
        {
          "constraint": "parent",
          "inner": {
            "constraint": "name",
            "pattern": "Ljava/lang/Integer;"
          }
        }
      ],
      "model": {
        "freeze": [
          "propagation"
        ],
        "propagation": [
          {
            "input": "Argument(0)",
            "output": "Return",
            "features": [
              "cast:numeric"
            ]
          }
        ]
      }
    },
    {
      "find": "methods",
      "where": [
        {
          "constraint": "name",
          "pattern": "getBoolean|parseBoolean|booleanValue|valueOf"
        },
        {
          "constraint": "parent",
          "inner": {
            "constraint": "name",
            "pattern": "Ljava/lang/Boolean;"
          }
        }
      ],
      "model": {
        "freeze": [
          "propagation"
        ],
        "propagation": [
          {
            "input": "Argument(0)",
            "output": "Return",
            "features": [
              "cast:boolean"
            ]
          }
        ]
      }
    }
  ]
}
