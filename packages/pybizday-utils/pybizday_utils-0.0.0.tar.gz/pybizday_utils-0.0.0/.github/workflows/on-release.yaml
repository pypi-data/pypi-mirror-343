name: On Release

on:
  release:
    types: [published]

jobs:
  test:
    uses: ./.github/workflows/pytest-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
    permissions:
      contents: read
  static-type-check:
    uses: ./.github/workflows/static-type-check-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
    permissions:
      contents: read
  code-style-check:
    uses: ./.github/workflows/code-style-check-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
    permissions:
      contents: read
  build:
    needs: [test, static-type-check, code-style-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          uv sync --dev
      - name: Build the package
        run: |
          uv build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./dist/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: read
      packages: write
  publish-to-github:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./dist/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload distribution files to GitHub
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "$GITHUB_REF_NAME" dist/* --repo "$GITHUB_REPOSITORY" --clobber
    permissions:
      contents: write
  publish-to-PyPI:
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pybizday-utils
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
    permissions:
      id-token: write
