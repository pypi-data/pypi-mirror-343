name: CI/CD


on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      RELEASE_TYPE:
        description: 'Release type (major, minor, patch)'
        required: false
        default: 'patch'


jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Lint with ruff
      run: |
        ruff check uw_panopto_downloader

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Bump version
      id: bump_version
      run: |
        chmod +x ./bump-version.sh
        echo "getting release type from input, or defaulting to 'patch'"
        if [ -z "${{ github.event.inputs.RELEASE_TYPE }}" ]; then
          echo "RELEASE_TYPE=patch" >> $GITHUB_ENV
        else
          echo "RELEASE_TYPE=${{ github.event.inputs.RELEASE_TYPE }}" >> $GITHUB_ENV
        fi
        ./bump-version.sh $RELEASE_TYPE

    - name: Build package
      run: |
        python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*