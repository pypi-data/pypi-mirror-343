# generated by datamodel-codegen:
#   filename:  experts-portal-qualification.json

from __future__ import annotations

from typing import Annotated, Literal, Mapping, Sequence
from uuid import UUID

from pydantic import BaseModel, ConfigDict, Field

from ...domain import QualificationFilterRequirements, UserQualificationResult
from ...pipeline.config.domain import (
    PipelineMoneyConfigPaymentSettings,
    PipelineMoneyConfigSnippetSettings,
    PipelineStepsConfigV1,
)
from ...pipeline.config.domain.parameters import PipelineStepsConfigV1Parameters
from ...pipeline.progress.domain import QualificationExerciseLogResultData


class QualificationForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    title: str | None = None
    description: str | None = None
    tenant_id: str | None = None
    status: Literal['ACTIVE', 'ARCHIVED'] | None = None
    category: Literal['ROLE', 'LANGUAGE', 'SPECIALIZATION', 'PROJECT', 'VERIFICATION', 'BPO'] | None = None


class QualificationView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: UUID | None = None
    title: str | None = None
    description: str | None = None
    tenant_id: str | None = None
    status: Literal['ACTIVE', 'ARCHIVED'] | None = None
    category: Literal['ROLE', 'LANGUAGE', 'SPECIALIZATION', 'PROJECT', 'VERIFICATION', 'BPO'] | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    updated_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None


class QualificationLegacyForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    qualification_id: UUID | None = None
    toloka_skill_id: int | None = None
    tenant_id: str | None = None
    pass_on_no_value: bool | None = None
    operator: Literal['EQ', 'NE', 'GT', 'GTE', 'LT', 'LTE'] | None = None
    value: float | None = None


class QualificationLegacyView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    qualification_id: UUID | None = None
    toloka_skill_id: int | None = None
    pass_on_no_value: bool | None = None
    tenant_id: str | None = None
    id: UUID | None = None
    operator: Literal['EQ', 'NE', 'GT', 'GTE', 'LT', 'LTE'] | None = None
    value: float | None = None


class MoneyConfigVersionsView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    by_steps: Mapping[str, UUID] | None = None


class UserQualificationForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    account_id: str
    qualification_id: UUID | None = None
    result: UserQualificationResult | None = None


class UserQualificationView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: UUID | None = None
    account_id: str | None = None
    qualification_id: UUID | None = None
    result: UserQualificationResult | None = None


class GetPipelineInstanceListQueryParams(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    pipeline_config_id: UUID | None = None
    status: Literal['ACTIVE', 'FINISHED', 'FAILED'] | None = None
    account_id: str | None = None


class QualificationListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    qualifications: Sequence[QualificationView] | None = None


class QualificationLegacyListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    legacy_qualifications: Sequence[QualificationLegacyView] | None = None


class PipelineMoneyConfigForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    pipeline_config_id: UUID | None = None
    currency: Literal['USD', 'BU'] | None = None
    snippet_settings: PipelineMoneyConfigSnippetSettings | None = None
    payment_settings: PipelineMoneyConfigPaymentSettings | None = None
    requester_id: str | None = None


class PipelineMoneyConfigView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    version_id: UUID | None = None
    pipeline_config_id: UUID | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    currency: Literal['USD', 'BU'] | None = None
    snippet_settings: PipelineMoneyConfigSnippetSettings | None = None
    payment_settings: PipelineMoneyConfigPaymentSettings | None = None
    requester_id: str | None = None


class PipelineMoneyConfigListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    pipeline_money_configs: Sequence[PipelineMoneyConfigView] | None = None


class QualificationFilterForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    tenant_id: str | None = None
    title: str | None = None
    description: str | None = None
    requirements: QualificationFilterRequirements


class QualificationFilterView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    created_by: str | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    updated_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    tenant_id: str | None = None
    id: UUID | None = None
    title: str | None = None
    description: str | None = None
    requirements: QualificationFilterRequirements | None = None


class ProgressLogView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: UUID | None = None
    step_id: str | None = None
    step_result: Literal['PASSED', 'FAILED', 'SKIPPED', 'ON_REVIEW'] | None = None
    result_data: QualificationExerciseLogResultData | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None


class PipelineConfigForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    pipeline_id: str
    qualification_type: str | None = None
    tenant_id: str | None = None
    monday_subitem_id: str | None = None
    pipeline_type: Literal['ACQUISITION', 'QUALIFICATION', 'MASTER_TEMPLATE'] | None = None
    name: str
    description: str | None = None
    version: int | None = None
    steps: PipelineStepsConfigV1
    status: Literal['ACTIVE', 'DISABLED'] | None = None


class PipelineConfigView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    pipeline_id: str | None = None
    qualification_type: str | None = None
    steps: PipelineStepsConfigV1 | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    updated_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    tenant_id: str | None = None
    monday_subitem_id: str | None = None
    pipeline_type: Literal['ACQUISITION', 'QUALIFICATION', 'MASTER_TEMPLATE'] | None = None
    id: UUID | None = None
    name: str | None = None
    description: str | None = None
    version: int | None = None
    status: Literal['ACTIVE', 'DISABLED'] | None = None


class PipelineConfigPatchForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    qualification_type: str | None = None
    monday_subitem_id: str | None = None
    pipeline_type: Literal['ACQUISITION', 'QUALIFICATION', 'MASTER_TEMPLATE'] | None = None
    status: Literal['ACTIVE', 'DISABLED'] | None = None
    name: str | None = None
    description: str | None = None
    steps: PipelineStepsConfigV1 | None = None


class ProgressLogListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    logs: Sequence[ProgressLogView] | None = None


class PipelineConfigListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    configs: Sequence[PipelineConfigView] | None = None


class PipelineInstanceParameters(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    steps_config_parameters: PipelineStepsConfigV1Parameters


class PipelineInstanceView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: UUID | None = None
    account_id: str | None = None
    pipeline_id: str | None = None
    pipeline_config_id: UUID | None = None
    status: Literal['ACTIVE', 'FINISHED', 'FAILED'] | None = None
    active_step_id: str | None = None
    completed_step_ids: Sequence[str] | None = None
    completed_idle_actions: Sequence[str] | None = None
    money_config_versions: MoneyConfigVersionsView | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    updated_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    parameters: PipelineInstanceParameters | None = None
    parent_pipeline_config_id: UUID | None = None


class PipelineInstancePatchForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    pipeline_config_id: UUID | None = None
    status: Literal['ACTIVE', 'FINISHED', 'FAILED'] | None = None
    active_step_id: str | None = None
    completed_step_ids: Sequence[str] | None = None
    parameters: PipelineInstanceParameters | None = None


class PipelineInstanceListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    instances: Sequence[PipelineInstanceView] | None = None


class PipelineInstanceForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    account_id: str | None = None
    pipeline_config_id: UUID | None = None
    status: Literal['ACTIVE', 'FINISHED', 'FAILED'] | None = None
    active_step_id: str | None = None
    completed_step_ids: Sequence[str] | None = None
    completed_idle_actions: Sequence[str] | None = None
    parameters: PipelineInstanceParameters | None = None
