# generated by datamodel-codegen:
#   filename:  webhooks.json

from __future__ import annotations

from typing import Annotated, Any, Literal, Mapping, Sequence

from pydantic import BaseModel, ConfigDict, Field, SerializeAsAny


class WebhookFormV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    description: str | None = None
    url: str
    method: Literal['POST', 'PUT']
    enabled: bool
    mode: Literal['TEST', 'LIVE']
    custom_headers: Mapping[str, Sequence[str]] | None = None
    actions: Sequence[Literal['QUORUM_COMPLETED', 'STATUS_WORKFLOW_STATUS_CHANGED']]
    action_params: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None
    signature_secret_holder_id: str | None = None


class WebhookViewV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    description: str | None = None
    url: str | None = None
    method: Literal['POST', 'PUT'] | None = None
    enabled: bool | None = None
    mode: Literal['TEST', 'LIVE'] | None = None
    custom_headers: Mapping[str, Sequence[str]] | None = None
    actions: Sequence[Literal['QUORUM_COMPLETED', 'STATUS_WORKFLOW_STATUS_CHANGED']] | None = None
    action_params: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None
    signature_secret_holder_id: str | None = None


class WebhookFilterParamV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    signature_secret_holder_id: str | None = None
    id: str | None = None
    id_gt: str | None = None
    id_gte: str | None = None
    id_lt: str | None = None
    id_lte: str | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    created_at_gt: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    created_at_gte: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    created_at_lt: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    created_at_lte: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at_gt: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at_gte: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at_lt: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at_lte: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    sort: str | None = None
    limit: Annotated[int | None, Field(ge=1, le=500)] = None


class WebhookListViewV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    data: Sequence[WebhookViewV1] | None = None
    has_more: bool | None = None
