# generated by datamodel-codegen:
#   filename:  a9s.json

from __future__ import annotations

from typing import Any, Mapping, Sequence

from pydantic import BaseModel, ConfigDict, SerializeAsAny

from .viewform import ProjectConfigViewForm


class ProjectExtensionInstanceConfigView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    extension_id: str
    instance_id: str
    view_url: str | None = None


class ProjectExtensionsView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    instances: Sequence[ProjectExtensionInstanceConfigView] | None = None


class SpecView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    viewSpec: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None
    inputSpec: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None
    outputSpec: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None


class InstructionView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    instruction: str | None = None


class ProjectWithPermissionView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    name: str | None = None
    comment: str | None = None
    config: ProjectConfigViewForm | None = None
    metadata: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None
    extensions: ProjectExtensionsView | None = None
    tags: Sequence[str] | None = None
    hidden: bool | None = None
    major_version: int | None = None
    canEdit: bool | None = None


class ProjectView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    name: str | None = None
    comment: str | None = None
    config: ProjectConfigViewForm | None = None
    metadata: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None
    extensions: ProjectExtensionsView | None = None
    tags: Sequence[str] | None = None
    hidden: bool | None = None
    major_version: int | None = None


class ProjectListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    canEdit: bool | None = None
    items: Sequence[ProjectView] | None = None
    has_more: bool | None = None
