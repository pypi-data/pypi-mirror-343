# generated by datamodel-codegen:
#   filename:  experts-portal-qualification.json

from __future__ import annotations

from typing import Literal, Sequence

from pydantic import BaseModel, ConfigDict


class FilterFunctionV0(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    type: Literal['SIMPLE_FILTER_FUNCTION', 'LIST_FILTER_FUNCTION'] | None = None


class SimpleFilterFunctionV0(FilterFunctionV0):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    field: str
    operator: Literal[
        'EQUALS',
        'NOT_EQUALS',
        'STARTS_WITH',
        'CONTAINS',
        'NOT_CONTAINS',
        'CONTAINS_ANY',
        'CONTAINS_ALL',
        'NOT_CONTAINS_ALL',
        'CONTAINS_KEY',
        'IS_EMPTY',
        'IS_NOT_EMPTY',
        'IS',
        'IS_NOT',
        'GREATER_THAN',
        'GREATER_THAN_OR_EQUALS',
        'LESS_THAN',
        'LESS_THAN_OR_EQUALS',
        'OLDER_THAN',
        'YOUNGER_THAN',
        'IN',
        'NOT_IN',
    ]
    value: str | bool | float


class ListFilterFunctionV0(FilterFunctionV0):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    join_type: Literal['AND', 'OR']
    functions: Sequence[ListFilterFunctionV0 | SimpleFilterFunctionV0]


ListFilterFunctionV0.model_rebuild()
