# generated by datamodel-codegen:
#   filename:  qms.json

from __future__ import annotations

from typing import Annotated, Literal, Sequence

from pydantic import BaseModel, ConfigDict, Field


class ResetViewV0(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    quality_config_id: str
    quality_config_type: Literal['SYNC', 'ASYNC']
    account_id: str
    rule_name: str
    reset_time: Annotated[str, Field(examples=['2024-08-12T12:41:07.629'])]
    created_at: Annotated[str, Field(examples=['2024-08-12T12:41:07.629'])]
    modified_at: Annotated[str, Field(examples=['2024-08-12T12:41:07.629'])]
    created_by: str | None = None
    modified_by: str | None = None


class ResetListViewV0(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    data: Sequence[ResetViewV0] | None = None
    has_more: bool
