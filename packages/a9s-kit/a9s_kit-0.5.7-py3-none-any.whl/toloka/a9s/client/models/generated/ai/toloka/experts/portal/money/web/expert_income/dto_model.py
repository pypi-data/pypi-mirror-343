# generated by datamodel-codegen:
#   filename:  experts-portal-money.json

from __future__ import annotations

from typing import Annotated, Literal, Sequence

from pydantic import BaseModel, ConfigDict, Field


class ExpertIncomeDtoIncomeItemDto(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    url: str | None = None
    name: str | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    status: Literal['IN_PROGRESS', 'ON_REVIEW', 'ACCEPTED', 'REJECTED'] | None = None
    comment: str | None = None


class ExpertIncomeDtoStatusMetadataDto(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    item_modifiable: bool | None = None
    actionable_url: str | None = None


class TotalIncomeDto(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    on_review: float | None = None
    deferred: float | None = None
    paid: float | None = None
    tasks: int | None = None


class DailyIncomeDto(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    date: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    total: TotalIncomeDto | None = None


class ExpertIncomeStatisticsDto(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    accepted_tasks: int | None = None
    accepted: float | None = None
    rejected_tasks: int | None = None
    rejected: float | None = None
    on_review_tasks: int | None = None
    on_review: float | None = None
    bonus_tasks: int | None = None
    bonus: float | None = None


class ExpertIncomeDtoExtendedInfoDto(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    income_items: Sequence[ExpertIncomeDtoIncomeItemDto] | None = None


class ProjectIncomeDto(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    project_id: str | None = None
    project_name: str | None = None
    type: (
        Literal[
            'ASSIGNMENT',
            'BONUS',
            'LABEL_STUDIO',
            'A9S_ASSIGNMENT',
            'A9S_ANNOTATION',
            'A9S_ANNOTATION_PROCESS',
            'PIPELINE_STEP',
        ]
        | None
    ) = None
    total: TotalIncomeDto | None = None


class ExpertIncomeDto(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    name: str | None = None
    id: str | None = None
    url: str | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    amount: float | None = None
    type: (
        Literal[
            'ASSIGNMENT',
            'BONUS',
            'LABEL_STUDIO',
            'A9S_ASSIGNMENT',
            'A9S_ANNOTATION',
            'A9S_ANNOTATION_PROCESS',
            'PIPELINE_STEP',
        ]
        | None
    ) = None
    status: Literal['IN_PROGRESS', 'ON_REVIEW', 'ACCEPTED', 'REJECTED'] | None = None
    comment: str | None = None
    extended_info: ExpertIncomeDtoExtendedInfoDto | None = None
    status_metadata: ExpertIncomeDtoStatusMetadataDto | None = None
