# generated by datamodel-codegen:
#   filename:  a9s.json

from __future__ import annotations

from typing import Literal, Sequence

from pydantic import BaseModel, ConfigDict


class AccountTaskLimitFormV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    account_id: str
    type: Literal['FIRST_N_IN_BATCH']
    batch_id: str
    applied: bool


class AccountTaskLimitViewV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    account_id: str | None = None
    type: Literal['FIRST_N_IN_BATCH'] | None = None
    batch_id: str | None = None
    applied: bool | None = None
    limit: int | None = None
    left: int | None = None


class AccountTaskLimitListViewV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    data: Sequence[AccountTaskLimitViewV1] | None = None
    has_more: bool | None = None


class ResourceLimitsView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    account_id: str | None = None
    project_id: str | None = None
    batch_id: str | None = None
    annotation_edits_limit: int | None = None
    annotation_edits_left: int | None = None
    active_task_limit: int | None = None
    active_task_left: int | None = None
    first_n_task_limit: int | None = None
    first_n_task_left: int | None = None
