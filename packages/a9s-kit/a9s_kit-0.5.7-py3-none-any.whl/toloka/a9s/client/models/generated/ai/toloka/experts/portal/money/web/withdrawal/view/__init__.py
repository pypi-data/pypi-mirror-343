# generated by datamodel-codegen:
#   filename:  experts-portal-money.json

from __future__ import annotations

from typing import Annotated, Any, Literal, Mapping, Sequence

from pydantic import BaseModel, ConfigDict, Field, SerializeAsAny


class WithdrawalAccountView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: int | None = None
    active: bool | None = None
    status: str | None = None
    paymentSystem: Literal['FLUTTERWAVE', 'ONTOP', 'PAPARA', 'PAYONEER', 'SOLAR', 'FILE']


class PayoneerLoginLinkView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    loginLink: str | None = None


class CalculatedWithdrawalAmountsView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    currency: Literal['USD', 'EUR', 'RUB', 'GHS', 'KES', 'UGX', 'TZS', 'RWF', 'ZMW', 'XAF', 'XOF']
    withdrawal_amount: float
    fee_amount: float
    result_amount: float


class TransactionImportLogItem(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    type: Literal['INFO', 'WARN', 'ERROR'] | None = None
    msg: str | None = None
    now_number: int | None = None


class TransactionSummaryView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    success: int | None = None
    fail: int | None = None
    no_money: int | None = None


class PaymentSystemView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    is_file_processing_supported: bool | None = None
    is_admin_manageable_transaction: bool | None = None
    is_autopayment_supported: bool | None = None
    is_autopayment_enabled: bool | None = None
    code: str | None = None
    type: str | None = None


class FlutterwaveSuggestedAccountView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    countryCode: (
        Literal[
            'AB',
            'OS',
            'AD',
            'AE',
            'AF',
            'AG',
            'AI',
            'AL',
            'AM',
            'AO',
            'AQ',
            'AR',
            'AT',
            'AU',
            'AW',
            'AZ',
            'BA',
            'BB',
            'BD',
            'BE',
            'BF',
            'BG',
            'BH',
            'BI',
            'BJ',
            'BM',
            'BN',
            'BO',
            'BR',
            'BS',
            'BT',
            'BW',
            'BY',
            'BZ',
            'CA',
            'CC',
            'CD',
            'CF',
            'CG',
            'CH',
            'CI',
            'CK',
            'CL',
            'CM',
            'CN',
            'CO',
            'CR',
            'CU',
            'CV',
            'CW',
            'CY',
            'CZ',
            'DE',
            'DJ',
            'DK',
            'DM',
            'DO',
            'DZ',
            'EC',
            'EE',
            'EG',
            'EH',
            'ER',
            'ES',
            'ET',
            'FI',
            'FJ',
            'FK',
            'FM',
            'FR',
            'GA',
            'GB',
            'GD',
            'GE',
            'GF',
            'GH',
            'GI',
            'GL',
            'GM',
            'GN',
            'GP',
            'GQ',
            'GR',
            'GS',
            'GT',
            'GU',
            'GW',
            'GY',
            'HN',
            'HR',
            'HT',
            'HU',
            'ID',
            'IE',
            'IL',
            'IN',
            'IQ',
            'IR',
            'IS',
            'IT',
            'JM',
            'JO',
            'JP',
            'KE',
            'KG',
            'KH',
            'KI',
            'KM',
            'KN',
            'KP',
            'KR',
            'KW',
            'KY',
            'KZ',
            'LA',
            'LB',
            'LC',
            'LI',
            'LK',
            'LR',
            'LS',
            'LT',
            'LU',
            'LV',
            'LY',
            'MA',
            'MC',
            'MD',
            'ME',
            'MG',
            'MH',
            'MK',
            'ML',
            'MM',
            'MN',
            'MP',
            'MQ',
            'MR',
            'MS',
            'MT',
            'MU',
            'MV',
            'MW',
            'MX',
            'MY',
            'MZ',
            'NA',
            'NC',
            'NE',
            'NF',
            'NG',
            'NI',
            'NL',
            'NO',
            'NP',
            'NR',
            'NU',
            'NZ',
            'OM',
            'PA',
            'PE',
            'PF',
            'PG',
            'PH',
            'PK',
            'PL',
            'PR',
            'PS',
            'PT',
            'PW',
            'PY',
            'QA',
            'RE',
            'RO',
            'RS',
            'RU',
            'RW',
            'SA',
            'SB',
            'SC',
            'SD',
            'SE',
            'SG',
            'SI',
            'SK',
            'SL',
            'SM',
            'SN',
            'SO',
            'SR',
            'SS',
            'ST',
            'SV',
            'SX',
            'SY',
            'SZ',
            'TC',
            'TD',
            'TG',
            'TH',
            'TJ',
            'TK',
            'TL',
            'TM',
            'TN',
            'TO',
            'TR',
            'TT',
            'TV',
            'TW',
            'TZ',
            'UA',
            'UG',
            'US',
            'UY',
            'UZ',
            'VA',
            'VC',
            'VE',
            'VG',
            'VI',
            'VN',
            'VU',
            'WS',
            'YE',
            'YT',
            'ZA',
            'ZM',
            'ZW',
            'AN',
            'AS',
            'AX',
            'BL',
            'BQ',
            'BV',
            'CS',
            'CX',
            'FO',
            'GG',
            'HK',
            'HM',
            'IM',
            'IO',
            'JE',
            'MF',
            'MO',
            'PM',
            'PN',
            'SH',
            'SJ',
            'TF',
            'UM',
            'WF',
            'XK',
        ]
        | None
    ) = None
    countryCallingCode: str | None = None
    currencyCode: Literal['USD', 'EUR', 'RUB', 'GHS', 'KES', 'UGX', 'TZS', 'RWF', 'ZMW', 'XAF', 'XOF'] | None = None
    exchangeRate: float | None = None
    feeDescription: str | None = None
    availableMoneyOperators: (
        Sequence[
            Literal[
                'MPS',
                'MPX',
                'MTN',
                'TIGO',
                'VODAFONE',
                'AIRTEL',
                'FMM',
                'ORANGEMONEY',
                'EMONEY',
                'FREEMONEY',
            ]
        ]
        | None
    ) = None


class FilePaymentSystemView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    code: str | None = None
    is_admin_manageable_transactions: bool | None = None


class FilePaymentSystemsView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    data: Sequence[FilePaymentSystemView] | None = None


class WithdrawalAccountExtendedView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    payment_system: Literal['FLUTTERWAVE', 'ONTOP', 'PAPARA', 'PAYONEER', 'SOLAR', 'FILE']
    use_for_uniqueness_check: bool
    file_payment_system_code: str | None = None
    file_payment_system_external_key: str | None = None
    solar_email: str | None = None
    on_top_email: str | None = None
    payoneer_payee_id: str | None = None
    papara_account_number: str | None = None
    id: int | None = None
    current: bool


class PaymentSystemsListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    data: Sequence[PaymentSystemView] | None = None


class PaymentProviderView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    code: str | None = None


class PaymentProvidersListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    data: Sequence[PaymentProviderView] | None = None


class FilePaymentSystemAccountView(WithdrawalAccountView):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    file_payment_system_code: str | None = None
    file_payment_system_external_key: str | None = None
    paymentSystem: Literal['FLUTTERWAVE', 'ONTOP', 'PAPARA', 'PAYONEER', 'SOLAR', 'FILE']


class FlutterwaveAccountView(WithdrawalAccountView):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    accountNumber: Annotated[str, Field(pattern='[0-9]*')]
    countryCode: Literal[
        'AB',
        'OS',
        'AD',
        'AE',
        'AF',
        'AG',
        'AI',
        'AL',
        'AM',
        'AO',
        'AQ',
        'AR',
        'AT',
        'AU',
        'AW',
        'AZ',
        'BA',
        'BB',
        'BD',
        'BE',
        'BF',
        'BG',
        'BH',
        'BI',
        'BJ',
        'BM',
        'BN',
        'BO',
        'BR',
        'BS',
        'BT',
        'BW',
        'BY',
        'BZ',
        'CA',
        'CC',
        'CD',
        'CF',
        'CG',
        'CH',
        'CI',
        'CK',
        'CL',
        'CM',
        'CN',
        'CO',
        'CR',
        'CU',
        'CV',
        'CW',
        'CY',
        'CZ',
        'DE',
        'DJ',
        'DK',
        'DM',
        'DO',
        'DZ',
        'EC',
        'EE',
        'EG',
        'EH',
        'ER',
        'ES',
        'ET',
        'FI',
        'FJ',
        'FK',
        'FM',
        'FR',
        'GA',
        'GB',
        'GD',
        'GE',
        'GF',
        'GH',
        'GI',
        'GL',
        'GM',
        'GN',
        'GP',
        'GQ',
        'GR',
        'GS',
        'GT',
        'GU',
        'GW',
        'GY',
        'HN',
        'HR',
        'HT',
        'HU',
        'ID',
        'IE',
        'IL',
        'IN',
        'IQ',
        'IR',
        'IS',
        'IT',
        'JM',
        'JO',
        'JP',
        'KE',
        'KG',
        'KH',
        'KI',
        'KM',
        'KN',
        'KP',
        'KR',
        'KW',
        'KY',
        'KZ',
        'LA',
        'LB',
        'LC',
        'LI',
        'LK',
        'LR',
        'LS',
        'LT',
        'LU',
        'LV',
        'LY',
        'MA',
        'MC',
        'MD',
        'ME',
        'MG',
        'MH',
        'MK',
        'ML',
        'MM',
        'MN',
        'MP',
        'MQ',
        'MR',
        'MS',
        'MT',
        'MU',
        'MV',
        'MW',
        'MX',
        'MY',
        'MZ',
        'NA',
        'NC',
        'NE',
        'NF',
        'NG',
        'NI',
        'NL',
        'NO',
        'NP',
        'NR',
        'NU',
        'NZ',
        'OM',
        'PA',
        'PE',
        'PF',
        'PG',
        'PH',
        'PK',
        'PL',
        'PR',
        'PS',
        'PT',
        'PW',
        'PY',
        'QA',
        'RE',
        'RO',
        'RS',
        'RU',
        'RW',
        'SA',
        'SB',
        'SC',
        'SD',
        'SE',
        'SG',
        'SI',
        'SK',
        'SL',
        'SM',
        'SN',
        'SO',
        'SR',
        'SS',
        'ST',
        'SV',
        'SX',
        'SY',
        'SZ',
        'TC',
        'TD',
        'TG',
        'TH',
        'TJ',
        'TK',
        'TL',
        'TM',
        'TN',
        'TO',
        'TR',
        'TT',
        'TV',
        'TW',
        'TZ',
        'UA',
        'UG',
        'US',
        'UY',
        'UZ',
        'VA',
        'VC',
        'VE',
        'VG',
        'VI',
        'VN',
        'VU',
        'WS',
        'YE',
        'YT',
        'ZA',
        'ZM',
        'ZW',
        'AN',
        'AS',
        'AX',
        'BL',
        'BQ',
        'BV',
        'CS',
        'CX',
        'FO',
        'GG',
        'HK',
        'HM',
        'IM',
        'IO',
        'JE',
        'MF',
        'MO',
        'PM',
        'PN',
        'SH',
        'SJ',
        'TF',
        'UM',
        'WF',
        'XK',
    ]
    moneyOperator: Literal[
        'MPS',
        'MPX',
        'MTN',
        'TIGO',
        'VODAFONE',
        'AIRTEL',
        'FMM',
        'ORANGEMONEY',
        'EMONEY',
        'FREEMONEY',
    ]
    countryCallingCode: str | None = None
    currencyCode: Literal['USD', 'EUR', 'RUB', 'GHS', 'KES', 'UGX', 'TZS', 'RWF', 'ZMW', 'XAF', 'XOF'] | None = None
    exchangeRate: float | None = None
    feeDescription: str | None = None
    availableMoneyOperators: (
        Sequence[
            Literal[
                'MPS',
                'MPX',
                'MTN',
                'TIGO',
                'VODAFONE',
                'AIRTEL',
                'FMM',
                'ORANGEMONEY',
                'EMONEY',
                'FREEMONEY',
            ]
        ]
        | None
    ) = None
    paymentSystem: Literal['FLUTTERWAVE', 'ONTOP', 'PAPARA', 'PAYONEER', 'SOLAR', 'FILE']


class OnTopAccountView(WithdrawalAccountView):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    onTopEmail: Annotated[
        str,
        Field(
            max_length=300,
            min_length=0,
            pattern='^(?:[a-z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\'*+/=?^_`{|}~-]+)*|"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$',
        ),
    ]
    paymentSystem: Literal['FLUTTERWAVE', 'ONTOP', 'PAPARA', 'PAYONEER', 'SOLAR', 'FILE']


class PaparaAccountView(WithdrawalAccountView):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    accountNumber: str
    paymentSystem: Literal['FLUTTERWAVE', 'ONTOP', 'PAPARA', 'PAYONEER', 'SOLAR', 'FILE']


class PayoneerAccountView(WithdrawalAccountView):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    lastStatusUpdate: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    payeeId: str | None = None
    paymentSystem: Literal['FLUTTERWAVE', 'ONTOP', 'PAPARA', 'PAYONEER', 'SOLAR', 'FILE']


class SolarAccountView(WithdrawalAccountView):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    solarEmail: str
    paymentSystem: Literal['FLUTTERWAVE', 'ONTOP', 'PAPARA', 'PAYONEER', 'SOLAR', 'FILE']


class WithdrawalTransactionView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    startDate: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    endDate: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    failMsg: str | None = None
    failMsgCode: str | None = None
    id: int | None = None
    account: (
        FilePaymentSystemAccountView
        | FlutterwaveAccountView
        | OnTopAccountView
        | PaparaAccountView
        | PayoneerAccountView
        | SolarAccountView
        | None
    ) = None
    amount: float | None = None
    status: Literal['PENDING', 'OPENED', 'SUCCESS', 'FAILED'] | None = None


class CalculateAmountView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    source_amounts: CalculatedWithdrawalAmountsView
    destination_amounts: CalculatedWithdrawalAmountsView


class TransactionImportLog(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    log: Sequence[TransactionImportLogItem] | None = None


class AvailableWithdrawalAccountView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    account: (
        FilePaymentSystemAccountView
        | FlutterwaveAccountView
        | OnTopAccountView
        | PaparaAccountView
        | PayoneerAccountView
        | SolarAccountView
        | None
    ) = None
    flattenPayload: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None
    paymentSystem: Literal['FLUTTERWAVE', 'ONTOP', 'PAPARA', 'PAYONEER', 'SOLAR', 'FILE'] | None = None
    minAmount: float | None = None
    currencyRate: float | None = None
    suggestedAccount: FlutterwaveSuggestedAccountView | None = None


class UserWithdrawalAccountsView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    payment_provider: str | None = None
    accounts: Sequence[WithdrawalAccountExtendedView] | None = None


class UserWithdrawalAccountsDeprecatedView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    payment_provider: str | None = None
    accounts: Sequence[AvailableWithdrawalAccountView] | None = None
