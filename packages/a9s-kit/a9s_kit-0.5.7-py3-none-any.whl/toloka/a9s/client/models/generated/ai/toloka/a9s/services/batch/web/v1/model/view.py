# generated by datamodel-codegen:
#   filename:  a9s.json

from __future__ import annotations

from typing import Annotated, Any, Literal, Mapping, Sequence

from pydantic import BaseModel, ConfigDict, Field, SerializeAsAny

from .form import (
    BatchActiveTaskLimitFormV1,
    BatchCompletionFormV1,
    BatchFirstNTaskLimitFormV1,
    BatchUpdateFormV1ExtensionsV1,
)


class BatchViewV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    status: Literal['STOPPED', 'STARTED', 'COMPLETED'] | None = None
    private_name: Annotated[str | None, Field(max_length=100, min_length=1)] = None
    priority_order: Annotated[int | None, Field(ge=1, le=5)] = None
    metadata: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None
    extensions: BatchUpdateFormV1ExtensionsV1 | None = None
    tags: Annotated[Sequence[str] | None, Field(max_length=100, min_length=0)] = None
    hidden: bool | None = None
    completion: BatchCompletionFormV1 | None = None
    active_task_limit: BatchActiveTaskLimitFormV1 | None = None
    first_n_task_limit: BatchFirstNTaskLimitFormV1 | None = None
    project_id: str
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    project_major_version: int | None = None


class BatchListViewV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    data: Sequence[BatchViewV1] | None = None
    has_more: bool | None = None


class BatchStatsViewV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    batch_id: str | None = None
    calculated_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    all_annotations_present: bool | None = None
