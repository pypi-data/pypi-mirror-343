# generated by datamodel-codegen:
#   filename:  webhooks.json

from __future__ import annotations

from typing import Annotated, Literal, Sequence

from pydantic import BaseModel, ConfigDict, Field

from ..service.event.payload import WebhookPayload


class WebhookEventFilterParamV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    id_gt: str | None = None
    id_gte: str | None = None
    id_lt: str | None = None
    id_lte: str | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    created_at_gt: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    created_at_gte: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    created_at_lt: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    created_at_lte: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at_gt: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at_gte: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at_lt: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at_lte: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    sort: str | None = None
    limit: Annotated[int | None, Field(ge=1, le=500)] = None


class WebhookEventViewV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    origin_event_id: str | None = None
    origin_event_created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    idempotency_key: str | None = None
    webhook_id: str | None = None
    action: Literal['QUORUM_COMPLETED', 'STATUS_WORKFLOW_STATUS_CHANGED'] | None = None
    payload: WebhookPayload | None = None
    status: Literal['PENDING', 'PROCESSING', 'SENT', 'INTERNAL_ERROR'] | None = None
    sent_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    internal_error_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    internal_error: str | None = None
    processing_before: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    retry_after: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    attempt: int | None = None
    last_attempt_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    last_fail_reason: str | None = None


class WebhookEventListViewV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    data: Sequence[WebhookEventViewV1] | None = None
    has_more: bool | None = None
