# generated by datamodel-codegen:
#   filename:  gts.json

from __future__ import annotations

from typing import Annotated, Any, Mapping, Sequence

from pydantic import BaseModel, ConfigDict, Field, SerializeAsAny


class GroundTruthOutputValueForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    output_value: Mapping[str, Any] | SerializeAsAny[BaseModel]
    weight: float | None = None


class GroundTruthBucketForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    input_spec: Mapping[str, Any] | SerializeAsAny[BaseModel]
    output_spec: Mapping[str, Any] | SerializeAsAny[BaseModel]
    name: Annotated[str, Field(max_length=500, min_length=0)]


class GroundTruthForm(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    ground_truth_bucket_id: str
    cluster: str | None = None
    input_value: Mapping[str, Any] | SerializeAsAny[BaseModel]
    output_values: Sequence[GroundTruthOutputValueForm]
    meta: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None
    unavailable_for_account_ids: Annotated[Sequence[str] | None, Field(max_length=100, min_length=0)] = None
