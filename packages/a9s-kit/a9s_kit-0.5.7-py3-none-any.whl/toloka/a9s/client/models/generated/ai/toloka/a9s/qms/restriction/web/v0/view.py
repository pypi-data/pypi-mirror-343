# generated by datamodel-codegen:
#   filename:  qms.json

from __future__ import annotations

from typing import Annotated, Any, Literal, Mapping, Sequence

from pydantic import BaseModel, ConfigDict, Field, SerializeAsAny


class RestrictionViewV0(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    account_id: str | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    created_by: str | None = None
    modified_by: str | None = None
    private_comment: str | None = None
    scope: Literal['PROJECT', 'BATCH', 'ALL_PROJECTS'] | None = None
    scope_access_level: Literal['NO_ACCESS', 'ONLY_ASSIGNED'] | None = None
    expire_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    project_id: str | None = None
    batch_id: str | None = None
    created_by_type: Literal['QUALITY_CONFIG', 'USER'] | None = None
    modified_by_type: Literal['QUALITY_CONFIG', 'USER'] | None = None
    meta: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None


class RestrictionListViewV0(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    data: Sequence[RestrictionViewV0] | None = None
    has_more: bool
