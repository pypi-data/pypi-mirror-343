# generated by datamodel-codegen:
#   filename:  a9s.json

from __future__ import annotations

from typing import Annotated, Any, Mapping, Sequence

from pydantic import BaseModel, ConfigDict, Field, SerializeAsAny


class AnnotationHistoryViewAnnotationEdit(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    annotation_edit_id: str | None = None
    status: str | None = None
    account_id: str | None = None
    display_name: str | None = None


class AnnotationHistoryViewDontTouchMe(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    assignment_id: str | None = None
    status: str | None = None
    account_id: str | None = None
    display_name: str | None = None


class AnnotationHistoryViewSnapshot(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    version: int | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    values: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None
    assignment: AnnotationHistoryViewDontTouchMe | None = None
    annotation_edit: AnnotationHistoryViewAnnotationEdit | None = None


class AnnotationHistoryView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    snapshots: Sequence[AnnotationHistoryViewSnapshot] | None = None
