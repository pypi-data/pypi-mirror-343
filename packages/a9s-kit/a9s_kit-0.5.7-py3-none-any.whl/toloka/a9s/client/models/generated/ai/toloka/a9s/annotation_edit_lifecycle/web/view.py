# generated by datamodel-codegen:
#   filename:  a9s.json

from __future__ import annotations

from typing import Annotated, Any, Literal, Mapping, Sequence

from pydantic import BaseModel, ConfigDict, Field, SerializeAsAny


class AnnotationEditView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    annotation_id: str | None = None
    draft_values: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None
    account_id: str | None = None
    status: Literal['IN_PROGRESS', 'DONE', 'CANCELLED'] | None = None
    cancellation_reason: Literal['SKIPPED', 'EXPIRED'] | None = None
    expiring_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    batch_id: str | None = None
    project_id: str | None = None


class MultipleAnnotationEditsView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    annotation_edits: Sequence[AnnotationEditView] | None = None
    assignments: Sequence[AnnotationEditView] | None = None


class CreateAnnotationEditResultView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    annotation_edits: Sequence[AnnotationEditView] | None = None
    result: Literal['CREATED', 'ALREADY_EDITING', 'MAX_IN_PROGRESS_REACHED'] | None = None
