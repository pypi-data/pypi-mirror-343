# generated by datamodel-codegen:
#   filename:  a9s.json

from __future__ import annotations

from typing import Annotated, Any, Literal, Mapping, Sequence

from pydantic import BaseModel, ConfigDict, Field, SerializeAsAny

from .viewform import (
    BatchActiveTaskLimitViewForm,
    BatchCompletionViewForm,
    BatchFirstNTaskLimitViewForm,
)


class BatchAnnotationEditStatisticsView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    in_progress_count: Annotated[int, Field(ge=0)]
    done_count: Annotated[int, Field(ge=0)]
    cancelled_count: Annotated[int, Field(ge=0)]


class BatchExtensionInstanceConfigView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    extension_id: str
    instance_id: str
    view_url: str | None = None


class BatchExtensionsView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    instances: Sequence[BatchExtensionInstanceConfigView] | None = None


class BatchStatisticsView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    annotation_edits: BatchAnnotationEditStatisticsView
    assignments: BatchAnnotationEditStatisticsView


class BatchView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    project_id: str
    id: str
    name: str
    priority_order: Annotated[int, Field(ge=1, le=5)]
    status: Literal['STOPPED', 'STARTED', 'COMPLETED']
    status_change_reason: str | None = None
    current_statistics: BatchStatisticsView | None = None
    metadata: Mapping[str, Any] | SerializeAsAny[BaseModel] | None = None
    extensions: BatchExtensionsView | None = None
    created_at: Annotated[str, Field(examples=['2024-08-12T12:41:07.629'])]
    modified_at: Annotated[str, Field(examples=['2024-08-12T12:41:07.629'])]
    tags: Sequence[str] | None = None
    hidden: bool | None = None
    project_major_version: int | None = None
    completion: BatchCompletionViewForm | None = None
    active_task_limit: BatchActiveTaskLimitViewForm | None = None
    first_n_task_limit: BatchFirstNTaskLimitViewForm | None = None


class BatchProgressView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str
    status: Literal['STOPPED', 'STARTED', 'COMPLETED']
    current_statistics: BatchStatisticsView


class BatchListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    batches: Sequence[BatchView]


class BatchSpecView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    batch_id: str | None = None
    view_spec: str | None = None
    instruction: str | None = None


class PerformerView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    account_id: str | None = None
    display_name: str | None = None


class BatchAllowedActionsView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    allowed_actions: Sequence[str] | None = None


class BatchListProgressView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    batches: Sequence[BatchProgressView]
