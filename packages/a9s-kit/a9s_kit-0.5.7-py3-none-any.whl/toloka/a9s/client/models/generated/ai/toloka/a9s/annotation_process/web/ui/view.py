# generated by datamodel-codegen:
#   filename:  a9s.json

from __future__ import annotations

from typing import Annotated, Any, Literal, Mapping, Sequence

from pydantic import BaseModel, ConfigDict, Field, SerializeAsAny

from ...model.agreement import AgreementAnnotationProcessView
from ...model.annotation_edit_time import AnnotationEditTimeAnnotationProcessView
from ...model.metric_provider import MetricProviderAnnotationProcessView
from ...model.post_acceptance import PostAcceptanceAnnotationProcessView
from ...model.quorum import QuorumAnnotationProcessView
from ...model.status_workflow import StatusWorkflowAnnotationProcessView
from ...model.temporal import TemporalAnnotationProcessView


class AnnotationProcessesProgressView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    total_count: int | None = None
    completed_count: int | None = None
    status_workflow_count: int | None = None
    status_workflow_completed_count: int | None = None
    post_acceptance_count: int | None = None
    post_acceptance_completed_count: int | None = None
    quorum_count: int | None = None
    quorum_completed_count: int | None = None
    metric_provider_count: int | None = None
    metric_provider_completed_count: int | None = None
    agreement_count: int | None = None
    agreement_completed_count: int | None = None
    annotation_edit_time_count: int | None = None
    annotation_edit_time_completed_count: int | None = None


class AnnotationProcessConfigListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    data: Sequence[Mapping[str, Any] | SerializeAsAny[BaseModel]] | None = None


class AnnotationProcessView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    version: int | None = None
    annotation_id: str | None = None
    annotation_group_id: str | None = None
    batch_id: str | None = None
    project_id: str | None = None
    completed: bool | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    data: (
        AgreementAnnotationProcessView
        | AnnotationEditTimeAnnotationProcessView
        | MetricProviderAnnotationProcessView
        | PostAcceptanceAnnotationProcessView
        | QuorumAnnotationProcessView
        | StatusWorkflowAnnotationProcessView
        | TemporalAnnotationProcessView
        | None
    ) = None


class UpdateStatusResultView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    process_id: str | None = None
    result: Literal['SUCCESS', 'FAILED'] | None = None
    message: str | None = None
    annotation_process: AnnotationProcessView | None = None


class AnnotationProcessListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    processes: Sequence[AnnotationProcessView] | None = None


class UpdateStatusResultListView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    update_status_results: Sequence[UpdateStatusResultView] | None = None
