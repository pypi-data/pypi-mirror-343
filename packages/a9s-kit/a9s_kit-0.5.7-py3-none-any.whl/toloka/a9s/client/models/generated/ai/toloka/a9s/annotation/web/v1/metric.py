# generated by datamodel-codegen:
#   filename:  a9s.json

from __future__ import annotations

from typing import Annotated, Any, Literal, Sequence

from pydantic import BaseModel, ConfigDict, Field


class AnnotationMetricUpdateFormV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    name: Annotated[str, Field(pattern='^[-_a-zA-Z0-9]{1,128}$')]
    type: Literal['UNIT_INTERVAL', 'LONG']
    value: Any


class AnnotationMetricViewV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    annotation_id: str | None = None
    annotation_version: int | None = None
    batch_id: str | None = None
    name: str | None = None
    type: Literal['UNIT_INTERVAL', 'LONG'] | None = None
    value: Any | None = None


class AnnotationMetricCreateFormV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    annotation_id: str
    annotation_version: int
    name: Annotated[str, Field(pattern='^[-_a-zA-Z0-9]{1,128}$')]
    type: Literal['UNIT_INTERVAL', 'LONG']
    value: Any


class AnnotationMetricListViewV1(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    metrics: Sequence[AnnotationMetricViewV1] | None = None
