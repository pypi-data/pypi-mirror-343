# generated by datamodel-codegen:
#   filename:  qms.json

from __future__ import annotations

from typing import Annotated, Sequence

from pydantic import BaseModel, ConfigDict, Field

from .viewform import (
    QualityFilterViewForm,
    QualityMetricViewForm,
    QualityRuleViewForm,
    QualityTriggerViewForm,
    RevokeAccessRuleViewForm,
)


class AsyncQualityConfigViewV0(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    rules: Sequence[QualityRuleViewForm] | None = None
    triggers: Sequence[QualityTriggerViewForm] | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None


class AsyncQualityConfigListViewV0(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    data: Sequence[AsyncQualityConfigViewV0] | None = None
    has_more: bool


class QualityConfigViewV0(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    id: str | None = None
    metrics: Sequence[QualityMetricViewForm] | None = None
    revoke_access_rules: Sequence[RevokeAccessRuleViewForm] | None = None
    filters: Sequence[QualityFilterViewForm] | None = None
    created_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    modified_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None


class QualityConfigListViewV0(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    data: Sequence[QualityConfigViewV0] | None = None
    has_more: bool
