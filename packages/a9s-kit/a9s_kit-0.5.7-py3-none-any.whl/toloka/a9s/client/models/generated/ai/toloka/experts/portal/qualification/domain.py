# generated by datamodel-codegen:
#   filename:  experts-portal-qualification.json

from __future__ import annotations

from typing import Mapping, Sequence
from uuid import UUID

from pydantic import BaseModel, ConfigDict

from ....platform.common.search.web.v0.filter import (
    ListFilterFunctionV0,
    SimpleFilterFunctionV0,
)


class UserQualificationResult(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    metrics: Mapping[str, float] | None = None


class QualificationFilterQualificationRequirement(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    qualification_id: UUID
    filter_function: ListFilterFunctionV0 | SimpleFilterFunctionV0 | None = None
    suggest_pipeline_id: str | None = None


class QualificationFilterRequirements(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    required: Sequence[UUID] | None = None
    qualifications: Sequence[QualificationFilterQualificationRequirement] | None = None


class MatchFilterResult(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    missed_required_qualification_ids: Sequence[UUID] | None = None
    missed_required_qualifications: Sequence[QualificationFilterQualificationRequirement] | None = None
    qualified: bool | None = None
