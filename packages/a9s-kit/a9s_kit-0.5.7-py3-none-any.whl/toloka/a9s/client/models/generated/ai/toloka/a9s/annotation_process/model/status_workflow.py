# generated by datamodel-codegen:
#   filename:  a9s.json

from __future__ import annotations

from typing import Annotated, Mapping, Sequence

from pydantic import BaseModel, ConfigDict, Field

from .ParticularAnnotationProcessViewJava.lang.ObjectJava.lang import Object


class StatusWorkflowAnnotationProcessViewTimeout(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    expiring_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None
    paused_at: Annotated[str | None, Field(examples=['2024-08-12T12:41:07.629'])] = None


class StatusWorkflowAnnotationProcessViewTransition(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    text: str | None = None
    system: bool | None = None
    privileged: bool | None = None
    validation_required: bool | None = None


class StatusWorkflowAnnotationProcessViewUserView(BaseModel):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    account_id: str | None = None
    login: str | None = None
    display_name: str | None = None


class StatusWorkflowAnnotationProcessView(Object):
    model_config = ConfigDict(
        extra='allow',
        populate_by_name=True,
    )
    annotation_process_id: str | None = None
    status_workflow_version: int | None = None
    status: str | None = None
    status_is_initial: bool | None = None
    completed: bool | None = None
    comment: str | None = None
    text: str | None = None
    allowed_transitions: Mapping[str, StatusWorkflowAnnotationProcessViewTransition] | None = None
    iteration_count: Mapping[str, int] | None = None
    responsible: StatusWorkflowAnnotationProcessViewUserView | None = None
    unavailable_for: Sequence[str] | None = None
    timeouts: Mapping[str, StatusWorkflowAnnotationProcessViewTimeout] | None = None
    priority_order: int | None = None
