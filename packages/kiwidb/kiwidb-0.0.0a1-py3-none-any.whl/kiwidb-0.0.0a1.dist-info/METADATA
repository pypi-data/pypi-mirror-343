Metadata-Version: 2.4
Name: kiwidb
Version: 0.0.0a1
Summary: Small in-memory, key-value database.
Home-page: https://github.com/ernestofgonzalez/kiwidb
Author: Ernesto GonzÃ¡lez
License: Apache License, Version 2.0
Project-URL: Source code, https://github.com/ernestofgonzalez/kiwidb
Project-URL: Issues, https://github.com/ernestofgonzalez/kiwidb/issues
Project-URL: CI, https://github.com/ernestofgonzalez/kiwidb/actions
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: click
Requires-Dist: click-default-group>=1.2.3
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: license-file
Dynamic: project-url
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# kiwidb

`kiwidb` is a small, in-memory key-value database written in pure Python. It started as a way to experiment with in-memory key-value storage, inspired by the guide from [Building a Simple Redis Server with Python](https://charlesleifer.com/blog/building-a-simple-redis-server-with-python/). It is designed for learning and experimentation.

## Some feature highlights

- Supports basic key-value operations (e.g., `SET`, `GET`, `DEL`).
- In-memory storage for fast access.

## Getting Started

### Installation

Clone the repository:

```bash
git clone https://github.com/ernestofgonzalez/kiwidb.git
cd kiwidb
```

### Using as a library

Run the `kiwidb` server:

```bash
python kiwidb
```

Interact with the database using a client (to be implemented or use a Python script):

```python
import kiwidb

db = kiwidb.Client()
db.set("key", "value")
print(db.get("key"))  # Outputs: value
db.delete("key")
```
