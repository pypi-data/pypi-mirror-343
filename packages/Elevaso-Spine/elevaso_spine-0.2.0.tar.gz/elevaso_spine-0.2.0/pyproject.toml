[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name =  "Elevaso-Spine"
description = "Core library for use in all projects (i.e. standardized logging, command line interface, etc.)"
authors = [
  {name = "Elevaso, LLC", email = "code@elevaso.org"}
]
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
license = {text = "GPL-3.0-or-later"}
# license-files = ["LICENSE"]
keywords = ["elevaso", "library", "log", "thread", "cli", "core"]
requires-python = ">=3.9.1"
dynamic = ["version", "dependencies"]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
namespaces = true

[tool.setuptools.package-data]
"elevaso_spine.log.data" = ["*.json"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
version = {attr = "src.elevaso_spine.__version__"}

[project.urls]
Documentation = "https://spine.elevaso.tech/"
Source = "https://gitlab.com/elevaso/spine/spine-py/"
Tracker = "https://gitlab.com/elevaso/spine/spine-py/-/issues"
Changelog = "https://spine.elevaso.tech/main/change_log.html"

[tool.bandit]
exclude_dirs = ["build","docs","dist","tests","tools"]
number = 4
recursive = true
targets = "src"

[tool.black]
line-length = 79

[tool.pylint.format]
max-line-length = "79"

[tool.coverage.run]
branch = true

[tool.coverage.report]
fail_under = 100

[tool.pylint.'MESSAGES CONTROL']
disable = ["bad-continuation"]

[tool.pylint.'REPORTS']
evaluation="10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)"
output-format="text"
reports="no"
score="yes"
