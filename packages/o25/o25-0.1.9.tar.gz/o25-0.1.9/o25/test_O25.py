import numpy as np
from O25_hyp import O25_hyp  # Your translated function

# --- Define inputs EXACTLY like MATLAB ---
l = np.array([350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800])

Rrs = np.array([0.0017327,0.0017472,0.0017629,0.0017754,0.0017876,0.0018043,0.001819,0.0018332,0.0018459,0.0018605,0.0018736,0.0018891,0.0019086,0.0019238,0.0019407,0.001957,0.0019749,0.0019924,0.0020121,0.0020366,0.0020556,0.0020762,0.0020972,0.0021179,0.0021404,0.0021626,0.0021857,0.0022116,0.0022348,0.0022576,0.002282,0.0023066,0.0023313,0.0023551,0.0023808,0.0024068,0.0024367,0.0024614,0.0024879,0.0025125,0.002537,0.0025604,0.0025856,0.0026104,0.0026348,0.0026569,0.0026806,0.0027051,0.0027291,0.0027506,0.0027723,0.0027931,0.0028139,0.0028318,0.0028506,0.0028714,0.00289,0.0029078,0.0029246,0.0029399,0.0029579,0.002977,0.0029944,0.0030144,0.0030333,0.0030528,0.0030768,0.0030968,0.0031163,0.0031373,0.0031596,0.0031799,0.0031992,0.0032194,0.0032389,0.0032594,0.0032792,0.0032978,0.0033201,0.0033359,0.0033511,0.0033661,0.0033828,0.003399,0.0034182,0.0034346,0.003455,0.0034756,0.0034987,0.0035277,0.0035585,0.0035954,0.0036298,0.0036647,0.0037037,0.0037411,0.0037835,0.0038248,0.0038666,0.0039087,0.0039477,0.0039883,0.0040318,0.0040741,0.0041143,0.0041535,0.0042006,0.0042343,0.0042673,0.0043038,0.0043368,0.0043671,0.0043992,0.0044292,0.0044609,0.004497,0.0045351,0.0045731,0.0046125,0.0046535,0.0046928,0.0047349,0.0047858,0.004831,0.0048785,0.0049276,0.0049745,0.0050181,0.0050611,0.0051105,0.0051561,0.0052008,0.005247,0.0052931,0.0053403,0.0053861,0.0054328,0.0054721,0.0055169,0.0055619,0.0056147,0.0056549,0.0056994,0.0057392,0.0057779,0.0058093,0.0058434,0.005872,0.0059057,0.0059385,0.0059735,0.0060047,0.0060341,0.0060588,0.0060855,0.0060949,0.0060998,0.0060832,0.0060658,0.0060377,0.0060205,0.0059932,0.0059606,0.0059437,0.0059245,0.005935,0.0059443,0.0059825,0.0060224,0.006052,0.0060839,0.0061252,0.0061644,0.0062032,0.0062414,0.0062728,0.0063025,0.0063243,0.0063481,0.0063686,0.0063955,0.0064061,0.006419,0.0064426,0.0064563,0.0064667,0.0064746,0.0064804,0.006481,0.0064807,0.0064822,0.006475,0.0064718,0.0064498,0.0064254,0.0063889,0.0063577,0.0063309,0.0062958,0.0062407,0.0061906,0.0061599,0.0061289,0.0061145,0.0061002,0.0061016,0.006106,0.0061129,0.0061362,0.0061271,0.0061185,0.0061059,0.0060961,0.0060862,0.0060724,0.0060571,0.0060404,0.0059973,0.0059572,0.0059047,0.0058501,0.0057844,0.0057194,0.0056346,0.0055513,0.005449,0.0053448,0.0052322,0.0051242,0.0049798,0.004841,0.0046973,0.0045584,0.004392,0.0042332,0.0040675,0.0039141,0.0037782,0.0036465,0.0034845,0.0033349,0.003197,0.0030705,0.0029316,0.002804,0.002662,0.0025336,0.0024095,0.0022962,0.0021579,0.0020345,0.0020151,0.0019962,0.0019374,0.0018813,0.0018506,0.0018213,0.0018053,0.0017898,0.0017812,0.0017731,0.0017659,0.0017583,0.0017515,0.0017445,0.0017367,0.0017295,0.0017213,0.0017135,0.0016975,0.0016841,0.0016719,0.0016601,0.0016498,0.0016391,0.0016281,0.0016174,0.0016032,0.0015899,0.0015852,0.0015805,0.0015656,0.0015508,0.0015411,0.0015309,0.0015219,0.0015126,0.0015008,0.0014891,0.0014802,0.001472,0.0014534,0.0014353,0.0014224,0.0014101,0.0013984,0.0013868,0.001372,0.0013571,0.0013456,0.0013339,0.0013099,0.0012862,0.0012624,0.0012392,0.0012138,0.0011893,0.0011653,0.00114,0.0011115,0.0010839,0.0010668,0.0010497,0.0010356,0.0010215,0.0010109,0.0010002,0.00099031,0.00098077,0.0009737,0.00096678,0.00095759,0.00094881,0.00094399,0.00093966,0.00093485,0.00093064,0.00092273,0.0009156,0.0009136,0.00091242,0.00090729,0.00090263,0.000899,0.00089566,0.00089144,0.00088757,0.00088241,0.00087755,0.00086987,0.00086231,0.00085391,0.00084541,0.0008344,0.00082347,0.00080975,0.00079627,0.00078293,0.00076973,0.00075748,0.00074699,0.00072456,0.00070318,0.000681,0.00065999,0.00063829,0.00061791,0.00059842,0.0005801,0.00055645,0.00053473,0.00051533,0.00049727,0.00047828,0.0004606,0.00044104,0.00042299,0.00040515,0.00038878,0.00037027,0.00035347,0.00033944,0.00032645,0.00031307,0.00030077,0.00028682,0.00027407,0.00026276,0.00025233,0.00023618,0.00022195,0.00021608,0.0002105,0.00020507,0.0001999,0.00019565,0.00019157,0.00018836,0.00018524,0.00018224,0.00017932,0.00017759,0.00017591,0.0001742,0.0001725,0.00017132,0.00017018,0.00016961,0.00016903,0.00016875,0.00016817,0.00016783,0.00016751,0.00016717,0.00016684,0.00016673,0.00016661,0.00016674,0.00016687,0.00016702,0.00016716,0.00016747,0.00016778,0.00016806,0.00016833,0.0001686,0.00016888,0.00017062,0.00017239,0.00017383,0.00017526,0.0001763,0.00017737,0.00017849,0.00017962,0.00018109,0.0001826,0.00018453,0.0001865,0.00018851,0.00019054,0.00019268,0.00019486,0.00019706,0.00019932,0.00020127,0.00020326,0.00020489,0.00020655,0.00020825,0.00020999,0.00021168,0.00021339,0.00021501,0.00021665,0.0002171,0.00021754,0.00021798,0.00021842,0.00021885,0.00021928])

geom_old = np.array([30, 45, 90])  # Original geometry: [sun_zenith, view_zenith, rel_azimuth] in degrees
geom_new = np.array([0, 0, 0])     # Target geometry (e.g., nadir)

# --- Run the function ---
a, bb, Rrs_N = O25_hyp(l, Rrs, geom_old, geom_new)

# --- Print results ---
print("Absorption (a):", a)
print("Backscattering (bb):", bb)
print("Normalized Rrs (Rrs_N):", Rrs_N)