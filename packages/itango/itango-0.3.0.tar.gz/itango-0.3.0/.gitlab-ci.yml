---
variables:
  TWINE_USERNAME: __token__
  TWINE_PASSWORD: secret

default:
  image: ghcr.io/astral-sh/uv:python3.11-bookworm
  tags:
    - docker
    - linux
    - amd64

stages:
  - check
  - build
  - test
  - release

run-pre-commit:
  stage: check
  image: registry.gitlab.com/tango-controls/docker/pre-commit
  script:
    - pre-commit run --all-files
  rules:
    # Disable detached pipeline on MR
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: "$CI_COMMIT_BRANCH || $CI_COMMIT_TAG"
      exists:
        - .pre-commit-config.yaml

build-pypi-package:
  stage: build
  script:
    - uv build --no-sources
  artifacts:
    expire_in: 1 day
    paths:
      - dist/

test-itango:
  stage: test
  image: ghcr.io/prefix-dev/pixi:latest
  parallel:
    matrix:
      - PIXI_ENV:
          - "py39"
          - "py310"
          - "py311"
          - "py312"
          - "py313"
          - "ipython85"
          - "ipython835"
          - "ipython91"
  before_script:
    - apt update
    - apt install -y --no-install-recommends git
  script:
    - pixi list -e $PIXI_ENV
    - pixi run -e $PIXI_ENV test --cov-append --cov-branch --cov-report=term --cov-report html --cov-report xml:coverage.xml --junitxml=report.xml
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    when: always
    paths:
      - htmlcov
      - coverage.xml
      - report.xml
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  environment:
    name: code-coverage/$CI_COMMIT_REF_SLUG/${PIXI_ENV}
    auto_stop_in: 1 week
    url: "https://${CI_PROJECT_NAMESPACE}.gitlab.io/-/${CI_PROJECT_NAME}/-/jobs/${CI_JOB_ID}/artifacts/htmlcov/index.html"


# Documentation is on readthedocs
# We only test doc generation here
test-docs:
  image: ghcr.io/prefix-dev/pixi:latest
  stage: test
  needs: []
  before_script:
    - apt update
    - apt install -y --no-install-recommends git
  script:
    - pixi run doc
    - echo "Documentation can be found at https://$CI_PROJECT_NAMESPACE.gitlab.io/-/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/doc/build/index.html"
  artifacts:
    when: always
    paths:
      - doc/build
  environment:
    name: Docs-dev
    url: "https://$CI_PROJECT_NAMESPACE.gitlab.io/-/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/doc/build/index.html"

release-pypi-package:
  stage: release
  script:
    - uvx twine upload dist/*
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
