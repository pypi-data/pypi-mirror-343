name: Wheel builder

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            python: 310
            platform_id: win_amd64
          - os: windows-latest
            python: 311
            platform_id: win_amd64
          - os: windows-latest
            python: 312
            platform_id: win_amd64

          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 311
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 312
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014

          - os: macos-13
            python: 310
            platform_id: macosx_x86_64
          - os: macos-13
            python: 311
            platform_id: macosx_x86_64
          - os: macos-13
            python: 312
            platform_id: macosx_x86_64

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install the project
        run: uv sync --only-dev

      - name: build wheel
        env:
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
        run: uv run cibuildwheel --output-dir dist

      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-cp${{ matrix.python }}-${{ matrix.platform_id }}
          path: dist/*

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Optional, use if you use setuptools_scm
          submodules: true # Optional, use if you have submodules

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  release:
    name: Release
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build_wheels, make_sdist]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          # repository-url: https://test.pypi.org/legacy/
