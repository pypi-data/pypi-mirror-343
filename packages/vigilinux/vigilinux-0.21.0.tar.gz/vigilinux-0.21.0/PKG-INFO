Metadata-Version: 2.4
Name: vigilinux
Version: 0.21.0
Summary: Vigi is an AI assistant for running commands in natural language.
Home-page: https://github.com/naumanAhmed3/VigiLinux-Shell-Interpreter
Author: Subhan_Rauf
Author-email: raufsubhan45@gmail.com
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: google-generativeai
Requires-Dist: python-dotenv==0.19.2
Requires-Dist: setuptools
Requires-Dist: importlib_resources
Requires-Dist: SpeechRecognition
Requires-Dist: pyaudio
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

```markdown
# Vigi - Natural Language Terminal Assistant

**Vigi** is an AI-powered terminal assistant that lets you interact with your operating system‚Äôs command-line interface using natural language. Just type what you want to do in plain English, and **Vigi** will handle the rest by generating safe, context-aware commands using Google Gemini.

---

## üöÄ Installation

Install the package directly from PyPI. The recommended way is to install it within a virtual environment or for the current user:

```bash
# Recommended (inside a virtual environment or for the current user)
pip install vigilinux

# Or specifically using pip3 if pip points to Python 2
pip3 install vigilinux
```

**Alternative (Linux System-Wide Installation - Use with Caution):**

If you need to install `vigilinux` on Linux, you can use `sudo pip3`.

```bash
# System-wide install on Linux 
sudo pip3 install vigilinux
```



---

## ‚ö° Usage

Once installed, simply run `vigi` followed by your natural language command in quotes:

```bash
vigi "your natural language command here"
```

For example:

```bash
vigi "show me all Python files in the current directory"
```

**Vigi** will translate your request into the appropriate terminal command, show it to you for confirmation (unless configured otherwise), and then execute it upon approval.

---

## üîê API Key Setup

**First-Time Use:**
On your first run, **Vigi** will prompt you to enter your Google Gemini API key. This key is stored securely as an environment variable under the name `GEMINI_API_KEY`, so you don‚Äôt have to enter it again for subsequent uses within the same user environment setup.

**Changing the API Key:**
If you ever need to change the key, you can set the environment variable directly before running `vigi`:

*   **On Linux/macOS:**
    ```bash
    export GEMINI_API_KEY="your_new_key"
    ```
    *(To make this change permanent, add this line to your shell's configuration file, such as `~/.bashrc`, `~/.zshrc`, or `~/.profile`, and then restart your shell or run `source ~/.your_config_file`.)*

*   **On Windows (PowerShell):**
    ```powershell
    $env:GEMINI_API_KEY = "your_new_key"
    ```
    *(To make this change permanent in PowerShell, you can add this line to your PowerShell profile script. Find its location by typing `$profile` in PowerShell. Alternatively, set it permanently via the System Properties -> Environment Variables GUI.)*

*   **On Windows (Command Prompt - Temporary):**
    ```cmd
    set GEMINI_API_KEY=your_new_key
    ```
    *(This sets the variable only for the current `cmd.exe` session. For a permanent change in Command Prompt environments, use the System Properties -> Environment Variables GUI.)*

---

## üß† Features

*   **Natural Language Interface:** Interact with your terminal using plain English.
*   **Gemini-Powered:** Leverages Google Gemini for intelligent command generation.
*   **Context-Aware:** Remembers the current working directory for relevant commands.
*   **Cross-Platform:** Works on Linux, macOS, and Windows.
*   **Safety Focused:** Includes safeguards to prevent execution of potentially harmful commands (user confirmation is typically required).
*   **Easy Setup:** Simple installation and API key configuration.
*   **Lightweight:** Minimal dependencies.

---

## üõ†Ô∏è Requirements

*   **Python:** Version `3.6` or higher.
*   **PIP:** Python package installer.
*   **Google Gemini API Key:** A valid API key from Google AI Studio or Google Cloud.
*   **Internet Connection:** Required to communicate with the Gemini API.

---
```
