"use strict";(self.webpackChunk_jupytergis_jupytergis_qgis=self.webpackChunk_jupytergis_jupytergis_qgis||[]).push([[4],{4:(e,t,o)=>{o.r(t),o.d(t,{default:()=>G});var r,n=o(903),a=o(894),i=o(594),s=o(453),l=o(378),d=o(335),c=o(113),g=o(256),m=o(464),p=o(177);class y{constructor(e){this.collaborative=void 0===document.querySelectorAll("[data-jupyter-lite-root]")[0],this._disposed=!1,this._annotationModel=e.annotationModel}get name(){throw"Not implemented"}get contentType(){throw"Not implemented"}get fileFormat(){return"base64"}get isDisposed(){return this._disposed}dispose(){this._disposed=!0}preferredLanguage(e){return""}createNew(e){return new a.JupyterGISModel({sharedModel:e.sharedModel,languagePreference:e.languagePreference,annotationModel:this._annotationModel})}}class u extends y{get name(){return"jupytergis-qgzmodel"}get contentType(){return"QGZ"}}class h extends y{get name(){return"jupytergis-qgsmodel"}get contentType(){return"QGS"}}!function(e){e.exportQgis="jupytergis:export"}(r||(r={}));const G=[{id:"@jupytergis/jupytergis-qgis:qgisplugin",requires:[a.IJupyterGISDocTracker,i.IThemeManager,n.ICollaborativeDrive,a.IJGISExternalCommandRegistryToken,l.ConsolePanel.IContentFactory,s.IEditorServices,c.IRenderMimeRegistry,l.IConsoleTracker,a.IAnnotationToken],optional:[i.ICommandPalette],autoStart:!0,activate:async(e,t,o,n,s,l,c,y,G,S,I)=>{const f=await(0,m.requestAPI)("jupytergis_qgis/backend-check",{method:"POST",body:JSON.stringify({})}),{installed:w}=f,Q=()=>(w||(0,i.showErrorMessage)("QGIS is not installed","QGIS is required to open QGIS files"),w),T=new p.JupyterGISDocumentWidgetFactory({name:"JupyterGIS QGS Factory",modelName:"jupytergis-qgsmodel",fileTypes:["QGS"],defaultFor:["QGS"],tracker:t,commands:e.commands,externalCommandRegistry:s,backendCheck:Q,manager:e.serviceManager,contentFactory:l,rendermime:y,mimeTypeService:c.mimeTypeService,consoleTracker:G}),x=new p.JupyterGISDocumentWidgetFactory({name:"JupyterGIS QGZ Factory",modelName:"jupytergis-qgzmodel",fileTypes:["QGZ"],defaultFor:["QGZ"],tracker:t,commands:e.commands,externalCommandRegistry:s,backendCheck:Q,manager:e.serviceManager,contentFactory:l,rendermime:y,mimeTypeService:c.mimeTypeService,consoleTracker:G});e.docRegistry.addWidgetFactory(T),e.docRegistry.addWidgetFactory(x),e.docRegistry.addModelFactory(new h({annotationModel:S})),e.docRegistry.addModelFactory(new u({annotationModel:S})),e.docRegistry.addFileType({name:"QGS",displayName:"QGS",mimeTypes:["application/octet-stream"],extensions:[".qgs",".QGS"],fileFormat:"base64",contentType:"QGS",icon:m.logoMiniIcon}),e.docRegistry.addFileType({name:"QGZ",displayName:"QGZ",mimeTypes:["application/octet-stream"],extensions:[".qgz",".QGZ"],fileFormat:"base64",contentType:"QGZ",icon:m.logoMiniIconQGZ});const j=()=>new a.JupyterGISDoc;n.sharedModelFactory.registerDocumentFactory("QGS",j),n.sharedModelFactory.registerDocumentFactory("QGZ",j);const v=(r,n)=>{n.title.icon=m.logoMiniIconQGZ,n.context.pathChanged.connect((()=>{t.save(n)})),o.themeChanged.connect(((e,t)=>n.model.themeChanged.emit(t))),t.add(n),e.shell.activateById("jupytergis::leftControlPanel"),e.shell.activateById("jupytergis::rightControlPanel")};T.widgetCreated.connect(v),x.widgetCreated.connect(v),w&&(e.commands.addCommand(r.exportQgis,{label:"Export To QGZ",isEnabled:()=>!!t.currentWidget&&t.currentWidget.model.sharedModel.editable,execute:async e=>{var o,r;const a=".jGIS",s=".qgz",l=null===(o=t.currentWidget)||void 0===o?void 0:o.model.sharedModel;if(!l)return;const c=t.currentWidget.model.filePath;let p=null!==(r=e.filepath)&&void 0!==r?r:null;if(p||(p=(await i.InputDialog.getText({label:"File name",placeholder:d.PathExt.basename(c,a),title:"Export the project to QGZ file"})).value),null===p)return;p?p.endsWith(s)||(p=`${p}${s}`):p=`${d.PathExt.basename(c,a)}${s}`;let y=d.PathExt.dirname(c);y.includes(":")&&(y=y.split(":")[1]);const u=d.PathExt.join(y,p),h={layers:l.layers,sources:l.sources,layerTree:l.layerTree.slice().reverse(),options:l.options};let G=!0;if(await n.get(u,{content:!1}).catch((()=>{G=!1})),G&&!(await(0,i.showDialog)({title:"Export the project to QGZ file",body:`The file ${p} already exists.\nDo you want to overwrite it ?`})).button.accept)return;const S=await(0,m.requestAPI)("jupytergis_qgis/export",{method:"POST",body:JSON.stringify({path:u,virtual_file:h})});if(S.exported){if(S.logs.warnings.length){const e=document.createElement("pre");e.textContent=`${p} has been exported with warnings\n  - ${S.logs.warnings.join("\n  - ")}`;const t=new g.Widget({node:e});await(0,i.showDialog)({title:"Export the project to QGZ file",body:t,buttons:[i.Dialog.okButton()]})}}else(0,i.showErrorMessage)("Export the project to QGZ file",S.logs.errors.length?S.logs.errors.join("\n"):"Unknown error")}}),I&&I.addItem({command:r.exportQgis,category:"JupyterGIS"})),console.log("@jupytergis/jupytergis-qgis:qgisplugin is activated!")}}]}}]);