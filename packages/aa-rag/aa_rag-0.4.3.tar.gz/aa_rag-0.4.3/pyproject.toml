[project]
name = "aa-rag"
version = "0.4.3"
description = "RAG server for ai2apps."
readme = "README.md"
authors = [
    { name = "jarlor", email = "jarlorzhang@outlook.com" }
]
requires-python = ">=3.10"
dependencies = [
    "fastapi[standard]==0.115.12",
    "langchain==0.3.23",
    "langchain-community==0.3.21",
    "langchain-core==0.3.51",
    "langchain-milvus==0.1.9",
    "langchain-openai==0.3.12",
    "markitdown==0.1.1",
    "openai==1.72.0",
    "pandas==2.2.3",
    "pymilvus==2.5.6",
    "python-dotenv==1.0.1",
    "rank-bm25==0.2.2",
    "tinydb==4.8.2",
    "pydantic-settings==2.8.1",
    "jieba==0.42.1",
    "nltk==3.9.1",
    "boto3",
    "fastmcp>=2.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[project.scripts]
aarag = "aa_rag.main:startup"

[project.optional-dependencies]
online = [
    "lancedb>=0.19.0",
    "neo4j>=5.28.1",
    "pymongo>=4.11.1",
    "future>=1.0.0",
    "graspologic",
    "lightrag-hku>=1.2.2",
    "nano-vectordb>=0.0.4.3",
    "networkx>=3.4.2",
    "pipmaster>=0.4.0",
]
lightrag = [
    "future>=1.0.0",
    "graspologic",
    "lightrag-hku>=1.2.2",
    "nano-vectordb>=0.0.4.3",
    "networkx>=3.4.2",
    "pipmaster>=0.4.0",
]


[tool.poe.tasks]
# lint and format tasks
format = "ruff format --line-length 120"
check = "ruff check src/ --fix"
_lint_mypy = "mypy --ignore-missing-imports --install-types --non-interactive --package src.aa_rag"

# test tasks
test = "pytest --verbose --color=yes tests"

# init tasks
_init_install-hooks = "pre-commit install"

# semantic-release tasks
_tag_changelog = "semantic-release changelog"
_tag_version = "semantic-release version --no-push"
_tag_update_toml_version = { shell = "update-toml update --path project.version --value $(semantic-release version --print)" }

[tool.poe.tasks.action]
cmd = "python scripts/poe_action.py"


[[tool.poe.tasks.lint]]
sequence = [
    "check",
    "_lint_mypy"
]
ignore_fail = 'return_non_zero'

[[tool.poe.tasks.init]]
sequence = [
    "_init_install-hooks"
]
ignore_fail = 'return_non_zero'

[[tool.poe.tasks.validate]]
sequence = [
    "lint",
    "test"
]
ignore_fail = 'return_non_zero'


[[tool.poe.tasks.tag]]
sequence = [
    "validate",
    "_tag_changelog",
    "_tag_update_toml_version",
    "_tag_version"
]


[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "poethepoet>=0.33.1",
    "pre-commit>=4.1.0",
    "pytest",
    "python-semantic-release",
    "ruff>=0.9.5",
    "update-toml>=0.2.1",
    "jupyter>=1.1.1"
]


[semantic_release]
assets = ["pyproject.toml","uv.lock"]
[semantic_release.remote]
ignore_token_for_push = true
