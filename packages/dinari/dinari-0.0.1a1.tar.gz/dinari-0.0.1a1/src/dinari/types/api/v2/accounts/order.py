# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from typing import Dict, List, Optional
from typing_extensions import Literal

from ....._models import BaseModel

__all__ = ["Order"]


class Order(BaseModel):
    id: str
    """Identifier of the order"""

    asset_token_quantity: float
    """Total amount of assets involved"""

    brokerage_order_status: Literal[
        "PENDING_SUBMIT",
        "PENDING_CANCEL",
        "PENDING_ESCROW",
        "PENDING_FILL",
        "ESCROWED",
        "SUBMITTED",
        "CANCELLED",
        "FILLED",
        "REJECTED",
        "REQUIRING_CONTACT",
        "ERROR",
    ]
    """Status of the order"""

    chain_id: int
    """Blockchain that transaction was run on"""

    order_contract_address: str
    """Smart Contract address that order came from"""

    order_side: Literal["BUY", "SELL"]
    """Indicates if order is a buy or sell"""

    order_tif: Literal["DAY", "GTC", "IOC", "FOK"]
    """Indicates how long order is valid"""

    order_transaction_hash: str
    """Transaction hash for the order"""

    order_type: Literal["MARKET", "LIMIT"]
    """Indicates what type of order"""

    payment_token_quantity: float
    """Total amount of payment involved"""

    smart_contract_order_id: str
    """Unique identifier of this Order generated by the order contract."""

    cancel_transaction_hash: Optional[str] = None
    """Transaction hash for cancellation of order"""

    fees: Optional[List[Dict[str, Optional[object]]]] = None
    """List of fees associated with order"""

    network_fee_in_usd: Optional[float] = None
    """Total amount of network fee taken in USD"""
