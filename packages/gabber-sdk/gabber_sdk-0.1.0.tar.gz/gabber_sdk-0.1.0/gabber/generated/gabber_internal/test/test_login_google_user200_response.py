# coding: utf-8

"""
    Session API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gabber.generated.gabber_internal.models.login_google_user200_response import LoginGoogleUser200Response

class TestLoginGoogleUser200Response(unittest.TestCase):
    """LoginGoogleUser200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LoginGoogleUser200Response:
        """Test LoginGoogleUser200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LoginGoogleUser200Response`
        """
        model = LoginGoogleUser200Response()
        if include_optional:
            return LoginGoogleUser200Response(
                user = gabber.generated.gabber_internal.models.user.User(
                    id = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    admin = True, ),
                token = '',
                new_user = True
            )
        else:
            return LoginGoogleUser200Response(
                user = gabber.generated.gabber_internal.models.user.User(
                    id = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    admin = True, ),
                token = '',
                new_user = True,
        )
        """

    def testLoginGoogleUser200Response(self):
        """Test LoginGoogleUser200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
