# coding: utf-8

"""
    Gabber API Reference

    The Gabber API is a set of APIs that allow you to interact with the Gabber platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gabber.generated.gabber.models.list_tool_definitions200_response import ListToolDefinitions200Response

class TestListToolDefinitions200Response(unittest.TestCase):
    """ListToolDefinitions200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListToolDefinitions200Response:
        """Test ListToolDefinitions200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListToolDefinitions200Response`
        """
        model = ListToolDefinitions200Response()
        if include_optional:
            return ListToolDefinitions200Response(
                next_page = '',
                total_count = 56,
                values = [
                    gabber.generated.gabber.models.tool_definition.ToolDefinition(
                        id = '', 
                        name = '', 
                        description = '', 
                        parameters = [
                            gabber.generated.gabber.models.tool_definition_parameter.ToolDefinitionParameter(
                                name = '', 
                                description = '', 
                                type = 'string', 
                                required = True, 
                                default = '', )
                            ], 
                        call_settings = gabber.generated.gabber.models.tool_definition_call_settings.ToolDefinitionCallSettings(
                            id = '', 
                            destination = null, ), )
                    ]
            )
        else:
            return ListToolDefinitions200Response(
                total_count = 56,
                values = [
                    gabber.generated.gabber.models.tool_definition.ToolDefinition(
                        id = '', 
                        name = '', 
                        description = '', 
                        parameters = [
                            gabber.generated.gabber.models.tool_definition_parameter.ToolDefinitionParameter(
                                name = '', 
                                description = '', 
                                type = 'string', 
                                required = True, 
                                default = '', )
                            ], 
                        call_settings = gabber.generated.gabber.models.tool_definition_call_settings.ToolDefinitionCallSettings(
                            id = '', 
                            destination = null, ), )
                    ],
        )
        """

    def testListToolDefinitions200Response(self):
        """Test ListToolDefinitions200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
