# coding: utf-8

"""
    Session API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gabber.generated.gabber_internal.models.attach_livekit_room200_response_config_generative_context import AttachLivekitRoom200ResponseConfigGenerativeContext

class TestAttachLivekitRoom200ResponseConfigGenerativeContext(unittest.TestCase):
    """AttachLivekitRoom200ResponseConfigGenerativeContext unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AttachLivekitRoom200ResponseConfigGenerativeContext:
        """Test AttachLivekitRoom200ResponseConfigGenerativeContext
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AttachLivekitRoom200ResponseConfigGenerativeContext`
        """
        model = AttachLivekitRoom200ResponseConfigGenerativeContext()
        if include_optional:
            return AttachLivekitRoom200ResponseConfigGenerativeContext(
                id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                project = '',
                human = '',
                latest_messages = [
                    gabber.generated.gabber_internal.models.attach_livekit_room_200_response_config_generative_context_latest_messages_inner.attachLivekitRoom_200_response_config_generative_context_latest_messages_inner(
                        id = '', 
                        speaking_ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        speaking_started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        role = 'assistant', 
                        realtime_session = '', 
                        content = [
                            null
                            ], 
                        tool_calls = [
                            gabber.generated.gabber_internal.models.attach_livekit_room_200_response_config_generative_context_latest_messages_inner_tool_calls_inner.attachLivekitRoom_200_response_config_generative_context_latest_messages_inner_tool_calls_inner(
                                id = '', 
                                type = 'function', 
                                function = gabber.generated.gabber_internal.models.attach_livekit_room_200_response_config_generative_context_latest_messages_inner_tool_calls_inner_function.attachLivekitRoom_200_response_config_generative_context_latest_messages_inner_tool_calls_inner_function(
                                    name = '', 
                                    arguments = { }, ), )
                            ], )
                    ]
            )
        else:
            return AttachLivekitRoom200ResponseConfigGenerativeContext(
                id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                project = '',
                latest_messages = [
                    gabber.generated.gabber_internal.models.attach_livekit_room_200_response_config_generative_context_latest_messages_inner.attachLivekitRoom_200_response_config_generative_context_latest_messages_inner(
                        id = '', 
                        speaking_ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        speaking_started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        role = 'assistant', 
                        realtime_session = '', 
                        content = [
                            null
                            ], 
                        tool_calls = [
                            gabber.generated.gabber_internal.models.attach_livekit_room_200_response_config_generative_context_latest_messages_inner_tool_calls_inner.attachLivekitRoom_200_response_config_generative_context_latest_messages_inner_tool_calls_inner(
                                id = '', 
                                type = 'function', 
                                function = gabber.generated.gabber_internal.models.attach_livekit_room_200_response_config_generative_context_latest_messages_inner_tool_calls_inner_function.attachLivekitRoom_200_response_config_generative_context_latest_messages_inner_tool_calls_inner_function(
                                    name = '', 
                                    arguments = { }, ), )
                            ], )
                    ],
        )
        """

    def testAttachLivekitRoom200ResponseConfigGenerativeContext(self):
        """Test AttachLivekitRoom200ResponseConfigGenerativeContext"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
