# coding: utf-8

"""
    Gabber API Reference

    The Gabber API is a set of APIs that allow you to interact with the Gabber platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gabber.generated.gabber.models.webhook_message_realtime_session_state_changed import WebhookMessageRealtimeSessionStateChanged

class TestWebhookMessageRealtimeSessionStateChanged(unittest.TestCase):
    """WebhookMessageRealtimeSessionStateChanged unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebhookMessageRealtimeSessionStateChanged:
        """Test WebhookMessageRealtimeSessionStateChanged
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebhookMessageRealtimeSessionStateChanged`
        """
        model = WebhookMessageRealtimeSessionStateChanged()
        if include_optional:
            return WebhookMessageRealtimeSessionStateChanged(
                type = 'realtime_session.state_changed',
                payload = gabber.generated.gabber.models.webhook_message_realtime_session_state_changed_payload.WebhookMessageRealtimeSessionStateChangedPayload(
                    previous_realtime_session = gabber.generated.gabber.models.webhook_message_realtime_session_state_changedpayload_session.WebhookMessageRealtimeSessionStateChangedpayloadSession(
                        id = '', 
                        state = 'ended', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        project = '', 
                        human = '', 
                        simulated = True, 
                        config = gabber.generated.gabber.models.realtime_session_config.RealtimeSessionConfig(
                            general = gabber.generated.gabber.models.realtime_session_general_config.RealtimeSessionGeneralConfig(
                                time_limit_s = 56, 
                                save_messages = True, ), 
                            input = gabber.generated.gabber.models.realtime_session_input_config.RealtimeSessionInputConfig(
                                interruptable = True, 
                                parallel_listening = True, ), 
                            generative = gabber.generated.gabber.models.realtime_session_generative_config.RealtimeSessionGenerativeConfig(
                                llm = gabber.generated.gabber.models.llm.LLM(
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    id = '', 
                                    name = '', 
                                    project = '', 
                                    type = '', 
                                    compliance = True, 
                                    description = '', ), 
                                voice_override = gabber.generated.gabber.models.voice.Voice(
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    id = '', 
                                    name = '', 
                                    language = '', 
                                    service = '', 
                                    model = '', 
                                    voice = '', 
                                    embeddings = [
                                        1.337
                                        ], 
                                    cartesia_voice_id = '', 
                                    elevenlabs_voice_id = '', 
                                    project = '', 
                                    human = '', 
                                    preview_url = '', 
                                    pricing = gabber.generated.gabber.models.voice_pricing.VoicePricing(
                                        price_per_second = '', 
                                        currency = '', 
                                        product_name = '', ), 
                                    tags = [
                                        gabber.generated.gabber.models.voice_tag.VoiceTag(
                                            name = '', 
                                            human_name = '', )
                                        ], 
                                    _extra = gabber.generated.gabber.models._extra._extra(), ), 
                                persona = gabber.generated.gabber.models.persona.Persona(
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    description = '', 
                                    id = '', 
                                    image_url = '', 
                                    name = '', 
                                    project = '', 
                                    human = '', 
                                    gender = 'male', 
                                    voice = '', ), 
                                scenario = gabber.generated.gabber.models.scenario.Scenario(
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    id = '', 
                                    name = '', 
                                    project = '', 
                                    prompt = '', 
                                    human = '', ), 
                                context = gabber.generated.gabber.models.context.Context(
                                    id = '', 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    project = '', 
                                    human = '', 
                                    latest_messages = [
                                        gabber.generated.gabber.models.context_message.ContextMessage(
                                            id = '', 
                                            speaking_ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            speaking_started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            role = 'assistant', 
                                            realtime_session = '', 
                                            content = [
                                                null
                                                ], 
                                            tool_calls = [
                                                gabber.generated.gabber.models.context_message_tool_call.ContextMessageToolCall(
                                                    id = '', 
                                                    type = 'function', 
                                                    function = gabber.generated.gabber.models.context_message_tool_call_function.ContextMessageToolCallFunction(
                                                        name = '', 
                                                        arguments = gabber.generated.gabber.models.arguments.arguments(), ), )
                                                ], )
                                        ], ), 
                                tool_definitions = [
                                    gabber.generated.gabber.models.tool_definition.ToolDefinition(
                                        id = '', 
                                        name = '', 
                                        description = '', 
                                        parameters = [
                                            gabber.generated.gabber.models.tool_definition_parameter.ToolDefinitionParameter(
                                                name = '', 
                                                description = '', 
                                                type = 'string', 
                                                required = True, 
                                                default = '', )
                                            ], 
                                        call_settings = gabber.generated.gabber.models.tool_definition_call_settings.ToolDefinitionCallSettings(
                                            id = '', 
                                            destination = null, ), )
                                    ], 
                                _extra = gabber.generated.gabber.models._extra._extra(), ), 
                            output = gabber.generated.gabber.models.realtime_session_output_config.RealtimeSessionOutputConfig(
                                stream_transcript = True, 
                                speech_synthesis_enabled = True, 
                                answer_message = '', ), ), 
                        data = [
                            gabber.generated.gabber.models.realtime_session_data.RealtimeSessionData(
                                type = 'caller_phone_number', 
                                value = '', )
                            ], 
                        _extra = gabber.generated.gabber.models._extra._extra(), ), 
                    current_realtime_session = gabber.generated.gabber.models.webhook_message_realtime_session_state_changedpayload_session.WebhookMessageRealtimeSessionStateChangedpayloadSession(
                        id = '', 
                        state = 'ended', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        project = '', 
                        human = '', 
                        simulated = True, 
                        config = gabber.generated.gabber.models.realtime_session_config.RealtimeSessionConfig(
                            general = gabber.generated.gabber.models.realtime_session_general_config.RealtimeSessionGeneralConfig(
                                time_limit_s = 56, 
                                save_messages = True, ), 
                            input = gabber.generated.gabber.models.realtime_session_input_config.RealtimeSessionInputConfig(
                                interruptable = True, 
                                parallel_listening = True, ), 
                            generative = gabber.generated.gabber.models.realtime_session_generative_config.RealtimeSessionGenerativeConfig(
                                llm = gabber.generated.gabber.models.llm.LLM(
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    id = '', 
                                    name = '', 
                                    project = '', 
                                    type = '', 
                                    compliance = True, 
                                    description = '', ), 
                                context = gabber.generated.gabber.models.context.Context(
                                    id = '', 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    project = '', 
                                    human = '', 
                                    latest_messages = [
                                        gabber.generated.gabber.models.context_message.ContextMessage(
                                            id = '', 
                                            speaking_ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            speaking_started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            role = 'assistant', 
                                            realtime_session = '', 
                                            content = [
                                                null
                                                ], )
                                        ], ), 
                                tool_definitions = [
                                    gabber.generated.gabber.models.tool_definition.ToolDefinition(
                                        id = '', 
                                        name = '', 
                                        description = '', 
                                        parameters = [
                                            gabber.generated.gabber.models.tool_definition_parameter.ToolDefinitionParameter(
                                                name = '', 
                                                description = '', 
                                                type = 'string', 
                                                required = True, 
                                                default = '', )
                                            ], 
                                        call_settings = gabber.generated.gabber.models.tool_definition_call_settings.ToolDefinitionCallSettings(
                                            id = '', 
                                            destination = null, ), )
                                    ], 
                                _extra = gabber.generated.gabber.models._extra._extra(), ), 
                            output = gabber.generated.gabber.models.realtime_session_output_config.RealtimeSessionOutputConfig(
                                stream_transcript = True, 
                                speech_synthesis_enabled = True, 
                                answer_message = '', ), ), 
                        data = [
                            gabber.generated.gabber.models.realtime_session_data.RealtimeSessionData(
                                type = 'caller_phone_number', 
                                value = '', )
                            ], 
                        _extra = gabber.generated.gabber.models._extra._extra(), ), )
            )
        else:
            return WebhookMessageRealtimeSessionStateChanged(
                type = 'realtime_session.state_changed',
                payload = gabber.generated.gabber.models.webhook_message_realtime_session_state_changed_payload.WebhookMessageRealtimeSessionStateChangedPayload(
                    previous_realtime_session = gabber.generated.gabber.models.webhook_message_realtime_session_state_changedpayload_session.WebhookMessageRealtimeSessionStateChangedpayloadSession(
                        id = '', 
                        state = 'ended', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        project = '', 
                        human = '', 
                        simulated = True, 
                        config = gabber.generated.gabber.models.realtime_session_config.RealtimeSessionConfig(
                            general = gabber.generated.gabber.models.realtime_session_general_config.RealtimeSessionGeneralConfig(
                                time_limit_s = 56, 
                                save_messages = True, ), 
                            input = gabber.generated.gabber.models.realtime_session_input_config.RealtimeSessionInputConfig(
                                interruptable = True, 
                                parallel_listening = True, ), 
                            generative = gabber.generated.gabber.models.realtime_session_generative_config.RealtimeSessionGenerativeConfig(
                                llm = gabber.generated.gabber.models.llm.LLM(
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    id = '', 
                                    name = '', 
                                    project = '', 
                                    type = '', 
                                    compliance = True, 
                                    description = '', ), 
                                voice_override = gabber.generated.gabber.models.voice.Voice(
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    id = '', 
                                    name = '', 
                                    language = '', 
                                    service = '', 
                                    model = '', 
                                    voice = '', 
                                    embeddings = [
                                        1.337
                                        ], 
                                    cartesia_voice_id = '', 
                                    elevenlabs_voice_id = '', 
                                    project = '', 
                                    human = '', 
                                    preview_url = '', 
                                    pricing = gabber.generated.gabber.models.voice_pricing.VoicePricing(
                                        price_per_second = '', 
                                        currency = '', 
                                        product_name = '', ), 
                                    tags = [
                                        gabber.generated.gabber.models.voice_tag.VoiceTag(
                                            name = '', 
                                            human_name = '', )
                                        ], 
                                    _extra = gabber.generated.gabber.models._extra._extra(), ), 
                                persona = gabber.generated.gabber.models.persona.Persona(
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    description = '', 
                                    id = '', 
                                    image_url = '', 
                                    name = '', 
                                    project = '', 
                                    human = '', 
                                    gender = 'male', 
                                    voice = '', ), 
                                scenario = gabber.generated.gabber.models.scenario.Scenario(
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    id = '', 
                                    name = '', 
                                    project = '', 
                                    prompt = '', 
                                    human = '', ), 
                                context = gabber.generated.gabber.models.context.Context(
                                    id = '', 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    project = '', 
                                    human = '', 
                                    latest_messages = [
                                        gabber.generated.gabber.models.context_message.ContextMessage(
                                            id = '', 
                                            speaking_ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            speaking_started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            role = 'assistant', 
                                            realtime_session = '', 
                                            content = [
                                                null
                                                ], 
                                            tool_calls = [
                                                gabber.generated.gabber.models.context_message_tool_call.ContextMessageToolCall(
                                                    id = '', 
                                                    type = 'function', 
                                                    function = gabber.generated.gabber.models.context_message_tool_call_function.ContextMessageToolCallFunction(
                                                        name = '', 
                                                        arguments = gabber.generated.gabber.models.arguments.arguments(), ), )
                                                ], )
                                        ], ), 
                                tool_definitions = [
                                    gabber.generated.gabber.models.tool_definition.ToolDefinition(
                                        id = '', 
                                        name = '', 
                                        description = '', 
                                        parameters = [
                                            gabber.generated.gabber.models.tool_definition_parameter.ToolDefinitionParameter(
                                                name = '', 
                                                description = '', 
                                                type = 'string', 
                                                required = True, 
                                                default = '', )
                                            ], 
                                        call_settings = gabber.generated.gabber.models.tool_definition_call_settings.ToolDefinitionCallSettings(
                                            id = '', 
                                            destination = null, ), )
                                    ], 
                                _extra = gabber.generated.gabber.models._extra._extra(), ), 
                            output = gabber.generated.gabber.models.realtime_session_output_config.RealtimeSessionOutputConfig(
                                stream_transcript = True, 
                                speech_synthesis_enabled = True, 
                                answer_message = '', ), ), 
                        data = [
                            gabber.generated.gabber.models.realtime_session_data.RealtimeSessionData(
                                type = 'caller_phone_number', 
                                value = '', )
                            ], 
                        _extra = gabber.generated.gabber.models._extra._extra(), ), 
                    current_realtime_session = gabber.generated.gabber.models.webhook_message_realtime_session_state_changedpayload_session.WebhookMessageRealtimeSessionStateChangedpayloadSession(
                        id = '', 
                        state = 'ended', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        project = '', 
                        human = '', 
                        simulated = True, 
                        config = gabber.generated.gabber.models.realtime_session_config.RealtimeSessionConfig(
                            general = gabber.generated.gabber.models.realtime_session_general_config.RealtimeSessionGeneralConfig(
                                time_limit_s = 56, 
                                save_messages = True, ), 
                            input = gabber.generated.gabber.models.realtime_session_input_config.RealtimeSessionInputConfig(
                                interruptable = True, 
                                parallel_listening = True, ), 
                            generative = gabber.generated.gabber.models.realtime_session_generative_config.RealtimeSessionGenerativeConfig(
                                llm = gabber.generated.gabber.models.llm.LLM(
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    id = '', 
                                    name = '', 
                                    project = '', 
                                    type = '', 
                                    compliance = True, 
                                    description = '', ), 
                                context = gabber.generated.gabber.models.context.Context(
                                    id = '', 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    project = '', 
                                    human = '', 
                                    latest_messages = [
                                        gabber.generated.gabber.models.context_message.ContextMessage(
                                            id = '', 
                                            speaking_ended_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            speaking_started_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            role = 'assistant', 
                                            realtime_session = '', 
                                            content = [
                                                null
                                                ], )
                                        ], ), 
                                tool_definitions = [
                                    gabber.generated.gabber.models.tool_definition.ToolDefinition(
                                        id = '', 
                                        name = '', 
                                        description = '', 
                                        parameters = [
                                            gabber.generated.gabber.models.tool_definition_parameter.ToolDefinitionParameter(
                                                name = '', 
                                                description = '', 
                                                type = 'string', 
                                                required = True, 
                                                default = '', )
                                            ], 
                                        call_settings = gabber.generated.gabber.models.tool_definition_call_settings.ToolDefinitionCallSettings(
                                            id = '', 
                                            destination = null, ), )
                                    ], 
                                _extra = gabber.generated.gabber.models._extra._extra(), ), 
                            output = gabber.generated.gabber.models.realtime_session_output_config.RealtimeSessionOutputConfig(
                                stream_transcript = True, 
                                speech_synthesis_enabled = True, 
                                answer_message = '', ), ), 
                        data = [
                            gabber.generated.gabber.models.realtime_session_data.RealtimeSessionData(
                                type = 'caller_phone_number', 
                                value = '', )
                            ], 
                        _extra = gabber.generated.gabber.models._extra._extra(), ), ),
        )
        """

    def testWebhookMessageRealtimeSessionStateChanged(self):
        """Test WebhookMessageRealtimeSessionStateChanged"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
