Metadata-Version: 2.4
Name: agentia
Version: 0.0.8
Summary: ChatGPT powered agents, argumented with tools
Project-URL: Repository, https://github.com/wenyuzhao/agentia
Author-email: Wenyu Zhao <wenyuzhaox@gmail.com>
License-Expression: MIT
License-File: LICENSE
Keywords: chatgpt,gpt
Requires-Python: <4.0,>=3.12
Requires-Dist: llama-index-vector-stores-chroma<0.5,>=0.4.1
Requires-Dist: llama-index<0.13,>=0.12.9
Requires-Dist: openai<2,>=1.58.1
Requires-Dist: pydantic>=2.10.4
Requires-Dist: python-dotenv<2,>=1.0.0
Requires-Dist: python-slugify<9,>=8.0.4
Requires-Dist: pyyaml<7,>=6.0.2
Requires-Dist: requests<3,>=2.31.0
Requires-Dist: rich>=14.0.0
Requires-Dist: shortuuid>=1.0.13
Requires-Dist: tiktoken<0.9,>=0.8.0
Requires-Dist: tomlkit>=0.13.2
Requires-Dist: typer<0.13,>=0.12.5
Provides-Extra: all
Requires-Dist: dataforseo-client>=1.0.45; extra == 'all'
Requires-Dist: google-api-python-client>=2.166.0; extra == 'all'
Requires-Dist: google-auth-oauthlib>=1.2.1; extra == 'all'
Requires-Dist: markdownify>=1.1.0; extra == 'all'
Requires-Dist: pymstodo>=0.2.0; extra == 'all'
Requires-Dist: streamlit-oauth>=0.1.11; extra == 'all'
Requires-Dist: streamlit>=1.44.0; extra == 'all'
Requires-Dist: tavily-python>=0.5.4; extra == 'all'
Provides-Extra: plugins
Requires-Dist: dataforseo-client>=1.0.45; extra == 'plugins'
Requires-Dist: google-api-python-client>=2.166.0; extra == 'plugins'
Requires-Dist: google-auth-oauthlib>=1.2.1; extra == 'plugins'
Requires-Dist: markdownify>=1.1.0; extra == 'plugins'
Requires-Dist: pymstodo>=0.2.0; extra == 'plugins'
Requires-Dist: tavily-python>=0.5.4; extra == 'plugins'
Description-Content-Type: text/markdown

# Agentia: Ergonomic LLM Agent Augmented with Tools


## Getting Started

```python
from agentia import Agent
from typing import Annotated

# Define a tool as a python function
def get_weather(location: Annotated[str, "The city name"]):
    """Get the current weather in a given location"""
    return { "temperature": 72 }

# Create an agent
agent = Agent(tools=[get_weather])

# Run the agent with the tool
response = await agent.chat_completion("What is the weather like in boston?")

print(response)

# Output: The current temperature in Boston is 72Â°F.
```

## Create an Agent from a Config File

1. Create a config file at `./alice.toml`

```toml
[agent]
name = "Alice" # This is the only required field
icon = "ðŸ‘©"
instructions = "You are a helpful assistant"
model = "openai/o3-mini"
plugins = ["calc", "clock", "web"]
```

2. In your python code:

```python
agent = Agent.load_from_config("./alice.toml")
```

3. Alternatively, start a REPL:

```bash
uvx agentia repl alice
```
