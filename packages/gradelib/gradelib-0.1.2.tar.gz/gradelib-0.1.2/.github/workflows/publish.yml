name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Run when tag is pushed matching pattern v*, like v0.1.0

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        include:
          - os: ubuntu-latest
            target: x86_64
          - os: windows-latest
            target: x64
          - os: macos-latest
            target: x86_64

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin build twine

    - name: Build wheels
      run: |
        maturin build --release --strip --universal2 --compatibility linux --out dist
      env:
        MACOSX_DEPLOYMENT_TARGET: '10.12'

    - name: Build source distribution
      run: |
        pip install build
        python -m build --sdist
      if: runner.os == 'Linux' && matrix.python-version == '3.10'

    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/*.whl

    - name: Publish to PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
