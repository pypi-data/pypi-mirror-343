import 'examples/Primitives/SymEnc.primitive';

Scheme SymEncSquared(SymEnc E) extends SymEnc {
    Set Message = E.Message;
    Set Ciphertext = E.Ciphertext * E.Ciphertext;
    Set Key = E.Key * E.Key;

    Key KeyGen() {
        E.Key k1 = E.KeyGen();
        E.Key k2 = E.KeyGen();
        return [k1, k2];
    }

    Ciphertext Enc(Key k, Message m) {
        E.Ciphertext c1 = E.Enc(k[0], m);
        E.Ciphertext c2 = E.Enc(k[1], m);
        return [c1, c2];
    }

    Message? Dec(Key k, Ciphertext c) {
        E.Message? m1 = E.Dec(k[0], c[0]);
        E.Message? m2 = E.Dec(k[1], c[1]);
        if (m1 != m2) {
            return None;
        }
        else {
            return m1;
        }
    }
}
