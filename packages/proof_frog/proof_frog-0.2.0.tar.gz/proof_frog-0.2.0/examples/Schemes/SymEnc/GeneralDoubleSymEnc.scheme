import 'examples/Primitives/NonNullableSymEnc.primitive';

Scheme GeneralDoubleSymEnc(SymEnc S, SymEnc T) extends SymEnc {
    requires S.Ciphertext == T.Message;

    Set Message = S.Message;
    Set Ciphertext = T.Ciphertext;
    Set Key = S.Key * T.Key;

    Key KeyGen() {
        S.Key key1 = S.KeyGen();
        T.Key key2 = T.KeyGen();
        return [key1, key2];
    }

    Ciphertext Enc(Key k, Message m) {
        S.Ciphertext c1 = S.Enc(k[0], m);
        T.Ciphertext c2 = T.Enc(k[1], c1);
        return c2;
    }

    Message Dec(Key k, Ciphertext c) {
        S.Ciphertext c2 = T.Dec(k[1], c);
        S.Message m = S.Dec(k[0], c2);
        return m;
    }
}
