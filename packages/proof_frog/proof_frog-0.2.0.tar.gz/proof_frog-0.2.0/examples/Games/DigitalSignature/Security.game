import 'examples/Primitives/DigitalSignature.primitive';

Game Real(DigitalSignature E) {
    E.SigningKey sk;
    E.VerificationKey vk;

    E.VerificationKey Initialize() {
        E.SigningKey * E.VerificationKey k = E.KeyGen();
        sk = k[0];
        vk = k[1];
        return k[1];
    }

    E.Signature GetSig(E.Message m) {
        return E.Sign(sk, m);
    }

    Bool VerifySig(E.Message m, E.Signature s) {
        return E.Verify(vk, m, s);
    }
}

Game Fake(DigitalSignature E) {
    E.SigningKey sk;
    E.VerificationKey vk;
    Set<E.Message * E.Signature> S;

    E.VerificationKey Initialize() {
        S = {};
        E.SigningKey * E.VerificationKey k = E.KeyGen();
        sk = k[0];
        vk = k[1];
        return k[1];
    }

    E.Signature GetSig(E.Message m) {
        E.Signature s = E.Sign(sk, m);
        S = S union {[m, s]};
        return s;
    }

    Bool VerifySig(E.Message m, E.Signature s) {
        return [m, s] in S;
    }
}

export as Security;
