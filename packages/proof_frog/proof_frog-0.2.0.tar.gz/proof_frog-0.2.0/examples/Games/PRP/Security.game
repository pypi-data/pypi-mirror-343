import 'examples/Primitives/PRP.primitive';

Game Real(PRP F) {
    BitString<F.lambda> k;

    Void Initialize() {
        k <- BitString<F.lambda>;
    }

    BitString<F.blen> Lookup(BitString<F.blen> x) {
        return F.evaluate(k, x);
    }
}

Game Random(PRP F) {
    Map<F.blen, F.blen> T;

    BitString<F.blen> Lookup(BitString<F.blen> x) {
        if (!(x in T)) {
            T[x] <- BitString<F.blen> \ T.values;
        }
        return T[x];
    }
}

export as Security;
